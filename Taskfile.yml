---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  # Directory paths
  KUBERNETES_DIR: "{{.ROOT_DIR}}/kubernetes"
  TERRAFORM_DIR: "{{.ROOT_DIR}}/infrastructure/terraform"
  TALOS_DIR: "{{.ROOT_DIR}}/infrastructure/talos/betty"
  BOOTSTRAP_DIR: "{{.ROOT_DIR}}/bootstrap"
  PRIVATE_DIR: "{{.ROOT_DIR}}/.private"
  SCRIPTS_DIR: "{{.ROOT_DIR}}/scripts"
  # GitHub settings
  CLUSTER: betty
  GITHUB_USER: snoopy82481
  GITHUB_REPO: home_cluster
  GITHUB_BRANCH: main
  # File paths
  AGE_FILE: "{{.ROOT_DIR}}/age.key"
  BOOTSTRAP_CONFIG_FILE: "{{.ROOT_DIR}}/config.yaml"
  KUBECONFIG_FILE: "{{.ROOT_DIR}}/kubeconfig"
  MAKEJINJA_CONFIG_FILE: "{{.ROOT_DIR}}/makejinja.toml"
  PIP_REQUIREMENTS_FILE: "{{.ROOT_DIR}}/requirements.txt"
  # Binary paths
  PYTHON_BIN: "python3"

env:
  KUBECONFIG: "{{.KUBECONFIG_FILE}}"
  PYTHONDONOTWRITEBYTECODE: "1"
  SOPS_AGE_KEY_FILE: "{{.AGE_FILE}}"
  VIRTUAL_ENV: "{{.ROOT_DIR}}/.venv"

includes:
  kubernetes:
    aliases: ["k8s"]
    taskfile: .taskfiles/kubernetes/Taskfile.yaml
  flux: .taskfiles/flux/Taskfile.yaml
  repository:
    aliases: ["repo"]
    taskfile: .taskfiles/repository/Taskfile.yaml
  talos: .taskfiles/talos/Taskfile.yaml
  sops: .taskfiles/sops/Taskfile.yaml
  workstation: .taskfiles/workstation/Taskfile.yaml
  terraform: .taskfiles/terraform/Taskfile.yaml

tasks:
  default: task -l

  init:
    desc: Initialize configuration files
    cmds:
      - mkdir -p {{.PRIVATE_DIR}}
      - cp -n {{.BOOTSTRAP_CONFIG_FILE | replace ".yaml" ".sample.yaml"}} {{.BOOTSTRAP_CONFIG_FILE}}
      - cmd: echo === Configuration file copied ===
        silent: true
      - cmd: echo Proceed with updating the configuration files...
        silent: true
      - cmd: echo {{.BOOTSTRAP_CONFIG_FILE}}
        silent: true
    status:
      - test -f "{{.BOOTSTRAP_CONFIG_FILE}}"

  configure:
    desc: Configure repository from bootstrap vars
    prompt: Any conflicting config in the root kubernetes and ansible directories will be overwritten... continue?
    deps: ["workstation:direnv", "workstation:venv", "sops:age-keygen", "init"]
    cmds:
      - task: .template
      - task: sops:encrypt
      - task: .validate

  .template:
    internal: true
    cmd: "{{.VIRTUAL_ENV}}/bin/makejinja"
    preconditions:
      - {msg: "Missing virtual environment", sh: "test -d {{.VIRTUAL_ENV}}"}
      - msg: "Missing Makejinja config file"
        sh: "test -f {{.MAKEJINJA_CONFIG_FILE}}"
      - msg: "Missing Makejinja plugin file"
        sh: "test -f {{.BOOTSTRAP_DIR}}/scripts/plugin.py"
      - msg: "Missing bootstrap config file"
        sh: "test -f {{.BOOTSTRAP_CONFIG_FILE}}"

  .validate:
    internal: true
    cmds:
      - task: kubernetes:kubeconform
