---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/gateway.networking.k8s.io/gateway_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: internal
  namespace: kube-system
  annotations:
    cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
spec:
  gatewayClassName: cilium
  addresses:
    - type: IPAddress
      value: ${SVC_INTERNAL_CILIUM_GATEWAY_ADDRESSS}
  listeners:
    - name: http-1
      protocol: HTTP
      port: 80
      hostname: "*.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
    - name: http-2
      protocol: HTTP
      port: 80
      hostname: ${SECRET_DOMAIN}
      allowedRoutes:
        namespaces:
          from: All
    - name: https-1
      protocol: HTTPS
      port: 443
      hostname: "*.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
    - name: https-2
      protocol: HTTPS
      port: 443
      hostname: ${SECRET_DOMAIN}
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: "${SECRET_DOMAIN/./-}-production-tls"
    - name: bazarr
      protocol: HTTPS
      port: 443
      hostname: "bazarr.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: bazarr-tls
    - name: bazarr-anime
      protocol: HTTPS
      port: 443
      hostname: "bazarr-anime.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: bazarr-anime-tls
    - name: bazarr-uhd
      protocol: HTTPS
      port: 443
      hostname: "bazarr-uhd.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: bazarr-uhd-tls
    - name: radarr
      protocol: HTTPS
      port: 443
      hostname: "radarr.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: radarr-tls
    - name: radarranime
      protocol: HTTPS
      port: 443
      hostname: "radarranime.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: radarranime-tls
    - name: radarruhd
      protocol: HTTPS
      port: 443
      hostname: "radarruhd.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: radarruhd-tls
    - name: sonarr
      protocol: HTTPS
      port: 443
      hostname: "sonarr.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: sonarr-tls
    - name: sonarranime
      protocol: HTTPS
      port: 443
      hostname: "sonarranime.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: sonarranime-tls
    - name: sonarruhd
      protocol: HTTPS
      port: 443
      hostname: "sonarruhd.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: sonarruhd-tls
    - name: sabnzbd
      protocol: HTTPS
      port: 443
      hostname: "sabnzbd.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: sabnzbd-tls
    - name: prowlarr
      protocol: HTTPS
      port: 443
      hostname: "prowlarr.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: prowlarr-tls
    - name: kube-prometheus-stack
      protocol: HTTPS
      port: 443
      hostname: "prometheus.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: prometheus-tls
    - name: rook-ceph-dashboard
      protocol: HTTPS
      port: 443
      hostname: "rook.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: rook-tls
    - name: grafana
      protocol: HTTPS
      port: 443
      hostname: "grafana.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: grafana-tls
    - name: homepage
      protocol: HTTPS
      port: 443
      hostname: "homepage.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: homepage-tls
    - name: qbittorrent
      protocol: HTTPS
      port: 443
      hostname: "qbittorrent.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: qbittorrent-tls
    - name: huntarr
      protocol: HTTPS
      port: 443
      hostname: "huntarr.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: huntarr-tls
    - name: readarr
      protocol: HTTPS
      port: 443
      hostname: "readarr.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: readarr-tls
    - name: alertmanager
      protocol: HTTPS
      port: 443
      hostname: "alertmanager.${SECRET_DOMAIN}"
      allowedRoutes:
        namespaces:
          from: All
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            name: alertmanager-tls
