---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app qbittorrent
  namespace: downloads
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  test:
    enable: false
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      strategy: rollback
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      qbittorrent:
        annotations:
          configmap.reloader.stakater.com/reload: cluster-settings
          secret.reloader.stakater.com/reload: qbittorrent-gluetun-secret,vpnconfig

        containers:
          app:
            nameOverride: *app

            image:
              repository: ghcr.io/home-operations/qbittorrent
              tag: 5.0.4@sha256:995c561247b069c10b1fa098186f35b3155c2df63912041f70637a9232755756

            env:
              TZ: ${TIMEZONE}
              UMASK: "022"
              QBT_WEBUI_PORT: &port 8080

            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - "ALL"

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v2/app/version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10

            resources:
              requests:
                cpu: 49m
                memory: 1024Mi
              limits:
                memory: 8192Mi

          port-forward:
            image:
              repository: ghcr.io/bjw-s-labs/gluetun-qb-port-sync
              tag: 0.0.2

            env:
              GLUETUN_CONTROL_SERVER_HOST: localhost
              GLUETUN_CONTROL_SERVER_PORT: 8000
              GLUETUN_CONTROL_SERVER_API_KEY:
                valueFrom:
                  secretKeyRef:
                    name: vpnconfig
                    key: GLUETUN_CONTROL_SERVER_API_KEY
              QBITTORRENT_HOST: localhost
              QBITTORRENT_WEBUI_PORT: *port
              CRON_ENABLED: true
              CRON_SCHEDULE: "*/5 * * * *"
              LOG_TIMESTAMP: false

            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                  - ALL

        initContainers:
          coredns:
            image:
              repository: mirror.gcr.io/coredns/coredns
              tag: 1.12.1
            args:
              - -conf
              - /etc/coredns/Corefile
            restartPolicy: Always

          gluetun:
            dependsOn:
              - coredns
            image:
              repository: ghcr.io/qdm12/gluetun
              tag: v3.40.0@sha256:2b42bfa046757145a5155acece417b65b4443c8033fb88661a8e9dcf7fda5a00

            env:
              DOT: off
              DOT_CACHING: off
              DNS_ADDRESS: "127.0.0.2"
              HTTP_CONTROL_SERVER_AUTH_CONFIG_FILEPATH: &gluetunAuthPath /gluetun/auth.toml
              VPN_INTERFACE: wg0
              VPN_TYPE: wireguard
              VPN_PORT_FORWARDING: on
              FIREWALL_OUTBOUND_SUBNETS: 10.43.0.0/16,10.42.0.0/16 # Allow access to k8s subnets
              FIREWALL_INPUT_PORTS: *port
              TZ: ${TIMEZONE}

            envFrom:
              - secretRef:
                  name: vpnconfig

            lifecycle:
              postStart:
                exec:
                  command:
                    - /bin/sh
                    - -c
                    - (ip rule del table 51820; ip -6 rule del table 51820) || true

            resources:
              limits:
                squat.ai/tun: "1"

            restartPolicy: Always

            securityContext:
              <<: *securityContext
              readOnlyRootFilesystem: false
              runAsNonRoot: false
              runAsUser: 0
              capabilities:
                add:
                  - NET_ADMIN
                  - NET_RAW

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    ingress:
      app:
        enabled: false
        className: internal
        annotations:
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          hajimari.io/enable: "true"
          hajimari.io/group: "Downloads"
          hajimari.io/icon: "cloud-download"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_hide_header "x-webkit-csp";
            proxy_hide_header "content-security-policy";
            proxy_hide_header "X-Frame-Options";
            proxy_set_header Accept-Encoding "";
            sub_filter
            '</head>'
            '<link rel="stylesheet" type="text/css" href="https://theme-park.dev/css/base/qbittorrent/nord.css">
            </head>';
            sub_filter_once on;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: *port
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host

    route:
      app:
        enabled: true
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: *app
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        enabled: true
        existingClaim: qbittorrent-config-v1
        advancedMounts:
          qbittorrent:
            app:
              - path: /config

      empty-config:
        type: emptyDir
        advancedMounts:
          qbittorrent:
            port-forward:
              - path: /config

      media:
        type: nfs
        server: ${NAS_IP}
        path: ${NFS_DATA}
        advancedMounts:
          qbittorrent:
            app:
              - path: /media

      gluetun-auth:
        type: secret
        name: qbittorrent-gluetun-secret
        advancedMounts:
          qbittorrent:
            gluetun:
              - path: *gluetunAuthPath
                subPath: auth.toml

      coredns:
        type: configMap
        name: qbittorrent-coredns
        advancedMounts:
          qbittorrent:
            coredns:
              - path: /etc/coredns/Corefile
                subPath: Corefile
                readOnly: true
