---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app omada-controller
  namespace: networking
  labels:
    - hostname: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  test:
    enable: false
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: nginx-internal
      namespace: networking
    - name: cert-manager
      namespace: cert-manager
  values:
    global:
      nameOverride: *app

    controllers:
      main:
        type: statefulset

        statefulset:
          volumeClaimTemplates:
            - name: data
              accessMode: "ReadWriteOnce"
              size: 5Gi
              storageClassName: ceph-block
              globalMounts:
                - path: /opt/tplink/EAPController/data
            - name: work
              accessMode: "ReadWriteOnce"
              size: 5Gi
              storageClassName: ceph-block
              globalMounts:
                - path: /opt/tplink/EAPController/work
            - name: logs
              accessMode: "ReadWriteOnce"
              size: 5Gi
              storageClassName: ceph-block
              globalMounts:
                - path: /opt/tplink/EAPController/logs

        containers:
          main:
            image:
              repository: mbentley/omada-controller
              tag: 5.13@sha256:eab6ecf4a14207b7aaa012a1b2f29c098f8fa8ad0645b24232ccd1d8bdcd9dfb

            env:
              TZ: ${TIMEZONE}
              MANAGE_HTTP_PORT: "8088"
              MANAGE_HTTPS_PORT: "8043"
              PORTAL_HTTP_PORT: "8088"
              PORTAL_HTTPS_PORT: "8843"
              SHOW_SERVER_LOGS: "true"
              SHOW_MONGODB_LOGS: "true"

            resources:
              requests:
                memory: 1200Mi
                cpu: 1200m
              limits:
                memory: 1500Mi

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          hajimari.io/enable: "true"
          hajimari.io/group: "web-tools"
          hajimari.io/icon: "router-wireless-settings"
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
          nginx.ingress.kubernetes.io/use-regex: "true"
          nginx.ingress.kubernetes.io/upstream-vhost: "tplink.${SECRET_DOMAIN}:8043"
          nginx.ingress.kubernetes.io/proxy-redirect-from: "~https://(.+):8043/(.+)/login$"
          nginx.ingress.kubernetes.io/proxy-redirect-to: "https://$1/$2/login"

        hosts:
          - host: &host tplink.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: main
                  port: mgmt-8043-tcp
        tls:
          - secretName: tplink-tls
            hosts:
              - *host

    route:
      main:
        enabled: false
        parentRefs:
          - name: cilium-internal
            namespace: networking
            sectionName: *app
        hostnames:
          - *host
        rules:
          backendRefs:
            - port: mgmt-8043-tcp

    service:
      main:
        enabled: true
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: ${SVC_OMADA_CONTROLLER}
        externalTrafficPolicy: Cluster
        ports:
          http:
            enabled: false
          mgmt-8088-tcp:
            enabled: true
            port: 8088
            targetPort: 8088
            protocol: TCP
          mgmt-8043-tcp:
            enabled: true
            primary: true
            port: 8043
            protocol: TCP
            targetPort: 8043
          portal-8843-tcp:
            enabled: true
            port: 8843
            protocol: TCP
            targetPort: 8843
          eap-discovery:
            enabled: true
            port: 29810
            protocol: UDP
            targetPort: 29810
          old-eap-mgmt:
            enabled: true
            port: 29811
            protocol: TCP
            targetPort: 29811
          old-eap-adopt:
            enabled: true
            port: 29812
            protocol: TCP
            targetPort: 29812
          old-eap-upgrade:
            enabled: true
            port: 29813
            protocol: TCP
            targetPort: 29813
          eap-adopt:
            enabled: true
            port: 29814
            protocol: TCP
            targetPort: 29814
          init-check:
            enabled: true
            port: 27001
            protocol: UDP
            targetPort: 27001
          old-init-info:
            enabled: true
            port: 27002
            protocol: TCP
            targetPort: 27002
          old-db-access:
            enabled: true
            port: 27017
            protocol: TCP
            targetPort: 27017
          db-access:
            enabled: true
            port: 27217
            protocol: TCP
            targetPort: 27217
