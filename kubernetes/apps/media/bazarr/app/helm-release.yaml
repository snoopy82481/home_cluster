---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app bazarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.2.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 30m
  maxHistory: 2
  test:
    enable: false
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: cluster-settings

        containers:
          main:
            nameOverride: *app

            image:
              repository: ghcr.io/onedr0p/bazarr
              tag: 1.3.1@sha256:840242bb1dfb337e5bfa579af039738bbf9948f6f33deecf451ebdd9ca509e31

            env:
              TZ: ${TIMEZONE}

            securityContext:
              runAsUser: 568
              runAsGroup: 568
              fsGroup: 568
              fsGroupChangePolicy: OnRootMismatch

            resources:
              requests:
                cpu: 10m
                memory: 250Mi
              limits:
                memory: 2000Mi

    service:
      main:
        ports:
          http:
            port: 6767

    ingress:
      main:
        enabled: false
        className: internal
        annotations:
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          hajimari.io/enable: "true"
          hajimari.io/group: "Media"
          hajimari.io/icon: "translate"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host

    route:
      main:
        enabled: true
        parentRefs:
          - name: cilium-internal
            namespace: networking
            sectionName: *app
        hostnames:
          - "bazarr.${SECRET_DOMAIN}"
        rules:
          backendRefs:
            - port: http

    persistence:
      config:
        enabled: true
        existingClaim: bazarr-config-v1
      media:
        type: nfs
        server: ${NAS_NAME}
        path: ${NFS_DATA}
        globalMounts:
          - path: /media
      backup:
        type: nfs
        server: ${NAS_NAME}
        path: ${NFS_BACKUP}
        globalMounts:
          - path: /backup
