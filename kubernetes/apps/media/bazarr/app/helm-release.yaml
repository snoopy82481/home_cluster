---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app bazarr
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  test:
    enable: false
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: cert-manager
      namespace: cert-manager
  values:
    image:
      repository: ghcr.io/onedr0p/bazarr
      tag: 1.3.0@sha256:73ebc0c56ada95872e5256309c0b2637b2b997663c8120f9d48b1c7444f14899
    env:
      TZ: ${TIMEZONE}
    service:
      main:
        ports:
          http:
            port: 6767
    ingress:
      main:
        enabled: true
        ingressClassName: internal
        annotations:
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          hajimari.io/enable: "true"
          hajimari.io/group: "Media"
          hajimari.io/icon: "translate"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
    podAnnotations:
      configmap.reloader.stakater.com/reload: cluster-settings
    persistence:
      config:
        enabled: true
        existingClaim: bazarr-config-v1
      media:
        enabled: true
        type: nfs
        server: ${NAS_NAME}
        path: /mnt/storage1/data
        mountPath: /media
      backup:
        enabled: true
        type: nfs
        server: ${NAS_NAME}
        path: /mnt/storage1/backup
        mountPath: /backup
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
