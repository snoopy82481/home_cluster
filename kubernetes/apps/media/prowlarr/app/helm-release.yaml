---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app prowlarr
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  test:
    enable: false
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: cluster-settings

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/prowlarr-nightly
              tag: 1.12.0.4187@sha256:7778b6499d79717c60d429b41475ce74ef3583ccb836e1146349446553d93791

            env:
              PROWLARR__INSTANCE_NAME: Prowlarr
              PROWLARR__PORT: &port 9696
              PROWLARR__LOG_LEVEL: info
              PROWLARR__ANALYTICS_ENABLED: "False"
              PROWLARR__API_KEY: ${PROWLARR_APIKEY}
              PROWLARR__AUTHENTICATION_METHOD: External
              PROWLARR__THEME: dark
              TZ: ${TIMEZONE}

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            securityContext:
              runAsUser: 568
              runAsGroup: 568
              runAsNonRoot: true
              fsGroup: 568
              fsGroupChangePolicy: "OnRootMismatch"
              supplementalGroups:
                - 10000

            resources:
              requests:
                cpu: 18m
                memory: 128Mi
              limits:
                memory: 256Mi

          flaresolverr:
            image:
              repository: ghcr.io/flaresolverr/flaresolverr
              tag: v3.3.12@sha256:aa83c92aefc2512a8776e30b387df57573ca5688c5e4f07858e3db84670a76c9

            env:
              TZ: ${TIMEZONE}

            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 500Mi

    service:
      main:
        ports:
          http:
            port: *port
          flaresolverr:
            port: 8191
            protocol: HTTP

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          hajimari.io/enable: "true"
          hajimari.io/group: "Media"
          hajimari.io/icon: "card-search"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: prowlarr-config-v1
        advancedMounts:
          main:
            main:
              - path: /config
                readOnly: false

      backup:
        type: nfs
        server: ${NAS_NAME}
        path: ${NFS_BACKUP}
        globalMounts:
          - path: /backup
