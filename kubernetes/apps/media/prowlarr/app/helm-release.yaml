---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app prowlarr
  namespace: media
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  test:
    enable: false
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      strategy: rollback
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: cluster-settings

        containers:
          *app :
            image:
              repository: ghcr.io/home-operations/prowlarr
              tag: 2.1.3.5208@sha256:236a73dad45baeedd1eba40a457de63a644695728a2ce28f0d254b1fe9a05822

            env:
              PROWLARR__APP__INSTANCENAME: Prowlarr
              PROWLARR__APP__THEME: dark
              PROWLARR__AUTH__METHOD: External
              PROWLARR__AUTH__REQUIRED: DisabledForLocalAddresses
              PROWLARR__AUTH__APIKEY: ${PROWLARR_APIKEY}
              PROWLARR__SERVER__PORT: &port 9696
              PROWLARR__LOG__LEVEL: info
              PROWLARR__UPDATE__BRANCH: develop
              TZ: ${TIMEZONE}

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            resources:
              requests:
                cpu: 100m
              limits:
                memory: 1Gi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      *app :
        controller: *app
        ports:
          http:
            port: *port

    route:
      *app :
        enabled: true
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: *app
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        rules:
          - backendRefs:
              - identifier: *app
                port: *port

    persistence:
      config:
        existingClaim: prowlarr-config-v1

      tmpfs:
        type: emptyDir
        advancedMounts:
          *app :
            *app :
              - path: /config/logs
                subPath: logs
              - path: /tmp
                subPath: tmp

      backup:
        type: nfs
        server: ${NAS_IP}
        path: ${NFS_BACKUP}
        globalMounts:
          - path: /backup
