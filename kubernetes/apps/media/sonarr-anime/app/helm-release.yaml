---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app sonarranime
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  test:
    enable: false
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: cluster-settings

        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            supplementalGroups:
              - 65539

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/sonarr-develop
              tag: 4.0.0.697@sha256:f0076a88ad0f8875eb2ea961a733c69039f38b99f77290158d684f0c50e99a7c

            env:
              TZ: "${TIMEZONE}"
              SONARR__INSTANCE_NAME: "Sonarr Anime"
              SONARR__API_KEY: ${SONARR_ANIME_APIKEY}
              SONARR__PORT: &port 8989
              SONARR__APPLICATION_URL: "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
              SONARR__LOG_LEVEL: info

            resources:
              requests:
                cpu: 20m
                memory: 323M
              limits:
                memory: 323M

    service:
      main:
        ports:
          http:
            port: *port

    ingress:
      main:
        enabled: true
        className: internal
        annotations:
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          hajimari.io/enable: "true"
          hajimari.io/group: "Media"
          hajimari.io/icon: "filmstrip"
          hajimari.io/appName: "Sonarr Anime"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host

    persistence:
      config:
        enabled: true
        existingClaim: sonarranime-config-v1
      media:
        existingClaim: nas-data
        globalMounts:
          - path: /media
      backup:
        existingClaim: nas-backup
        globalMounts:
          - path: /backup
