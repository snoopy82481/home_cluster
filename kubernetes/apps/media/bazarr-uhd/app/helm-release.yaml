---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bazarr-uhd
  namespace: &ns media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 30m
  maxHistory: 2
  test:
    enable: false
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
      remediateLastFailure: true
    cleanupOnFail: true
  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      bazarr-uhd:
        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: cluster-settings

        containers:
          app:
            nameOverride: *app

            image:
              repository: ghcr.io/onedr0p/bazarr
              tag: 1.5.0@sha256:5eb3ff2384c470fa351ff486b1b61660914a2ba144e908258cf111555a583356

            env:
              TZ: ${TIMEZONE}

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 6767
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes

            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - "ALL"

            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi

          subcleaner:
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.4.0@sha256:0330739a707a2969d617e859f096659ab6d149212658ac0ad7e550b59482ebf0
            env:
              GITSYNC_REPO: https://github.com/KBlixt/subcleaner
              GITSYNC_REF: master
              GITSYNC_PERIOD: 24h
              GITSYNC_ROOT: /add-ons
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext: *securityContext

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 10000
        seccompProfile:
          type: RuntimeDefault

    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 6767

    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          cert-manager.io/cluster-issuer: ${CLUSTER_CERT}
          hajimari.io/enable: "true"
          hajimari.io/group: "Media"
          hajimari.io/icon: "translate"
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: *port
        tls:
          - secretName: "{{ .Release.Name }}-tls"
            hosts:
              - *host

    route:
      app:
        enabled: false
        parentRefs:
          - name: cilium-internal
            namespace: networking
            sectionName: *app
        hostnames:
          - "{{ .Release.Name }}.${SECRET_DOMAIN}"
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      add-ons:
        type: emptyDir
      backup:
        type: nfs
        server: ${NAS_NAME}
        path: ${NFS_BACKUP}
        globalMounts:
          - path: /backup
      cache:
        type: emptyDir
        globalMounts:
          - path: /config/cache
      config:
        enabled: true
        existingClaim: bazarr-uhd-config-v1
      log:
        type: emptyDir
        globalMounts:
          - path: /config/log
      media:
        type: nfs
        server: ${NAS_NAME}
        path: ${NFS_DATA}
        globalMounts:
          - path: /media
      tmp:
        type: emptyDir
