# This manifest was generated by automation. DO NOT EDIT.
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      - ciliumcidrgroups
      - ciliuml2announcementpolicies
      - ciliumpodippools
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      - ciliuml2announcementpolicies/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
      - ciliumcidrgroups.cilium.io
      - ciliuml2announcementpolicies.cilium.io
      - ciliumpodippools.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumpodippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumpodippools
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  disable-envoy-version-check: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-envoy-config: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.42.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  node-port-range: 30000,32767
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVB6WEVMQnZBcmw4aEN4ZStEQjl3eFl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeU56RTJORGd5TjFvWERUSTJNRGN5TmpFMgpORGd5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3Ynk0WGsxQ2ZSYW9XSktlZktQTlRNOTljRVRaalVVSEhQMnovQXk4SnFKSUQxM1AKOWZBcWlmL0N3K1hLaDhDM1VEVDZZQ1V4Z3JZVUdRTXZaMFpGVjljMVM4Vjl1akZ0NEsyeFZlMFBCRVFxcUtPTwpYY250K3IvNHY5aHd3WjdDaDEwT1pka1RXMVhjL2dZQXN3UHEwbHVWT0UvaXN1NmM5ejl6bzhwb0NmdWp2eVpTCnNjYVphdzVDLzJGUDdiR05nSDdyckJtVW5VOHBRS3FGOFJReEVTWkpDVDNBTEdpcGE5RU5QeG1ubVErZ2E4a2UKcVdUMjlmTHBqYXFKbldwekZveDIzNjhTaktwSDg0cUtzeFEwam1pS3JUQlJIYS9ObnR2SmtkRlNHYTgrVUc0cQpRRWFMNzlNTmIzS2puMG5BS3NrSUYyTnFKZ2w3VDY4bzdBNzJEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTElYamZGMjFzZXoxYVpxaE9QTmc1Z0FXeC90TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0dVa29vVGg1U3hJY1phV2dRZXpocE14NERZVnlERE5HYVpVVzB4cURxci9zNHdaQVcvUHI4Ck1pZW1GeXBCU2VMazBzbnBkSVI2djR3QW5YQWR1Q0lzc0FIMEFmQ0tMSmZ1Zm0yR0RBVlBMMUhTODMwaFI4ZlIKdTZIRkIyd2tWMjc3anNEbk5VeHBGMlp0Um1tUFlSd2lEeUV1aU1ISEdEZWZUVHFGcmF0Y1cxUUxETFdhVjJaSgovQ1pyQVZ0S0dQV1hndHc1NU1ieWpqanlmZHhva2lmRXY2eU9kd0RxZHloVEgxeE15L0RUdmpBOUtoLzA5WE45CkVWRGtDeXIzL2xRQXhaR2RlU3JxTCtlZm01TktsK1hySWpXeDNYVXBlREJzazh1d09CQjd4TlBSbmJrYjZsa1AKcjd3eUl2QUprVmtWSWdaSWliZ3o3UlNMRlJEcElLSFAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd2J5NFhrMUNmUmFvV0pLZWZLUE5UTTk5Y0VUWmpVVUhIUDJ6L0F5OEpxSklEMTNQCjlmQXFpZi9DdytYS2g4QzNVRFQ2WUNVeGdyWVVHUU12WjBaRlY5YzFTOFY5dWpGdDRLMnhWZTBQQkVRcXFLT08KWGNudCtyLzR2OWh3d1o3Q2gxME9aZGtUVzFYYy9nWUFzd1BxMGx1Vk9FL2lzdTZjOXo5em84cG9DZnVqdnlaUwpzY2FaYXc1Qy8yRlA3YkdOZ0g3cnJCbVVuVThwUUtxRjhSUXhFU1pKQ1QzQUxHaXBhOUVOUHhtbm1RK2dhOGtlCnFXVDI5ZkxwamFxSm5XcHpGb3gyMzY4U2pLcEg4NHFLc3hRMGptaUtyVEJSSGEvTm50dkprZEZTR2E4K1VHNHEKUUVhTDc5TU5iM0tqbjBuQUtza0lGMk5xSmdsN1Q2OG83QTcyRHdJREFRQUJBb0lCQUVMb0V0LzJYSlRvZzBENwplYUpmeTJIUWNtaVlUbTE4UGtXajFFbWllRVA3WFZsNU0zMmk4SDN5QnVneWJxeE5RTUdCV2twajdlSlBVVWVHCkV4UGViOG96TjJPd2s0ZisxQXg0ejdwMkFPNmZRQUEzWTg0K0UySzZjNFNGa2dNNytjQlh3Y1lvbm9lM2NuZUQKeVRBSmxVb0tlTkVXdlpxL3p4T1FKVGFXaXpHT3pGaU9sU1gzcDE5WnZuRlNXbUg2NE9qMXJ3Y1dCNDkyM2Z4UAovYnhJQnZTYy9RYmdZWi80NDFWZ0IwaUpvS2d2T1l5T0Ivb0R2TDFsNmJnOUZsdVRPNHVyL3dpSWZ4TklMcFQrCk95ZWpQNEhQR2pOQUdJNkptVXUyZEh1c2Q1NjViQXRPYnpOT1gwNXMwb1AzSWhnOG8raVFsdUNEa0JJTkdRZjMKdHB0TnJRa0NnWUVBeVhWM1NtdDNoOWZVQnI1MDZ2S0tGQURJd2lEbTRtQW96bUxpbUVLUlBGREQzNGVQN082VgpJM0dhS2IybUluN1o2ckZDOG52NmE1ckdSdjQrSnJKNDBraVdEMG03SXUyd3Z4UHBiQVBuVE9XR09pMXRDM20vCkJNb3dRL1FWRTdqdm01SHNyNHRnR0l0WFp1ZklJOHdhK3dOVjhiYkRkdUJNVW1kbmIybGQ5S1VDZ1lFQTlqQVcKZ2dmTHNFR0VIdURmbUFZQ2ZUalVwVFZuY1d2MSsvL29BWE00NzByYWNwb2c2MTBiUVBTSVFJSktEVW0zalFqUAp6UFlxWkVDMThyM2JYTVMzdEIwRkMxYlg0TWlZbERwTXdBTnRCbDVDVDJMNUlDQlFTN2VYcTBleG1NWEozUWhLCjlIaTdIMzJMNnBGSXhiWCtBZExUczBVZmZFNzlST2F3TDQvM25hTUNnWUFpWTNYSWMwM0ZGM2R1NjBYajhTRFcKeDBkOXM4WVZzRnBtMklSYmYwbHhaVXY2TlJiQlYveUhQMVlVZC9ZSy8ySk5hSkxIOTVmSWxIUHlIR1laanUrRwozYk1YeXZzeHZDY21oc3lhanBRR0VVdjNWRmUvMUxsaHBPM1dPNno1WCtFdXloci80Q2U0S05qempPOGlCUzQ1CjJOanIyTW5HMmdUTk1DOTgyaHlhclFLQmdRQ0RqRUNLckxXM2NkcXlVVURJei9WR2lqWitMT0lnWmlyancrTnAKMnZMQ1VzSVZXS3hjZDd6WFlaTG92WFhxVWNpbHNONnd5NXp0UXZLMlNhTE1tRVQ5RmtDYXhZWEhGQWtMczNkTgpac2M4RHVQcDNaMzIvNjFJT0VydjkvZzdCUDBQZ1ozanNodHpBVGZoV0U2RmJ2RFNjcUF5ZTY0T1UzcmI5VlNSCnBhRVBkd0tCZ0JlbDNERXFKYWYrZ01DU2tsK1kzNmc4VnNZeEwzSU1nTkJsTDNsRjg0L3pTWVhIU2FuK3QrbGEKR1E1L3M4UlNVS0pXODlZVjh2YkxmOC9rYUFlcUd2K0RRRHZudVUxdWhpdUNoamNlL2ZkQ2svZ1hiUmtSOHhoQwowdkttSWNvZXR2c2NLSHJ6Sy9XRGNRWmlmMW1rblJZbVp1T0hFVXQ5Ylp2UmJXWTcxV3RECi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVB6WEVMQnZBcmw4aEN4ZStEQjl3eFl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeU56RTJORGd5TjFvWERUSTJNRGN5TmpFMgpORGd5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3Ynk0WGsxQ2ZSYW9XSktlZktQTlRNOTljRVRaalVVSEhQMnovQXk4SnFKSUQxM1AKOWZBcWlmL0N3K1hLaDhDM1VEVDZZQ1V4Z3JZVUdRTXZaMFpGVjljMVM4Vjl1akZ0NEsyeFZlMFBCRVFxcUtPTwpYY250K3IvNHY5aHd3WjdDaDEwT1pka1RXMVhjL2dZQXN3UHEwbHVWT0UvaXN1NmM5ejl6bzhwb0NmdWp2eVpTCnNjYVphdzVDLzJGUDdiR05nSDdyckJtVW5VOHBRS3FGOFJReEVTWkpDVDNBTEdpcGE5RU5QeG1ubVErZ2E4a2UKcVdUMjlmTHBqYXFKbldwekZveDIzNjhTaktwSDg0cUtzeFEwam1pS3JUQlJIYS9ObnR2SmtkRlNHYTgrVUc0cQpRRWFMNzlNTmIzS2puMG5BS3NrSUYyTnFKZ2w3VDY4bzdBNzJEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTElYamZGMjFzZXoxYVpxaE9QTmc1Z0FXeC90TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0dVa29vVGg1U3hJY1phV2dRZXpocE14NERZVnlERE5HYVpVVzB4cURxci9zNHdaQVcvUHI4Ck1pZW1GeXBCU2VMazBzbnBkSVI2djR3QW5YQWR1Q0lzc0FIMEFmQ0tMSmZ1Zm0yR0RBVlBMMUhTODMwaFI4ZlIKdTZIRkIyd2tWMjc3anNEbk5VeHBGMlp0Um1tUFlSd2lEeUV1aU1ISEdEZWZUVHFGcmF0Y1cxUUxETFdhVjJaSgovQ1pyQVZ0S0dQV1hndHc1NU1ieWpqanlmZHhva2lmRXY2eU9kd0RxZHloVEgxeE15L0RUdmpBOUtoLzA5WE45CkVWRGtDeXIzL2xRQXhaR2RlU3JxTCtlZm01TktsK1hySWpXeDNYVXBlREJzazh1d09CQjd4TlBSbmJrYjZsa1AKcjd3eUl2QUprVmtWSWdaSWliZ3o3UlNMRlJEcElLSFAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRT2JtQ0FsdmRwY05uTG5ESTMyTFp4ekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJM01UWTBPREk0V2hjTk1qWXdOekkyTVRZMApPREk0V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEZ0JCTkM4bS9xVFc4Yld3V2xMRVc1dXRBWjIxeHcKK0VyOXhLbUE0TjdOaDdCNzlEWkEzaTMxajhhMjI2ZFE5WUdiQlB5cFA0enE0L1hkRTN5WDZya3ZqOWg4aTRKLwpDOXVlY0hpMnJEa3BINzNaRGQvMHNkWnl4Qjh0ckhKV25yMzJBRlVjcnh1K3FEUEIrb082SGRHZXZ6Wm93SWszCm1ndEQ5b1B4RjUzQVhPOE92d1BoVWxlTGhCWURGSFRScjkvZ0NVZjhyMUIvY2gvT3UrZWRLWHJqN0Y5Z0RGVGEKakQzUGFuaFFLUTMzaXB2OHFIeFF2SVppMG1UZmNQYWZtcDc3NDAydXpLQndzb2tmM0tERHVVQTNZekhqZXZKMQpjNXhvK1p0RTByeXljdXRWUFRZbXlXWFR4dWRmU3pkU2JFR2hjNnEwYXp6cmh6RUNDVVdRZm1lakFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZMSVhqZkYyMXNlejFhWnFoT1BOZzVnQQpXeC90TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFUVElHL0l6Tm9EYzcvZUZ6TjdRcVhNQ3lYdjZWWS90cHRpOWdqS3pqQ0NUTUdjOCsKZ3NUYVI2dWcwTFY2VlBIN1JadkdXYUFjVVR4MEU4Nm4vell0TUdjRldwaDNNcEpQQkhtVFlna1Q3WjI4MFVNcwpaM1dvcTBsSE9xWlY0SFNmMWp1TXh2VWxSdkc2clgxbk56MndSZ0hhd2FSRGZZd2Njc2Fpd1ZQLy95NzdaditsCjVSbEZScUtXUjJtNnJjNjVBTjBGVEJ4djZXWUY5elNkekhRMld4cWtZcElnTWNyV0s1YjdEbU9SVHpHZmwwVUQKbGJUZnB5U3UwRnZTR1lLZENsN3p1QzFBTytMMGMwb1BGaTl0SjhNVktqZzVpV01kUVhiSEMrbTk5ZzhUMCtkNgppa0xJZy9HdHlwOEVSbTZVOWFoT3hOQ05GL2l4L0VweWFEVWpRdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNEFRVFF2SnY2azF2RzFzRnBTeEZ1YnJRR2R0Y2NQaEsvY1NwZ09EZXpZZXdlL1EyClFONHQ5WS9HdHR1blVQV0Jtd1Q4cVQrTTZ1UDEzUk44bCtxNUw0L1lmSXVDZnd2Ym5uQjR0cXc1S1IrOTJRM2YKOUxIV2NzUWZMYXh5VnA2OTlnQlZISzhidnFnendmcUR1aDNSbnI4MmFNQ0pONW9MUS9hRDhSZWR3Rnp2RHI4RAo0VkpYaTRRV0F4UjAwYS9mNEFsSC9LOVFmM0lmenJ2bm5TbDY0K3hmWUF4VTJvdzl6MnA0VUNrTjk0cWIvS2g4ClVMeUdZdEprMzNEMm41cWUrK05OcnN5Z2NMS0pIOXlndzdsQU4yTXg0M3J5ZFhPY2FQbWJSTks4c25MclZUMDIKSnNsbDA4Ym5YMHMzVW14Qm9YT3F0R3M4NjRjeEFnbEZrSDVub3dJREFRQUJBb0lCQUJXYVR3RTF2L1VvWW42UQoySXFGS25RdXY4SytsTHVRTmlzaXUvWGh1WnE0YXh5SkFISmcrcTJqbjlZaWVKQW1ITW1HUVpkUXVaWXRSWmg4Ck9KZXQydzNySVVWaGJzUXhzSXdtN0gweFBwSG9yYll3MEZnWWprV2pCQjZ6Y3BOSDI2bk5mbWUxdTBjM2tVWXoKa21Cd1g3YWZXZS9nSVZ0clQ0ck9Td3NFN0FHUXhvZGpGL2JrYTBPYWtRdThlREVhNE9zbTVKRldieTNTWmdQTgp2aXZCMHRpR3grRUZPVXJFWnhNL0tFdVdJTEYzdm1lMmJWTmdDWCtlemovMStCbndwMkx4a3VTaGEzY0xKK1NQCmN0bWovR0hsd1ZSamZPMU1FcXIwVzJ2eEN1Q2IxY0NEZy9QTUZ6cE9GeUM2TUczWnRFQ3IrMGJLcTFCekNXQmsKdFJkOGtZRUNnWUVBNkVXSFhtN2lkNWdUYmlDSTRyKzRLU011aDdJUk5SMUVOK3FvMnlGeTVmSzQ3cUczb0d4QQpCL3AzR2d4cEF2eUpUaHUyNVBwOVBPd3RHSTR5K012dEVuRUVVckFxYmRzcUVXc0cwcjhBRFhXcEpvSG9GS2VLCkZ3d1NrU0h2WExkN3FHWDQ4M01laVlWQlVCK0QrdGR2VTFpejJ0YitVQnl0d1R3MTBUeVUzMzhDZ1lFQTl1YWoKNTh3RmY3VDhkUlBteXpPTFppRCthSGJrRkxybndXYldzZ01xcGdXTTNLa1BscDVadnV0aHVkd2VLeFB3ZFc5VQppK3dRd0JSeUx6UG9IWlptMmlzOHQvMHBwWnB6SDVOOEVRMkZHeS9SUHRHQUJLaWJHaVE3cnIzdGQrU29sV1F5CmxMYm4rODM3ZkxtUlphSWNta0pDUHBQeS95Y08xTHpVaDBiaUNkMENnWUFtV0F3UDM5aE5DL0x4TkRmRXp3ZVUKNnZUc2U4M3hhY0p3UkxIWmN2MG56dGtPcysyL2N2OWpFY3NGcHRUVEpHTjZYSUxsN0NBdXBZS1FVakZCOTFCTQp3aEdIb1FOd0hVVWxtUGlJWS9XYlF6aElYaHUxQlM5N3ZJZDRKQlVDeGx1SW9rVGwwN1JQMllxOXNtWTBTOHBhCkJRT3o5ZGdIMjZRbmlVd05IYVlwK3dLQmdBYVIvS3FlYzBjQ3VmVWpvbkNsM24vSlFQdm1yZ3NmTGl1bllPODcKeGxiRXJ3cndOTW45VE1ZWDNYSGt1YWpMendwUS9CNzlHVFVEVmthTFN4SCtmcDR2cUYzOURxNnBmWWJKbGZPZQpPSHlRdVREQ3duVmRSME5hMDN2QzhoN09wdTNTek1YSVdFUUxKellhZWhRS1RGaU9pdFMvZXlmdkVpWDNJSEM1CklpckJBb0dCQU40RVJPZG1QTlZVTkl4UDZRVDNCeU41U1lkM3ZrbS8wRjg3K0JGS2N3eGFLWUFmQ0kwQ0FDQmgKb3RQOHRoNVJNK040eUVzaW5YdGV0TlRCREEzbUpaeXBNS2tlall2NUlDNFBaUThFWG5EdzV6SWdVbTFUa0xzcApkamFUaEdraUtCczU2SDd4eTZVN0dDbEhWZit0KzF5N0thOXBPLzBzMkRiK1hkSWhnRW9zCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQVB6WEVMQnZBcmw4aEN4ZStEQjl3eFl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURjeU56RTJORGd5TjFvWERUSTJNRGN5TmpFMgpORGd5TjFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3Ynk0WGsxQ2ZSYW9XSktlZktQTlRNOTljRVRaalVVSEhQMnovQXk4SnFKSUQxM1AKOWZBcWlmL0N3K1hLaDhDM1VEVDZZQ1V4Z3JZVUdRTXZaMFpGVjljMVM4Vjl1akZ0NEsyeFZlMFBCRVFxcUtPTwpYY250K3IvNHY5aHd3WjdDaDEwT1pka1RXMVhjL2dZQXN3UHEwbHVWT0UvaXN1NmM5ejl6bzhwb0NmdWp2eVpTCnNjYVphdzVDLzJGUDdiR05nSDdyckJtVW5VOHBRS3FGOFJReEVTWkpDVDNBTEdpcGE5RU5QeG1ubVErZ2E4a2UKcVdUMjlmTHBqYXFKbldwekZveDIzNjhTaktwSDg0cUtzeFEwam1pS3JUQlJIYS9ObnR2SmtkRlNHYTgrVUc0cQpRRWFMNzlNTmIzS2puMG5BS3NrSUYyTnFKZ2w3VDY4bzdBNzJEd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTElYamZGMjFzZXoxYVpxaE9QTmc1Z0FXeC90TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0dVa29vVGg1U3hJY1phV2dRZXpocE14NERZVnlERE5HYVpVVzB4cURxci9zNHdaQVcvUHI4Ck1pZW1GeXBCU2VMazBzbnBkSVI2djR3QW5YQWR1Q0lzc0FIMEFmQ0tMSmZ1Zm0yR0RBVlBMMUhTODMwaFI4ZlIKdTZIRkIyd2tWMjc3anNEbk5VeHBGMlp0Um1tUFlSd2lEeUV1aU1ISEdEZWZUVHFGcmF0Y1cxUUxETFdhVjJaSgovQ1pyQVZ0S0dQV1hndHc1NU1ieWpqanlmZHhva2lmRXY2eU9kd0RxZHloVEgxeE15L0RUdmpBOUtoLzA5WE45CkVWRGtDeXIzL2xRQXhaR2RlU3JxTCtlZm01TktsK1hySWpXeDNYVXBlREJzazh1d09CQjd4TlBSbmJrYjZsa1AKcjd3eUl2QUprVmtWSWdaSWliZ3o3UlNMRlJEcElLSFAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRUGlrNysyTmpYUk5qbjNtMmhzbWNMREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TnpJM01UWTBPREk0V2hjTk1qWXdOekkyTVRZMApPREk0V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBOHMxN3FPcy9tWExGR0JzbFphaDEKZWR4QjNKSXJxakRQc3plQURIb1ZOaDNVWkN3VmdmYW1jUkh3UzJRRlFHZHBNVkpreWtnUjV4MzVQbHd4MVN1Swo2YUxZUHN5alpKcEFKVEFpb25rZVpEYjdMZlVBMmp3cXlvL0VIWlpOUTRsa1lPSTd3eFlwZEt6b0VhVzYwV2puCjdoSUJKNE1RWE10Qit4RWRTZlFxMUdwUGcrYWZNT2JjNUpVWGRQWHVwbHlQZ0hhOStmWHVycWVnaElZRjB5RVcKMllyVUVMeXVoRE9lQmU1U1R0Z3loSkFHQ0pyUUd0MjMzYlRESW1oSFZVS3JSZTB5TUFwbHV6T3VYNGhPMHdXRwpObFNkOXY2UjVpc3dkeWhFSHczWVJZT0hLemkraDExRFZXdWpRMVNmekNRRXZ0TGRROTArb3dtc1M0TFpnYXNXCkt3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTeUY0M3hkdGJIczlXbQphb1RqellPWUFGc2Y3VEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBOHRWN2hYOWRqQXNOZUc0cHk1VXl5M1FyQ1ZOeXcKeXNiUDhEaVV0cmFyK2t1UFBaQzFDL0djZlN5WlIvRGdBdlM2K1o0V0ljcUh6UXkzd1VqTjVpL2o0OGJXaUtoNgpQOTVGMmZSck9OZ0dpS09RaFNybnpqM2xOYituOVV1VG9mTkdxUUJQektiaFFSNVVja29zNmJobG82RlpxaGdCCkpFUmdGUlFiYi96cDJIUWpLaGZIcWp0SkU4cVhBeVFnZVIrbTBOcFhsTFRwTkErNkJ5NGNxV2wyajFUV1IyZGkKNGVoQS9PejNKMFZrMXp1c0ZVMTRTNEhEaFluVjRtbW1ibjZCY3o5aHo0UUxMZEN2NFdLNUV1UmxYanFQUUJKZQpOTWZGWG1JMWduMHhrQ2tBNytUYko2bVlYZCtaSTlIQTBBNWtDN0pVbUk2RXE2WGF0Y2daaHREeQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBOHMxN3FPcy9tWExGR0JzbFphaDFlZHhCM0pJcnFqRFBzemVBREhvVk5oM1VaQ3dWCmdmYW1jUkh3UzJRRlFHZHBNVkpreWtnUjV4MzVQbHd4MVN1SzZhTFlQc3lqWkpwQUpUQWlvbmtlWkRiN0xmVUEKMmp3cXlvL0VIWlpOUTRsa1lPSTd3eFlwZEt6b0VhVzYwV2puN2hJQko0TVFYTXRCK3hFZFNmUXExR3BQZythZgpNT2JjNUpVWGRQWHVwbHlQZ0hhOStmWHVycWVnaElZRjB5RVcyWXJVRUx5dWhET2VCZTVTVHRneWhKQUdDSnJRCkd0MjMzYlRESW1oSFZVS3JSZTB5TUFwbHV6T3VYNGhPMHdXR05sU2Q5djZSNWlzd2R5aEVIdzNZUllPSEt6aSsKaDExRFZXdWpRMVNmekNRRXZ0TGRROTArb3dtc1M0TFpnYXNXS3dJREFRQUJBb0lCQVFDS1JXN28wWi9VZVVHNAo2cXl2YWZJTXhkeFVDb0lIVitqUWZRalZFaWxHT2xLY0FXYjJMa3EzRmFvc3BQZEFxQ09GelJCTkNpSDM1bC9zCm5ZQmJqNEo2Ynh5TEZ1cnQvZElOMjQyOXpRLzdyanY0L2cvUU9IZCtCOFY5dS95Z08zd0ltSTNFR2JqZUV5SE4KK3YyYkNBMGN6UEFQV2xwVkhnT2pRU25XMWRBV1NxQ3JEUERtbVU0aWl0K2VvbEN3ZkwzYjNURktqMHVyZVVyWQo5MXhlZm1pZSs2U0hJWDNCeS9BUlhZV2Nicjc0TU1yRmI2aEFmRXNjSzdCZ2NYT01QU1VzVjBMcGp2a2dJcjBhCi94TGtrUnloeXZMYVF2ekF2UFRYYm9UYXdPbEgrOWUvNE45YUNsOGNVZ1QrWWVuZUM3YUlEMWo3OG1HK3l4RHcKS2FLRG9KWUJBb0dCQVBuNm5pc3VXSVpVd2dqcFo1VTZDSG5Ba0xiaVExMHFOSU1QUHBLdmRsVjNac1NuRktNTQpRS1NJUDdWT2hjWG9SRUx0bkxOTVJCNXJZTmprTm5la3kxeHdSZktad3V2S2VuQUhYQzJYcWVvc2xLUUh0S21LCm5kcU1oNHVaRDFVa2ZBb0pZdUVBR2FBMVRhL2JLeDk2cExPM3NZSk5vR3MzSHZZOEg5TzI5RTJyQW9HQkFQaW0KbmFHZ2drTEg1Z2RBRTl5bCtpK0NPaFloTTAwQWpjdVZxcndZVklxQUFRM1g4RnpFMjFveWMvSk5pbW5SdXg4MQpwUWJzMU91MmhFaFN1M1pYMnBRa3lzVkVpQ0J1L1RsQnRzdnlYS2haM2xnekdhQWVQdytlMmZySjNHaHRRVVhTClFCczJ4NnRka1dIdkJhQXpSMGxSMC8xa3BlWElVWm4wejJ2U0x0bUJBb0dBRS95dDJOWUR6Zm5JNmQxL29yYloKSnFMMjd5aDRLbUxOZ0EwZis2cDcwNm1RVmZqbDlZTnRSN3A5SFlvQnVDa3lEQWZqbDVKcGYrVW1BVEYrQ1dMcgp2NkJhZDJORDZvWnQ4N2NpNzZKSXU2aUUyZmlqd1VxTUJJVm44UWx6NkdMYWFCTUlET1Z0SnhvYjlBdWFEeEpIClNQZFBBaFFpMTIrNDBnZE1wQ2prcjdFQ2dZRUF5bWUyd1M3TFdsa21vcGhDa3NaNVZkc0lOYU5wQXpHRU8wamwKNXA5WGtqYUlwU0EyaFEycUVVNG9uQUVLdndEKzlYVFJsVVdNUFNRaG9rM1dVNHRJWG5ka3FCZ1ZSM0dScDk0YQpVd0pDOHJmVkNxN3VHUzBGNEUxSzI1OGVUOU0vNHZvM1BPL21zVlJGV0JjZDJUNWt0UVpyTGtXVDFleXVvRWhyCjREVUQ5Z0VDZ1lFQXhUSzZyRDVHQzc4c1NnTFdVeEdQYmVtRTl2RGFReXcvZEplQnFZaldrakVFakovN2N2L0UKeWpTWnI5c09mU1pOSytORnZzZk1KRm1PMFRnVkRHNnpxdXM2Q3YweWpER0ZGblRMYk1sUmpCbFZyRDZiMUd4dQoycWF2VGdOZTlhcGpPVUNIS3ZhWG5GTmYvbHFqMm1TMTFHN3dhMUJsU0s1aFBZbjFHcVhEWHIwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 467c82567c34e39bb707579375f5d77365b350481562eeb708bdb1f8e90611de
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/operator-generic:v1.14.0@sha256:3014d4bcb8352f0ddef90fa3b5eb1bbf179b91024813a90a0066eb4517ba93c9
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          ports:
            - containerPort: 9963
              hostPort: 9963
              name: prometheus
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: a54a751d3cf64546dba5b3395687cc09c3b5e47fa7be0877c3b31dcbea6d73ca
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.14.0@sha256:bfe6ef86a1c0f1c3e8b105735aa31db64bcea97dd4732db6d0448c55a3c8e70c
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                    - key: ca.crt
                      path: hubble-server-ca.crt
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 467c82567c34e39bb707579375f5d77365b350481562eeb708bdb1f8e90611de
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.14.0@sha256:5a94b561f4651fcfd85970a50bc78b201cfbd6e2ab1a03848eab25a82832653a
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: cilium-clustermesh
                  optional: true
              - secret:
                  items:
                    - key: tls.key
                      path: common-etcd-client.key
                    - key: tls.crt
                      path: common-etcd-client.crt
                    - key: ca.crt
                      path: common-etcd-client-ca.crt
                  name: clustermesh-apiserver-remote-cert
                  optional: true
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                    - key: ca.crt
                      path: client-ca.crt
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
