# This manifest was generated by automation. DO NOT EDIT.
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      - ciliumcidrgroups
      - ciliuml2announcementpolicies
      - ciliumpodippools
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      - ciliuml2announcementpolicies/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
      - ciliumcidrgroups.cilium.io
      - ciliuml2announcementpolicies.cilium.io
      - ciliumpodippools.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumpodippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumpodippools
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  disable-envoy-version-check: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-envoy-config: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.42.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  node-port-range: 30000,32767
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVkdEaXgxN3ZjblJhb3VocC9ibVk0REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFNE1Ua3dPREE0V2hjTk1qWXdPREUzTVRrdwpPREE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFY0WHZhREFHZHZXbHBpVHNEd3B1OVdEd3N3RUYvK3FCQzRYYk5aWDF2RGYvT1BtMlQKZTdxU1lEKy81ZkRka2JkU0ZlRkZIT2lCYkxJTDhVTnhON1JEb0NjNVlwNjRUTTVIQ0M3cTgvbVZtU0gwa2srawo2OURVTVU4WjBsY08ySWw4dTlIbkNaVUMrUWRTUzYxS1V0aHp1SWhCZUtsNlRCTkY4MjhxaUVVclNSUDZrSnJCCmZOT0FQZXJLMWVxU1NQTis5a1VBR0ExOWRaMW45VUZxYzI2UlVZUlpmSnY2bERLQWdiRldzVDlUVXp2TG5QSHcKcURZRTFnN2NvNzVkc0RMdnE0cUNKREYveHJrTHRwQk1pQkJ2YnJGcHE1aHBqNnVyQzhqL3NJTDFoUzRKQkVMZgpoYTdJVXJ6emZpaGRaWmRJZEdYSlhRZmxlS0hXSzJTcU9BK2JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVKZU9oM3hBNFN3cXc3QkhZTHNPUUcvd0dJclF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCQUdyNWNnMjFSZ3FOQ3F0NWMvaDZEeGNWNG5MS3ZhaTRyWmJZZStPY3BjM0s4ZkRHbXVrNm41CnlndHJ0QU9TS3lDZ2xyZnh6RmJJTElIN2tFOXFyblU5Z0JkV0FIaFp0enNFS1krbHd4eEJTMHFINkR2Tk1YNUIKbVIrYW53WUxZTFpWQUtacHl6MDI4VFlxWTdPeE9IVy8vdndsTUxKaUJRemlSVzZGd2V3MGhsZW1DM2w4YmdBbAo4WkpEbWg0SGRuaGVndVpGNVVMcG9yZXhma29mVDk1UEJrK1pvaVdEcXhCMy9VbWNkemYwbWRqbXNHbjNGWm1xClVTWjBzMlBBRzJvKytDR3JyN3lXUE1FVTNFN3JIZXlzOHRKbVRBZWI4MzEvK2tkNG1XY3AwYVIxYVo4YnFvUHYKN1JraGk2TEZ0bFJqcFpqNDVkVmtVY0RmWjY1UWxYMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMWVGNzJnd0JuYjFwYVlrN0E4S2J2Vmc4TE1CQmYvcWdRdUYyeldWOWJ3My96ajV0CmszdTZrbUEvditYdzNaRzNVaFhoUlJ6b2dXeXlDL0ZEY1RlMFE2QW5PV0tldUV6T1J3Z3U2dlA1bFpraDlKSlAKcE92UTFERlBHZEpYRHRpSmZMdlI1d21WQXZrSFVrdXRTbExZYzdpSVFYaXBla3dUUmZOdktvaEZLMGtUK3BDYQp3WHpUZ0QzcXl0WHFra2p6ZnZaRkFCZ05mWFdkWi9WQmFuTnVrVkdFV1h5YitwUXlnSUd4VnJFL1UxTTd5NXp4CjhLZzJCTllPM0tPK1hiQXk3NnVLZ2lReGY4YTVDN2FRVElnUWIyNnhhYXVZYVkrcnF3dkkvN0NDOVlVdUNRUkMKMzRXdXlGSzg4MzRvWFdXWFNIUmx5VjBINVhpaDFpdGtxamdQbXdJREFRQUJBb0lCQVFDZzc5U2tGRmk2K3lYdwp0Y1JrWmZHT25uQlpOQ21WUlYrR00rV1RWSVQ0SmM2UXdNVHZMekVLcDhZUWZkT3F4ZFR0dlcwTzlsdTExN1o1CjZnZFhrQlRpdGdZTjFqbWNjSjdmTURjdHNIdmpwNkMzU2NrSVRqR0xHYmR0dEtxeGp4cVZjemJVNUk3dDk3a2MKb2JrNXJmRVYwb3NreU1pdUw4Um81RzZIMEpaTHBJZFZObzJjOGpqR2VIYnU4REZ1R3NXSnNmMWNwT3lSVDBNcgpkTE9wSExZOCs5eXBUUXU2MHFFU3pJUFlwVlYyaXNJTGtjWHJJTmI1MFdBeTBLRmVjZmdraTVjNzRDM3lvYjJnCmViUmtFZUkxamNaNzZua2FnU2ZhMXcwWWRXQzBKU1UrazVkOGovK2pqNDZwK0cvOE56YlJMOUN6UlU5dnhKajAKUUlCRFBRYnhBb0dCQU9SZFJyTFRweFpZWDNQb3F1NldWeHIzelhZeVFJNFNkMVdORU5PWFdqWGNTTHNzc1hjOQo0K2pMa2c0NnlZbm5lbkFueVhWSTNIdnVqbTVxd1hsWHJVWXdHY29YdHJEVUpvSkZjNllUZVlqVjB3aHhFZmNxCk9sVG1HK3J3VGNuRHVFaGlNVlBFQ3V6VHhWSHQyYStrb0EzNURlbmsxZnpkbmFYMHlvSnlsQ2JGQW9HQkFPL0QKZ2Mrb1VKM1pYR0xEOEZKU3N3dFRyT0Nnbis5Wmtvb2ZXdFhEcGNMK0dGY3d3REh2RC9rY1hqK1dWQ3hzNzVUMgoyd0dwQ2FzRXlKWkhpam03Y0EvaFBiSk1ZazBHSHZEV1VPMCt6cVVoY1JJd1BCUW52anNlOEEzODd2NmYydWY2CmtIOFVkckp5T2NsSlp5blh5Y1JkQ2lIMjlOQWl4dVBmSzNsRE5jTGZBb0dBYkNtbDc5T0I0M3FPRTNkVFp0ZzgKZjZCNVo0OWJ0aThXNktWOUg4c2pSam1GRldxUXo5cTNsUzYraWhEY0huNU9Kc3NoaDNTd1FkNzNCV041S2dFVwpLQlZtVWFzenM4TjRUZUdaYWtMMUlKT3VkZVFnVDBKb0NJaEpGdGtrN3ZqTjB6TDNEQ2JoeWRSd05HTUU1VVdECkxic1dGUDkzUDJLMFpjTnhHNklyZThVQ2dZQjB3bVcxNVlhVXlDUW9hTGpncml0STZjKzNlQ0ZLb3ZrczBFWWcKOFcwSXYwckZNeFYxZTdEd3BETDFqbFNoYWM5bVlLeVlhMlFzNTJCelpwVld0Z1BGaCsvT28wbi9ybXBrNkVseQpyM0pja2lPSk12b2U2cGZHSExQVWJBZEs4amZkWG5UOW5jNkw2ZnBnSHFIaGk1ZFRTK2ZDVUl3NXk2WEZsSW1NClBRR3lTd0tCZ1FDcW9EazNIeDYzcFJGOHNQOWxmTWFvSWVxbk91eWxPc2ZLUk1tQ3UyZGZQYWo2OUszcXhKd08KNFpoVHU0OHBrM21VTURyTzV0c3ZxbFJTM3hzQ1ZUUlJCa1FNSUZwVWNLNFpWdkt4UEhmWENGODdKZEZRdWNsZwpCM241cExIOGN0NzFrRmVCY3hMcmFHOHc3MDIwT2g2NGJHK2k5TzEzYmhJOWdVL3pjRGV5Nnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVkdEaXgxN3ZjblJhb3VocC9ibVk0REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFNE1Ua3dPREE0V2hjTk1qWXdPREUzTVRrdwpPREE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFY0WHZhREFHZHZXbHBpVHNEd3B1OVdEd3N3RUYvK3FCQzRYYk5aWDF2RGYvT1BtMlQKZTdxU1lEKy81ZkRka2JkU0ZlRkZIT2lCYkxJTDhVTnhON1JEb0NjNVlwNjRUTTVIQ0M3cTgvbVZtU0gwa2srawo2OURVTVU4WjBsY08ySWw4dTlIbkNaVUMrUWRTUzYxS1V0aHp1SWhCZUtsNlRCTkY4MjhxaUVVclNSUDZrSnJCCmZOT0FQZXJLMWVxU1NQTis5a1VBR0ExOWRaMW45VUZxYzI2UlVZUlpmSnY2bERLQWdiRldzVDlUVXp2TG5QSHcKcURZRTFnN2NvNzVkc0RMdnE0cUNKREYveHJrTHRwQk1pQkJ2YnJGcHE1aHBqNnVyQzhqL3NJTDFoUzRKQkVMZgpoYTdJVXJ6emZpaGRaWmRJZEdYSlhRZmxlS0hXSzJTcU9BK2JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVKZU9oM3hBNFN3cXc3QkhZTHNPUUcvd0dJclF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCQUdyNWNnMjFSZ3FOQ3F0NWMvaDZEeGNWNG5MS3ZhaTRyWmJZZStPY3BjM0s4ZkRHbXVrNm41CnlndHJ0QU9TS3lDZ2xyZnh6RmJJTElIN2tFOXFyblU5Z0JkV0FIaFp0enNFS1krbHd4eEJTMHFINkR2Tk1YNUIKbVIrYW53WUxZTFpWQUtacHl6MDI4VFlxWTdPeE9IVy8vdndsTUxKaUJRemlSVzZGd2V3MGhsZW1DM2w4YmdBbAo4WkpEbWg0SGRuaGVndVpGNVVMcG9yZXhma29mVDk1UEJrK1pvaVdEcXhCMy9VbWNkemYwbWRqbXNHbjNGWm1xClVTWjBzMlBBRzJvKytDR3JyN3lXUE1FVTNFN3JIZXlzOHRKbVRBZWI4MzEvK2tkNG1XY3AwYVIxYVo4YnFvUHYKN1JraGk2TEZ0bFJqcFpqNDVkVmtVY0RmWjY1UWxYMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU5TMkx0YkdDWVE1Mk5DclRmVlpLSVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURneE9ERTVNRGd3T1ZvWERUSTJNRGd4TnpFNQpNRGd3T1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVOR09EKzJIVkN6eVY2T0RNU2NETkpYNVJIcEUKMm9hcXNTZ0loR0JrVVhjRnRVUXJHaHF4VE9qRDZLTUJqbllZQ0dwazQxSURjVkwwREp2TWxNTG1UM09YNVlrOQpNMXp4MU1HbEE2eVdJYVVnZUFqeEEyWGw1WHRLcU1uWVF6UkJXT2sxajJWT2t3N1VhbmU5N1FWUjJsUHhNVW93Clp1STlPLzFYSWNvMDFMSzI0TkxNZlZwTVluSnBsNUJOdE83MjlzQVNsOG8xMVhYSEEvQkswc1J0MjRCajc4Ly8KeW1DYnQ1S1hUT3hlb01LMDVWSVpsQTA5YWZPcWZsdmdMZkR5SGw4OURlL0t1RURoVWJnUTh3a1A2Z3ZBSmk3YwpKNkxYMnpQZlczZTluOWZjUDBwOU0zSUdNMjlyUUQvR01jS0h3N0lJY1BnYlJlTUlGNEd3cGk4WUFRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUWw0NkhmRURoTENyRHNFZGd1dzVBYgovQVlpdERBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRnhzK2U2VTV5VnNzamIyN3hOQkd6M2gyQU1tVThTdkV3SW9FaktpZWlkSy9ud3cKSEpYdGUycWtScVBXME5jdWgvclZsTENLOU90M2pKWjM0OGNIZU9QRzR5Z1VLUGZWMlFlODBFVFkyWHFseUZ5WQpHNXhoU3hQZVZtN1MvZHJSQkhGWFVzalluVFZVTzUyNWdWb09YSFNIbXlheC84RXZ3VVJqMEViVGE4NHdSOS83CmJNbmJZZXRkYW1IeW1OaHdHWlpubU9TS3UydkwxLzl0bkJSRUxKcWFHaGhMTEVOSDM5emttbFp5bFI0eWJDTzQKL0dVRURlYmNHaFJRR202UnBwZC9mb1RuUEtucExzekZ6Z2pjRWJCQ3RJWmQzUHorbVVzNWhpc1VURHk3U3lMUgpkSy9acytFa091QjU2ejg0OFFPcXZJMWM3ZlJVUWkzK2lSMUNCWVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdU5HT0QrMkhWQ3p5VjZPRE1TY0ROSlg1UkhwRTJvYXFzU2dJaEdCa1VYY0Z0VVFyCkdocXhUT2pENktNQmpuWVlDR3BrNDFJRGNWTDBESnZNbE1MbVQzT1g1WWs5TTF6eDFNR2xBNnlXSWFVZ2VBangKQTJYbDVYdEtxTW5ZUXpSQldPazFqMlZPa3c3VWFuZTk3UVZSMmxQeE1Vb3dadUk5Ty8xWEljbzAxTEsyNE5MTQpmVnBNWW5KcGw1Qk50TzcyOXNBU2w4bzExWFhIQS9CSzBzUnQyNEJqNzgvL3ltQ2J0NUtYVE94ZW9NSzA1VklaCmxBMDlhZk9xZmx2Z0xmRHlIbDg5RGUvS3VFRGhVYmdROHdrUDZndkFKaTdjSjZMWDJ6UGZXM2U5bjlmY1AwcDkKTTNJR00yOXJRRC9HTWNLSHc3SUljUGdiUmVNSUY0R3dwaThZQVFJREFRQUJBb0lCQUV6cUdOOFVFUCs4L05YdwpISWIySDJWaERLMnMzTDY4MElpTmlvM2N0Nk1YajI2U2dnV0pHa1JSa2taY29DY3ppbWptTGpwVVJVNkNJVUttCkRBdlUySmcwR1FEVGpuNnpyWWpIVmU4amdnOWFjeHJCVGR3R0toaklxSmQ1K09CdS9Nc05zdGFNYUpqVzBSdkYKM1dxb2pobjRXU1lVSS9TTkxzS3FlZnA3OW1TVmpjdTVlVEZqdW1OZy92c1FVeXdnb0NMeTRNUUpWUkFRNlhuNQo3bjRkQ3NwYXpTR2c1aXZ6Y2E1a0dUU0JJdDV4aWdmTHFXNG1sVVduQVcrSUY5YytPMGNXVElCY1RIemZmZXBZCkg3akVyNEk1YUJXU3o3dytpMy8rVU9PWWlid0Q0V2NVVldua3dlRVRFUC94VWtzenZXbDc2VzlCMlFUa2tZQk4KL0lSZnNPRUNnWUVBeUE3VHFMYkJDcnJoMTBOUUpNUWVYLzZ1TUVrYXRUY1dMcjlQaUdIc1lhNmhsdUt5MHNhUQpFVnc1SnNtY05zNEVIeU0veElnSW9mS3M1VTBkZjB0VnAwMUh3QWhZK3RWV1NZWEM2Z3VHd0tDSE4xY3k5SVJFCnNCOVA0SVRMZHJFa25HczM0SUxNclBib1IzZWFVK3c0SVBDMHdyU2FJb0dSNlVZdkRzamNZelVDZ1lFQTdIL1IKVTRzb0NyZElkcFUxdUdCMDNYSGY4N05xNnBOM2crUkJkMVR2QkQxODNyRjhQYzdxM09hZjBqeVlGQ2RVVDBZVgpHVm92dHRwTWJlb0dmNjJoUzJlMUI5dFRKZTJuaDhROTVRWDkzZy9iNFRlMUJzcGYxQTlmbXBOaEN4bHkzWUlPCjdaUVNsbStzaUtoUkxMSXRNTTNvaWZ0QzlLRkZ4ekxMVUEwQXp4MENnWUVBdytFQWpLaWp5b1hBcXF4VnhDbmkKTTh1QmNmV2lHTnllODVhTm9OT0FSd1JkWXdjRVlDdmEwNlNnc01HbUdtTU0xaEFGVjhCNTgxZFF3aE1IVnFQRQpjZExROWMwMmtpSmdJZ3krRTdyRmJjVy9ud2ZaOUYrdGdXU25LUVhjMFpJUWJyYnNOdjdhdUYvb2ZsRTA0Z2JmCnppRGdXK1BKSnhBR2RZa3FlaWRnNGlFQ2dZRUF5VlJhYitPRDkvTmxsY1dhRU5iVVJmditLYWx3ZURlSHc5aloKdm11b2VoU2FLNzR1UlRQVURxK3FHTUNLdW9Wc3FYdkExRzlKTlVHTFZQcW9BNk5kTHlNZklvd2NzYW9xTjFMaApXZ21LdjdNQ2ZTeitSOFNhWloyY3hxdDJMb3ZBbEQ5MjA5dDlJMkg0SC9JaUFJbkNITXo5akJGQlE1M1RHQ3Z1Cmxyd3JGeVVDZ1lCZSs2RW5sbHNQeGRub0ZINEtMdzdFL010bDBXY3ZCcWZBT1FoUWJUUnJWQ0hqbmFRZ09PeHcKY3pIZGV0T2hzYXJaYnh6K2g3OWJyaGxXR29oc0ppKzJhNlIrRDhIaUYwaFo4NkZXQk9XemNCZXRjNzZzMFdyYgpXTUhVMVd1NzBtUFpMejRUOER2S0JKMFZwUS8zakJxc1BZOHdkZ0hYVzJpajVMZHhPRzE3aUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVkdEaXgxN3ZjblJhb3VocC9ibVk0REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFNE1Ua3dPREE0V2hjTk1qWXdPREUzTVRrdwpPREE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRFY0WHZhREFHZHZXbHBpVHNEd3B1OVdEd3N3RUYvK3FCQzRYYk5aWDF2RGYvT1BtMlQKZTdxU1lEKy81ZkRka2JkU0ZlRkZIT2lCYkxJTDhVTnhON1JEb0NjNVlwNjRUTTVIQ0M3cTgvbVZtU0gwa2srawo2OURVTVU4WjBsY08ySWw4dTlIbkNaVUMrUWRTUzYxS1V0aHp1SWhCZUtsNlRCTkY4MjhxaUVVclNSUDZrSnJCCmZOT0FQZXJLMWVxU1NQTis5a1VBR0ExOWRaMW45VUZxYzI2UlVZUlpmSnY2bERLQWdiRldzVDlUVXp2TG5QSHcKcURZRTFnN2NvNzVkc0RMdnE0cUNKREYveHJrTHRwQk1pQkJ2YnJGcHE1aHBqNnVyQzhqL3NJTDFoUzRKQkVMZgpoYTdJVXJ6emZpaGRaWmRJZEdYSlhRZmxlS0hXSzJTcU9BK2JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVKZU9oM3hBNFN3cXc3QkhZTHNPUUcvd0dJclF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCQUdyNWNnMjFSZ3FOQ3F0NWMvaDZEeGNWNG5MS3ZhaTRyWmJZZStPY3BjM0s4ZkRHbXVrNm41CnlndHJ0QU9TS3lDZ2xyZnh6RmJJTElIN2tFOXFyblU5Z0JkV0FIaFp0enNFS1krbHd4eEJTMHFINkR2Tk1YNUIKbVIrYW53WUxZTFpWQUtacHl6MDI4VFlxWTdPeE9IVy8vdndsTUxKaUJRemlSVzZGd2V3MGhsZW1DM2w4YmdBbAo4WkpEbWg0SGRuaGVndVpGNVVMcG9yZXhma29mVDk1UEJrK1pvaVdEcXhCMy9VbWNkemYwbWRqbXNHbjNGWm1xClVTWjBzMlBBRzJvKytDR3JyN3lXUE1FVTNFN3JIZXlzOHRKbVRBZWI4MzEvK2tkNG1XY3AwYVIxYVo4YnFvUHYKN1JraGk2TEZ0bFJqcFpqNDVkVmtVY0RmWjY1UWxYMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRVGdWV0dtRm9XYWVPTjlDOHpFMWdjakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RFNE1Ua3dPREE0V2hjTk1qWXdPREUzTVRrdwpPREE0V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdUQzSTdrWCtTZC9uRExqWWw3UUoKeVRsNFJuWmlwM3NYU0RqVDRIVlVWcjN5T0FVTThNTjRVckdRYVNGRERKUjNxRUl1cEVaSllENno3YitHMm45awphSkhQM1YyQmZLSmZ1V0EzeDBIRTdHd3owdm5jcVlhT1dIOEVEQktEU1NQY1RGdFIrZ2dVU1JFMW1JcUpMUGdxClFUejJpZzlGM2JTbzBObXFGWitpNk5aS2V1L1Q0NXprVWgzTlM2TDZyZURwRnE0N2ZXRGFtNkQydHZGcTg4U2QKajZPSURNV3oweTVoTnh3eHBuZnZ1OUpvSGwyVWIyTHN0RmN3NTYzVW9RVVZHLy8yZHVLdnJJdnVNZENGMURNQwoxV1MvS2Zialo5MnVOSFR2UkdUVVVjSHh3ZzBlWStISGpOZ2JyV1RsNFd1cGlEQ0FrRVBIVEJlVVZvbHBIdklrCm5RSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRbDQ2SGZFRGhMQ3JEcwpFZGd1dzVBYi9BWWl0REFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCdStKWGE2aFFFOHhnUjVQOTFRVzFhR2o2VUFPV20KVlVsWm9KemQyNmVrN2QwSHlvWEozRXRyeGNYRS8xU3hXbWpzb0Y5VThIaHZXaHJkV1lSUGhYUzZVemJhTlNBcApMRkhoM25aN1ZIcjdua2tvM044T1NRTVlBc29vQ3hxelFHSjRzajlHQmVDb05MSWdMYzVYQ1F2QXpjTkJwMmxNCjZUWGxBL0hVMkVUelZYMmlHbHA1dFlQTGVOMDZlZ1hwTXFOcEt5a3dLQXRibTJrS3g5aFFVQm1oanluc0RQNUcKQ0p5aWt2NnB3eUZmUUxrditHRUtmcHVTcDlrU0QvN1RHdVhYNXF3WCtsNzFoZXpUNW9acnFoMVB5SW1tcFErcApxUGdtRUUrbVZnR2VnZWxZT3NCeDNCRWpEY1hhOVZ2cmtJL1Y3NjNpZytaeThFWXQ2ZGZXcWd5LwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdUQzSTdrWCtTZC9uRExqWWw3UUp5VGw0Um5aaXAzc1hTRGpUNEhWVVZyM3lPQVVNCjhNTjRVckdRYVNGRERKUjNxRUl1cEVaSllENno3YitHMm45a2FKSFAzVjJCZktKZnVXQTN4MEhFN0d3ejB2bmMKcVlhT1dIOEVEQktEU1NQY1RGdFIrZ2dVU1JFMW1JcUpMUGdxUVR6MmlnOUYzYlNvME5tcUZaK2k2TlpLZXUvVAo0NXprVWgzTlM2TDZyZURwRnE0N2ZXRGFtNkQydHZGcTg4U2RqNk9JRE1XejB5NWhOeHd4cG5mdnU5Sm9IbDJVCmIyTHN0RmN3NTYzVW9RVVZHLy8yZHVLdnJJdnVNZENGMURNQzFXUy9LZmJqWjkydU5IVHZSR1RVVWNIeHdnMGUKWStISGpOZ2JyV1RsNFd1cGlEQ0FrRVBIVEJlVVZvbHBIdklrblFJREFRQUJBb0lCQVFDQmVQSEYrQ3Y5OERtbgpLQk1WY0xEYjF1WWQ1ajNuNGtsM09IQTBzVjhtWWU5Z3pMUE9VaDh4UlpUdFBER3BHb0NJSHBJMllTcFpWMWNNClFXYmNEMkFaV0RhU0lvN0hiamdFeG9nTUg3enFSQk9iTkhtTUxJSEYwT1NnTXpaTlpNVUFaOEJSQy9KdGNvbU8KZS9Sd1JLazFGVWxQdGZIc0huUHY2TFpzNGJVVEY2c1FBZmJKVjc0WXZYbkZuSlpCZk1HOFl6OEVlTW1HaThOOQpEcHVOL1VGSEdITUdkbmtOY25mSHVrbnBRVFhYa2FxU096enVwMlVaTG9lSWNzSGlBNDhNN2t2Vy80cVFpOC96ClQ4MThUWmpuKzZQVE5aOW5rRWlDVU5oSzFUaHZPTCswcVRPcFZ2d1dGU2xFUCs1QUNJdFFMQ0hWUnFyaThLWTIKSHV4MU45bGhBb0dCQU4wT0ljS0E4bTgwS2tDL3dpNGNlVDllNU9CclFlSnpTeWZmSWdyUTh1TGRJUVNhVVMxVgpFMlJkYm1VbDQvdnhyVU92MW5jYUxzb0xYNWtrZlFpN25SU3dIN3BackRjSk1CV2dDbWVEYWhlTjd0RUZWYXlBCkdCOVQ2bFlFdDVCY0s3MWN4bERqNWxvNFBuVEF4cGxybTkvMGpYcDlSc2EvcUM3Rk03NkVIbTcxQW9HQkFOVmQKMWVnWnBxemJEUCsxV1QrZWJ5VEFJcmY1Qm0ya1JIbmwzZjI5akhmUEh3MmpvK1NFS3J2ZW1RejZpYkk2UGZHaAo3ZEJYZHRRWStBaVZ2STh4TmlzdnNtZmFWZUtaeGhGSWFGNWlFT1BwS3ViWEI1UGt4d0lzMjg1VVRyREJPVmFJCnVWNWdJaXhxeHd3RmMvVE5QbHRJL1FBUy95Sy9RUkllUDgwbEhJWUpBb0dCQUxpMzBtWWlNblBTZDJ4YjBQdVAKTjVKSXphRHFmOGVtNkNxTlBua2pXWk5SalFHM29oWHJmYVRrbmhkUHJrOGVDTmNDM0lmeURSOHdtZFh5czdqVQpiZEtYeWl1Q08zSlI3eWhpNzg3SDlhTnhLeHJuQmt4N1RhMEFCbFdTNDRGeVErcWMxK3RJUlhrbWZxbzVYTHRmClBJWE1hVnp0eW5MU1BNdTRaaURSYmt6eEFvR0FOS001cWxEcHRhczB3Y0RUaThaaVZRYXhpZ0Y5Zkg4U0JhQ1gKNjRsZnBnOEs4aXAwdkdOK3gycGJCOENuUjdqbW56MzdsWEorZGtUU3JBdUV3UzY2MWx5bC9zajJkempJakdyNApsSkJNNm0wVGtHOXNCeWhoa0QvUTJrNGlPNmp2cEZHR3FhbTl4SWR6STV3VXgwZjdJam9YY0hVL1RDc3l1bTJMCi8rZ3Y2VUVDZ1lFQXR5Tlc2aXVPS1ZNQStiZlVZeWl4cTZaR1NBY09TQ1NIS0ZvNXZ0dFc2Y2t1dlhxbTZpWG8KTFJpS3hMMlhzNU1sTGxubkpraENuK0VBblBmUGZncko1b0xjWmZkMm1JdElIQXRJbUozVTdCM3JtWUVvbXRVSgpVcFdmWnNrM01BUXdvZVdUOGNFY25UOGRvY1NlSVJ2SWdOOUlodFFHR0tKM1c1Z0lSRnFLcWRjPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 467c82567c34e39bb707579375f5d77365b350481562eeb708bdb1f8e90611de
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/operator-generic:v1.14.1@sha256:e061de0a930534c7e3f8feda8330976367971238ccafff42659f104effd4b5f7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          ports:
            - containerPort: 9963
              hostPort: 9963
              name: prometheus
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: a54a751d3cf64546dba5b3395687cc09c3b5e47fa7be0877c3b31dcbea6d73ca
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.14.1@sha256:db30e85a7abc10589ce2a97d61ee18696a03dc5ea04d44b4d836d88bd75b59d8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                    - key: ca.crt
                      path: hubble-server-ca.crt
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 467c82567c34e39bb707579375f5d77365b350481562eeb708bdb1f8e90611de
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: cilium-clustermesh
                  optional: true
              - secret:
                  items:
                    - key: tls.key
                      path: common-etcd-client.key
                    - key: tls.crt
                      path: common-etcd-client.crt
                    - key: ca.crt
                      path: common-etcd-client-ca.crt
                  name: clustermesh-apiserver-remote-cert
                  optional: true
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                    - key: ca.crt
                      path: client-ca.crt
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
