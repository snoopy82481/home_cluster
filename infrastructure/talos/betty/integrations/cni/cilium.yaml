# This manifest was generated by automation. DO NOT EDIT.
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
      - ciliumcidrgroups
      - ciliuml2announcementpolicies
      - ciliumpodippools
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
      - ciliuml2announcementpolicies/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
      - ciliumcidrgroups.cilium.io
      - ciliuml2announcementpolicies.cilium.io
      - ciliumpodippools.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumpodippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumpodippools
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "0"
  cluster-name: default
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  disable-envoy-version-check: "false"
  egress-gateway-reconciliation-trigger-interval: 1s
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "false"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-envoy-config: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-metrics: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  external-envoy-proxy: "false"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.42.0.0/16
  k8s-client-burst: "10"
  k8s-client-qps: "5"
  kube-proxy-replacement: "true"
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  mesh-auth-enabled: "true"
  mesh-auth-gc-interval: 5m0s
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  node-port-range: 30000,32767
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  operator-prometheus-serve-addr: :9963
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  proxy-connect-timeout: "2"
  proxy-max-connection-duration-seconds: "0"
  proxy-max-requests-per-connection: "0"
  proxy-prometheus-port: "9964"
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: default\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-hubble-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTWhCdFRkKzNzQ2pFSUtZbEZ3WGRGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RNeE1qSXdOVE13V2hjTk1qWXdPRE13TWpJdwpOVE13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzgvQVBwMXBPMVdPRUcxWFFwWVNvbkttelhEamdpMGYyRWUyZjJzSG1tTkkvdDFteEMKY3hSQWl2ZkE1YUZURm1MVFo3STlwRVdhWlRBYURiOWZiTG02eEQ2OTY0ZklMVG1pRGc0WEFDdmtoZDRVdkNRbQpuVllTdWZzYm9nRUhacGZlVkNIaTFYRkpwT0ZyNDE3c013MEtBQU5FcXlRQ0w2SnlSM05oTGc5NXBza0xIb1lTCk1yZEpEM1JOYXhhcFhtRmo2RzNMSlRCM3VWeWJZTjNRNGtnWG1tenphQTV6QmpPKzNDUVdQWmZDMWFQcER2cTgKcG5YOEQxS0NHaEZreEFDd25RZ2pKa0VpdUcyQUZGY2xNcjFEdXlSN0hBZmplVmFqZXJRUEVkYkdXbFhOaitNYwpXTm50YVQwemdsUjg5VUlmYjZTMlNwNVZ4ckRUVTZtS1IvYUpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVmMVF1TjlOL3lyWFZuZTlQeHlBUEpFVmRpSE13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGY0dFWitzZHNwYmM4OGlYSUNYREtTZjNPZjUvdUo3dmNhSGNLdW5HaFlSYXJkSFliUHVNTUhDCnRPaVpkNGZsYXZwcFRPRFJadFEyNGVIaWNXeC9SYjd2TitERU1CZDJIYiszWitCeXhEV2prdSt5RHdobnN0MlQKUXp4dXJSYXQvQ1ZjVDkwVDBuM0ZEbUxYcDhOK0dkeWh3UElVVWRMZjJjeUpaOE5paTNyNGRVakxvcWFpdzN1dAowaXAxazVlTUVKY2lFNE5WM2QrZFhpVEppVDRoVXZzYmNTcVVWS0w0bXhWR2NOKzVMMlVTZFNMMHZmUUlJUHN0ClVHRjlQK2N0YVM2aDdTaVRCclVDekYwdlJsTUhqbGhGaUdwSjBaRk5lZVJhUFFrZ3Y3YkN3dEZ3SStsMnlTNG4KM2U3Tkk3WFpLbkxJak14cFE2aVBBTWljbEpOYkVsMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdlB3RDZkYVR0VmpoQnRWMEtXRXFKeXBzMXc0NEl0SDloSHRuOXJCNXBqU1A3ZFpzClFuTVVRSXIzd09XaFV4WmkwMmV5UGFSRm1tVXdHZzIvWDJ5NXVzUSt2ZXVIeUMwNW9nNE9Gd0FyNUlYZUZMd2sKSnAxV0VybjdHNklCQjJhWDNsUWg0dFZ4U2FUaGErTmU3RE1OQ2dBRFJLc2tBaStpY2tkellTNFBlYWJKQ3g2RwpFakszU1E5MFRXc1dxVjVoWStodHl5VXdkN2xjbTJEZDBPSklGNXBzODJnT2N3WXp2dHdrRmoyWHd0V2o2UTc2CnZLWjEvQTlTZ2hvUlpNUUFzSjBJSXlaQklyaHRnQlJYSlRLOVE3c2tleHdINDNsV28zcTBEeEhXeGxwVnpZL2oKSEZqWjdXazlNNEpVZlBWQ0gyK2t0a3FlVmNhdzAxT3Bpa2YyaVFJREFRQUJBb0lCQUQvSkwrajFLOVhCc2ZJRQppYmlOdXhTTkZUOWc1VUdiYnQ0UWFQNnlnZHkvVVBVTnNteWJPdkt0OVFGK2YvenpTVmZoWUIrK0dtQUtWem56CitldlRYcnpURC9vNlRSSWJjYUJvN2dpRlhrczdnOEdyM3VmSm93dWZDa3BCVytlTGtTYlJicjZKSER1bkV3Ni8KSjRMQm1GMFB0QXF4V080RDllaHNoVnovbHVtUDlJZlJCcG1neTVvMlp5ckRUNVZtQWRyTGU0SVRGQkxPbFVZRwpoTnRMVjAwelRHQ3hqTzJhSEdoTkY5UXQvSVp0K3VhSlJDcUZkSjE5RzRsbFdWVkZJTXBpOG42aDNheUc3Nkk2Cldta1VQQU1vMjJ1NW1lLzlOSFF3Q0Q1OU12eCt5SkpQVE85NENzU1pDWVh3SGk0ZXZ2YlJtUVJic1JxYlBPVHQKSytNZUVhRUNnWUVBOHJ4S2oxYXZyVXRiVnNpcXJwMkhMNTlrYWdXWVJ5OVZGeEZiVXlTY0NQZlhHTktjY1RZRgoybGRFK1NQSVVrcndramxWaFR1M1AzNEM1TitXK216LzRQa3BmZy95bFc1OVh3eXErMS9iYVRMUm1RMGpRNkNRCngzY25lNUs5YzVLNGdqWjZHeVNHU2ZxMGtEcjNLSVJnc1B5VU4rZkhKSk02dktFSGhnKzBvdU1DZ1lFQXgwL0kKT1VWaEY1RDhDZUI1dkhuei8weU9JRkVBUzNMRDZYU1hKVnp0RG1ycHBCTjhxbnpsa1pPTktyOUlpMUhRSVJpVApkNjZQZlRHbEx1RC9Udk8xeTZkN3VSY2g3OTJuNDZtazFtaE8yQm0rZ2pYbUx4Wkt2ZElBZlhxeFU2Q3RocnN4Cjc1dnJjU2ZtQzdLM0FvTlBRUHdtVkRQWE0rQ1dQSmpFSHRpZXdLTUNnWUVBNy8yeVNoNE8rMnR5RjArM1VZVjIKVDJOc1NGYlh4Q25NRzA2UjJKWnRuNEJMTHNPczRWSGtYNGZCTGdKdTRNNHZKS09ESm9Od0hscGNTaVcyaEVxWQpncnBXaDhrRXN6SFd5czhmamdHc1VVcHBhTVZRaEdDUVJHWk9weUxpSlE1L1ZsNitRMi9OUmYrVjNyUXVBZVZBCkpEelYzcUJPaUo3NGg5OCtMUklDS3JrQ2dZRUFzUlBPL2lNSDJob3o4c3AvSGRiejB4Uy9DVE11SWRvNitRVmUKN0JFZGhEdTBqTlBMWk9WR1NRcGcxMlBQSGdoMzg0K1VKVGJ2d1BrRW14dkhlT3ZKenNCa2lkTmxrV2pMS3RlagozZUlhZXFDVXc3Y0RaVDVXOVVMSXNMTDdMU09LU0RPMGIvK0ZOS21RRjBDV25DTHhuUGpwVE5JcUZxc29qM25pCmRNMWNiaVVDZ1lFQTI4amIyWU01Y2NSNThBN2U2L1BQeVg2UkFMaE5pSDY0c2VuZHg5OGxiT2xRSVRTMXlvVFYKMlk5REN5bHhBNk1EeXdweWpKSmNlZEZXSzY0WjllL0VKcWVQWnNoMXNRMFM4bGd0Q1p3eFZ1MVFVZEc2TUhrUQpsbHZKYmFRaW5nK0svdkdTYzBxSU9laWZHcXBOcU55MnphZ1R2MTZkTHk1WFhoYTc4cEVyZjl3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTWhCdFRkKzNzQ2pFSUtZbEZ3WGRGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RNeE1qSXdOVE13V2hjTk1qWXdPRE13TWpJdwpOVE13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzgvQVBwMXBPMVdPRUcxWFFwWVNvbkttelhEamdpMGYyRWUyZjJzSG1tTkkvdDFteEMKY3hSQWl2ZkE1YUZURm1MVFo3STlwRVdhWlRBYURiOWZiTG02eEQ2OTY0ZklMVG1pRGc0WEFDdmtoZDRVdkNRbQpuVllTdWZzYm9nRUhacGZlVkNIaTFYRkpwT0ZyNDE3c013MEtBQU5FcXlRQ0w2SnlSM05oTGc5NXBza0xIb1lTCk1yZEpEM1JOYXhhcFhtRmo2RzNMSlRCM3VWeWJZTjNRNGtnWG1tenphQTV6QmpPKzNDUVdQWmZDMWFQcER2cTgKcG5YOEQxS0NHaEZreEFDd25RZ2pKa0VpdUcyQUZGY2xNcjFEdXlSN0hBZmplVmFqZXJRUEVkYkdXbFhOaitNYwpXTm50YVQwemdsUjg5VUlmYjZTMlNwNVZ4ckRUVTZtS1IvYUpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVmMVF1TjlOL3lyWFZuZTlQeHlBUEpFVmRpSE13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGY0dFWitzZHNwYmM4OGlYSUNYREtTZjNPZjUvdUo3dmNhSGNLdW5HaFlSYXJkSFliUHVNTUhDCnRPaVpkNGZsYXZwcFRPRFJadFEyNGVIaWNXeC9SYjd2TitERU1CZDJIYiszWitCeXhEV2prdSt5RHdobnN0MlQKUXp4dXJSYXQvQ1ZjVDkwVDBuM0ZEbUxYcDhOK0dkeWh3UElVVWRMZjJjeUpaOE5paTNyNGRVakxvcWFpdzN1dAowaXAxazVlTUVKY2lFNE5WM2QrZFhpVEppVDRoVXZzYmNTcVVWS0w0bXhWR2NOKzVMMlVTZFNMMHZmUUlJUHN0ClVHRjlQK2N0YVM2aDdTaVRCclVDekYwdlJsTUhqbGhGaUdwSjBaRk5lZVJhUFFrZ3Y3YkN3dEZ3SStsMnlTNG4KM2U3Tkk3WFpLbkxJak14cFE2aVBBTWljbEpOYkVsMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRZjZreUxIeVBqYmhPUE5hMjFqakNhekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RNeE1qSXdOVE14V2hjTk1qWXdPRE13TWpJdwpOVE14V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFESTZqWlVBdE1WdkkraE1vcDY4dGFaTUw2dUU2LzAKcCtZZzVFR0pqZXI0UzVFVDJ6QStiUVhXV3hvM0RUVFpsKzk3TDRySGs5cERHZ2VaS1JMaUJIeHA3U0VxWDRJaQp0RzIrUEZOTGJYMzNQWXA2ZDQwbDFVQTNDUUFBWFBwT1ZvZndLV2t3N1BwTldNb0llcjdvcHZyL1F0LzlBUjR6CjJOdnc1WCtjNC9JNzczR2N4MTlRbnVTN1Q4VGQxUDc4VGJTd3lrUm1pRWdhVWZzZ0I4Vmh1Z0NjY2k0ODBqV2IKQjRMaFQrYTJCKy9Sb284MjlNbTd4SXRvNjVoYmw3R29sS3ZYaVd5a2xoenE4S3lkUzMyNUNRUzdxbm1CaXpQdwp5Z0ZqdE1DYmZHbFMybWJSNnZMNzdtaFIrTmY1ZG9RbDB0T2gwc0Y1RVVUZmhUWktVOTJyVGFMckFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZIOVVMamZUZjhxMTFaM3ZUOGNnRHlSRgpYWWh6TUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFSR0l3MTFXSE5pLzN1NERHMURxY0kydFV3T0ptREVIZmtuVW8yWm1tems1cnlNWU0KRmo5S0R3QkJvWWpsMWtrc3prd1lXblZiWXJBS1loYUZiQzVSODJjNjVnVmx5aHZJdGRIUnk1QUlmVVRENHo0WApZdVBWT2NoZEdVUFFpeXJNQzN2Tmt1T2dNNmZDZ0FSa3ZreDZ3QjFWQ0JBNzUxYlNmdlZkUE9UdWxvU2k1bnJRCjNrRGwvRVB2T05yaXR6Y0M5SWI3ZXV0NDlIOXpGTmFLcUJJOVhLQkdabkNwRVk0L29SY3p0RzJKL3libTI1Q0UKSERwWm8zSTFFOG5CVzVGWHppNmVyYU9EVGtmQ3V4SGI2eXYvYmlRL2FFK0NwTHZWQWtWa1lUQ0FWTjhFc092TwoxZUlud09jeXlOSVFWc1YwTmczMGdTdzhtK3VpNzdtMksrV2hkUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBeU9vMlZBTFRGYnlQb1RLS2V2TFdtVEMrcmhPdjlLZm1JT1JCaVkzcStFdVJFOXN3ClBtMEYxbHNhTncwMDJaZnZleStLeDVQYVF4b0htU2tTNGdSOGFlMGhLbCtDSXJSdHZqeFRTMjE5OXoyS2VuZU4KSmRWQU53a0FBRno2VGxhSDhDbHBNT3o2VFZqS0NIcSs2S2I2LzBMZi9RRWVNOWpiOE9WL25PUHlPKzl4bk1kZgpVSjdrdTAvRTNkVCsvRTIwc01wRVpvaElHbEg3SUFmRllib0FuSEl1UE5JMW13ZUM0VS9tdGdmdjBhS1BOdlRKCnU4U0xhT3VZVzVleHFKU3IxNGxzcEpZYzZ2Q3NuVXQ5dVFrRXU2cDVnWXN6OE1vQlk3VEFtM3hwVXRwbTBlcnkKKys1b1VmalgrWGFFSmRMVG9kTEJlUkZFMzRVMlNsUGRxMDJpNndJREFRQUJBb0lCQVFDYnhSTElBY1NjZHF3NQpBMUZnVDRSWUV2WFRTd3BCdWlidTIybUFkMXAwbFVudXhpTGFVM2FTSWVIcVNyL3Q4Q0ZKTmF2NFhrWjdmZVBrCk9IY2Vhdkgyd2xYVFgyY3E5dzZhem5TWjUxTWhiRUkvL3c2ZEJZQWE2MHhuKzY1SkxFZUt5T0I0Z1ZMeXd1TW8KdmRuajBRcUsrOU5qZWdscmt6ZTZ4b1F4SkgyN1B1SzNPMmJHVGVZNGlndFlJU3E4RGtZMjVOanhkUW9aRExnaQorNnZtQzNSWndjOW9SdGpreEs3bGRqMEd2ZEZEY1IwcVV0TEFYN0l6Ykh1S09lTkVhRUtobllGdDhZNWVoQzZICnp1dk9hOW1WdVFnVXlEY2tuRGYxQ3dXRWx5aEowanpUOTFjWUVnZDhzNDgxeGxDRk1zZjBFaTJZUFllOFpCQSsKbEs4MDlQdmhBb0dCQU93a3FtQkhFSllGY3QrMjlReTFOaGJXSkpSUTFlZEZvNnBwaE9peDlHa2U1QlNWQ3dQYgoyYkM3TWlHUFBuZkowMGpDSU0zYUpWMFRqbHhEcGFPMkgwNFBHTE85amo1WXZyWXlia2RTRm9sbU9SbnhiWThHCjJCOWNkak5JVEZ3SnpOdmF0aHUzdG5ZdFhkMGpuV1BMZjVHTlhSSkhPQUpKM01FbFk2U3E0L1E3QW9HQkFOblAKTkZHQ3FhTXg4YnZwcEZxMGVuRHIvNjFuSVczZjIxT0tlUGoyZmcwZU91TWRsajhnRjZqQTc5Zi84K1ZzNUFqdgowQURYMGZHY2krNEFiZ0kvS2VIMU14L0J0UTI3NmhUSnliM1RCbW5Gd01taWdRZVlMbzBQdXBvTEpGYW9iZzdRCi9zanVOWjdUaWd2dS95RHQvWm9BOE5UbmRUWEhGdkJXU0p3Nkw1RVJBb0dCQUsxdEJCK3ZNVlFzYmtBMHV1VjUKVkY4VEtFd3d6ZGVMQW5jT0JjbHJvQ2R2dzJ3R1JjK3dyOENteWx0eE94eDRnZzVtVy9jeXBjd2twNkhGSUtvSwpBQld3NnFCZXIwL0VsMU54MkNIUy9MQXQvZk82cG82ckpTQnJKSGZuT2dWQ1FVeVo1TEtZaW8xaUpoUlpxcVoyCjlwcHI2cFdZN2w1bjVwT0hKUlh6VjNTdkFvR0FBNU4zVkc5RXdiMHNMdDJqS1NvVmFJMDNZVzEwQ3czRjJCVkoKN3l4ODNWSkZ2VHpiSHFZMFBUME5zd29zd3ZPS3V1clZDMjUvcit2V0VFNUpnQmZ4WkJoV2dvcjNvZ1lYemNlUwpYRjkrbDNYN3VGUEdzbzA1Rm0vUHJIL0tWUEhtL0s5SnY1ckpucFh5aWtlZVFMZ25sY08yTUlpc1QvbTQwckZYCjk5aXN0MEVDZ1lFQTRLWURHOS9DU3pBWG1DTjkzWlJ2cmhMbG5aRCtoRGtMaS90OG5rNGJzcFRHdkF5S0tUejUKRFZodHFTT3lEbUEvR05iakg3TWJlYjZkVFhQTHg5Y0p0UUsvbzFRNVpnRmlka3NtL1E2di9lRWNyYXBJakpJaQpOdHRMMGl5N00xMG5kZjgxb2hGRWhIWkFEMHZNSUhBbUIrZ25GSEhZZ0VXMHNOZUtxNVZPaFdNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTWhCdFRkKzNzQ2pFSUtZbEZ3WGRGREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RNeE1qSXdOVE13V2hjTk1qWXdPRE13TWpJdwpOVE13V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzgvQVBwMXBPMVdPRUcxWFFwWVNvbkttelhEamdpMGYyRWUyZjJzSG1tTkkvdDFteEMKY3hSQWl2ZkE1YUZURm1MVFo3STlwRVdhWlRBYURiOWZiTG02eEQ2OTY0ZklMVG1pRGc0WEFDdmtoZDRVdkNRbQpuVllTdWZzYm9nRUhacGZlVkNIaTFYRkpwT0ZyNDE3c013MEtBQU5FcXlRQ0w2SnlSM05oTGc5NXBza0xIb1lTCk1yZEpEM1JOYXhhcFhtRmo2RzNMSlRCM3VWeWJZTjNRNGtnWG1tenphQTV6QmpPKzNDUVdQWmZDMWFQcER2cTgKcG5YOEQxS0NHaEZreEFDd25RZ2pKa0VpdUcyQUZGY2xNcjFEdXlSN0hBZmplVmFqZXJRUEVkYkdXbFhOaitNYwpXTm50YVQwemdsUjg5VUlmYjZTMlNwNVZ4ckRUVTZtS1IvYUpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVmMVF1TjlOL3lyWFZuZTlQeHlBUEpFVmRpSE13RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFGY0dFWitzZHNwYmM4OGlYSUNYREtTZjNPZjUvdUo3dmNhSGNLdW5HaFlSYXJkSFliUHVNTUhDCnRPaVpkNGZsYXZwcFRPRFJadFEyNGVIaWNXeC9SYjd2TitERU1CZDJIYiszWitCeXhEV2prdSt5RHdobnN0MlQKUXp4dXJSYXQvQ1ZjVDkwVDBuM0ZEbUxYcDhOK0dkeWh3UElVVWRMZjJjeUpaOE5paTNyNGRVakxvcWFpdzN1dAowaXAxazVlTUVKY2lFNE5WM2QrZFhpVEppVDRoVXZzYmNTcVVWS0w0bXhWR2NOKzVMMlVTZFNMMHZmUUlJUHN0ClVHRjlQK2N0YVM2aDdTaVRCclVDekYwdlJsTUhqbGhGaUdwSjBaRk5lZVJhUFFrZ3Y3YkN3dEZ3SStsMnlTNG4KM2U3Tkk3WFpLbkxJak14cFE2aVBBTWljbEpOYkVsMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRZmE3WnN4RTg3ZjJOWXRZc25wYXhMekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13T0RNeE1qSXdOVE13V2hjTk1qWXdPRE13TWpJdwpOVE13V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBbmNiUlNGVjFjaVFOdms0ZG16ZG8KU0xpbndIamhKd1VHZ1hDdEk4UGtQVlFQUTFpcUozZm9MSHgzcGJmZFF6dEtsQ3A0V3pMZ3JydTZFQldzUFYybAptNWRQVEZjZHdwMTM4VnA0d1ordXExWkpFVmNkS2ljejlUQ0RDemZjSjhUZ0hab2dmd0xDa3BnNmVBemFLb1VFCjE3RnQrK1ZsSXpTMzZPYzRnTE1PQkxwRUMrY08wVGdGUnNUc2xlOGFyeUZpK0p2dks2Nm5NbENCVmlxbHFzeFQKYlZiK0I1eFN1dU9yTy9HMmx1blpLazMyV1g4NTdjdC9DdEJ2OVh3K3g5Ti9Jdjd2elVHNnkxQzdhZ2VlQkltbgpoWlhoKy9ZdDhrY0NQQ3BWQUNhT1lhb3prVThuMENCWTMyMWRlbGpROWdSYTBMck9KYWpobU9wRmV6QWU3elRmCjhRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSL1ZDNDMwMy9LdGRXZAo3MC9ISUE4a1JWMkljekFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCUjBGMGZYRXN6dmJnbEliZlNUZ3U5OFhtTGR5eEMKWG9laDlueEV1Z2gwckxJR2w5U0FEaTFtc3RNc2pGNEovYkl4WGRhNU1kZEVybDEzd3g2WThvOWRrVzBOMk5iNAo4KzJSOFRXZ2RBSjRPWmFLNm1UVVA1OVVpd0VKVnhuVE5vMGYwaGRKS1FJQm16WXRSRDA2eE5na1kzd3ptV3lwCjNXS3FiNlJKYXpHWEFPS01EbXhOSnRYTkNyQWhsZm5JUUZXRUo4TEMyN3BmVkdTOTMzbHRkdEZlQTR4OFJpdGsKeUppOCsxUXV0RXZtYmo4UlZmcVBUTGFyN2ExSVFRTXJONFNSTWVsVVVKWVJEdC8xUStBTE83ZTdlMWFadTMzZQpYaUp4MFdqL2F1YXhCZTlER2VJL3czNDNtY2pHOEYyWUo4c2VaMWpWL3RrSkF4Uzh1L1cvVUVGMQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbmNiUlNGVjFjaVFOdms0ZG16ZG9TTGlud0hqaEp3VUdnWEN0SThQa1BWUVBRMWlxCkozZm9MSHgzcGJmZFF6dEtsQ3A0V3pMZ3JydTZFQldzUFYybG01ZFBURmNkd3AxMzhWcDR3Wit1cTFaSkVWY2QKS2ljejlUQ0RDemZjSjhUZ0hab2dmd0xDa3BnNmVBemFLb1VFMTdGdCsrVmxJelMzNk9jNGdMTU9CTHBFQytjTwowVGdGUnNUc2xlOGFyeUZpK0p2dks2Nm5NbENCVmlxbHFzeFRiVmIrQjV4U3V1T3JPL0cybHVuWktrMzJXWDg1CjdjdC9DdEJ2OVh3K3g5Ti9Jdjd2elVHNnkxQzdhZ2VlQkltbmhaWGgrL1l0OGtjQ1BDcFZBQ2FPWWFvemtVOG4KMENCWTMyMWRlbGpROWdSYTBMck9KYWpobU9wRmV6QWU3elRmOFFJREFRQUJBb0lCQUNtdGUxdEFOK1lPNEJLRgpVQXpRZGh1L3E1Q01YZTJReGtjckhKRjJEYlNsbitLS2FXaERwSEViNy84MnNwd3Y3V04yVkpUQ3U5ZHNmNW9BCkg1K1dQVWo4ajFYN0xVRmJsM09LRXB3VE1uRFFPano2WmhuY2dUMGpzM29qSjJUWi9OblUvUUNRR2hYZllKS1YKMG91bzE3NmlnQXNxYmF6L0lCWEYvb2NBeFpNNXRzTkw2cXA0ZzN5VGFUL0FFSkVOSDAycWUyY1NjYTVTSGRKUgpJcThCa2VJT3BpOTdVVE04RU1RRlJOYzc5R3lZNmY0YmtTTFFHeDBkUjF4Y25Uc0VtMW01UGdjNjFpT1J5YXRlCm05K3FQY0Rnbm9xY0FucC95RDBVNHRabG9LTmJ2TUlhZjkya2dNOExIdzBKWVl1ZFBkNlpYZnc4SWlBVldoWGEKMnUxVUFBRUNnWUVBd25MemJIamhLYnhiYVM3UUtHNVNRSWM3SXVkTjMxZ0hHOTFubERyUTUxYmt0LzBabTVKVwpJZVMyUk43S0NZQ0FVZGh3THp3QnZwWG0rU0lUckxhK1UzWjVNUnhlZEN5YWVST3RFYjJXbkloOVhrM1lZc2dSCmFuWjdmU1NXY0FHem1renByUTZ2SGExZWRoV2RlTk5pRWpsb1JnYjFGQ0FvNUlrZTdKYVRLSEVDZ1lFQXo3Z2sKbytnazl5WEJjU05RM1MzcVZwSmJkV21PVUpoMHdFS1lwSm1QaFIwUU15UUtnMTFhMkYwTzFTUjVpOTZhclNlSwp5MDlZTndpcGhDdGRUdjhTOG5FUmRjL0FURkpvN3ArVHNxRzJnd1Ezd1FlaG4wdy9CQzVOWFpzVk9FU1NSMitXCk1KUnNoYXYzZ2o3QVZYVjJJc3Y2R0NBMWU2b1lEMlBNVmJjTTc0RUNnWUFUbFEvK3RJMjRia2VtYUJoK2VkMisKc2QrNnZDQ1RoWUh4eEhKUjh6cG1rZEdtMWM1bVpHNVlLM2hQcDBBaGhOZG5acXlsbFIxMzNCRE90aWZWRlBKRgo1WUIrK2FScGZyUnZ6Uk40M2ViMURLblRmWE4xUDBEQnYvemZ0WGVSQUJyZVJ6Q2hSUUZOczgvM2hHVy9iVXBMCkc0enN3SGFkK0Q4bUJNa2dlbW1IZ1FLQmdBdlRUT3F6NVo3WVhHbm5lOHdMdUNLVGxIZGJ1Z2xtbEliNWc1MGoKVE9Oa0l5NzJKMDhST29IRTBucFo2RDJKUDc4SjJFSDQwMm5XcVdmbjNCa0tObmJzN3ZTSkRrYUtEb1UvT25aWgo5SDBDK1hXWXpKKzRCSUpsYkd3ZXp4ZHo5K3Z2TTFxeXFIYjNzbENNNkFBMWZyTStiNDkrRGUxcllwRkZ1alZMCkJZYUJBb0dBUzFubW85WW5OanF4cDB6djF0c3c4QmV3aEhMQTVJaXNMSk5YbFhxZFAyMTE1L3VLSUtkR201YjAKV3BJcTQxbFFUT3ZRWEg3b0F4QTdlSi9XN3JSQjNtYzllME9IbGFvdFJYMEg4ZjVUZUNrS0syR1ZMb0Q2YkNZSQpQMlBWOUlnaTlENlV1MjR4WDBTd2YwaGVEUHE5akYvNi9kMW00NUx6TDRuUllPVE4zM1U9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 2059defab634e99d3f2bda662abc79f299ea4caccfed00bac65eaed0174bc5f5
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/operator-generic:v1.14.1@sha256:e061de0a930534c7e3f8feda8330976367971238ccafff42659f104effd4b5f7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          ports:
            - containerPort: 9963
              hostPort: 9963
              name: prometheus
              protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: a54a751d3cf64546dba5b3395687cc09c3b5e47fa7be0877c3b31dcbea6d73ca
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.14.1@sha256:db30e85a7abc10589ce2a97d61ee18696a03dc5ea04d44b4d836d88bd75b59d8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                    - key: ca.crt
                      path: hubble-server-ca.crt
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 2059defab634e99d3f2bda662abc79f299ea4caccfed00bac65eaed0174bc5f5
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: 192.168.20.1
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.14.1@sha256:edc1d05ea1365c4a8f6ac6982247d5c145181704894bb698619c3827b6963a72
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          projected:
            defaultMode: 256
            sources:
              - secret:
                  name: cilium-clustermesh
                  optional: true
              - secret:
                  items:
                    - key: tls.key
                      path: common-etcd-client.key
                    - key: tls.crt
                      path: common-etcd-client.crt
                    - key: ca.crt
                      path: common-etcd-client-ca.crt
                  name: clustermesh-apiserver-remote-cert
                  optional: true
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                    - key: ca.crt
                      path: client-ca.crt
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
