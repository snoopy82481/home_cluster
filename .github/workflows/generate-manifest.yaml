---
name: "Generate Manifest"

on:
  pull_request:
    paths:
      - 'infrastructure/talos/betty/integrations/**/kustomization.yaml'

env:
  INTIGRATION_DIR: ./infrastructure/talos/betty/integrations

jobs:
  generate-manifest:
    name: generate-manifest
    runs-on: ubuntu-latest
    # if: contains(fromJSON('["cilium", "kubelet-csr-approver"]'), github.event.pull_request.title)
    steps:
      - name: Generate Token
        uses: tibdex/github-app-token@0914d50df753bbc42180d982a6550f195390069f # v2.0.0
        id: generate-token
        with:
          app_id: "${{ secrets.BOT_APP_ID }}"
          private_key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          token: "${{ steps.generate-token.outputs.token }}"

      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Tools
        shell: bash
        run: brew install kustomize

      - name: Parse PR Title
        id: parse-title
        run: |
          title="${{ github.event.pull_request.title }}"
          parsed_title=""

          if [[ "$title" =~ "cilium" ]]; then
            parsed_title="cilium"
          elif [[ "$title" =~ "kubelet-csr-approver" ]]; then
            parsed_title="kubelet-csr-approver"
          fi

          echo "parsed_title=$parsed_title" >> "${GITHUB_OUTPUT}"

      - name: Run Generate Manifest
        run: |
          title="${{ steps.parse-title.outputs.parsed-title }}"

          if [[ "$title" = "cilium" ]]; then
            cd "${{ env.INTEGRATION_DIR }}/cni"
          elif [[ "$title" = "kubelet-csr-approver" ]]; then
            cd "${{ env.INTEGRATION_DIR }}/kubelet-csr-approver"
          fi

          ./generate.sh
