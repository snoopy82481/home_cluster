---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU8zN3dTUTl3emZlSWl3QitXTnFiNjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU56SXdOVGN6TVZvWERUSTFNRGt5TmpJdwpOVGN6TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0c0JMVDByRCtObXhWSk5aSUZPZXBoa3BJK25POW1YZkVLTUg2blZ0dDd5cGZER0IKV1FIaUZ2Vy9HQUpuWGxlblAvOFl1ZWFlekNLUG9KMlJEbnhwcGxEZldIVE93aElUbWtBTmlKMmZLenR0b1FQNwp1RHpHWEZ6b3pIWExmWXV5TEtSc1hZWWVITEQ1bkdjRDZ2OHdOVi9DMHZkaDBZc0pMRGpNQnhJRVNSY21nc2FPCnpiOHROb296c3lodkVMeUVUeDc1aW5HOUdLY1hYZEhYYS9XWWx2bFVXdnhnN2hrNjRnQ3p4RnB2RkI5RVpQYmwKb0kzenJMWEpIQXlmb0U2QTkwK0FMZVR1bzNrNjRLUjFHVFNDN3ZkVTBVenlzWGVWS0dCbEoxbE9mbWdmTGRQNwpIb2NBVFJZVHBPM2VzQUdGMDBoV0JZTXlPVnZhbTZWVEV1dktrd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRlpOdWw5czBmSDZwblBKREtJeWxTWDZ1aTVVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQTY1a0llaDlZaFBXMzIxSXNVSXRlNkd6bkxSa0RZNnV1MzlWRkZGd0ZVdS9WcjJmNGorekY5CkNkQlVJS2hZamJhYWIvdmlBZDdzbTZPV3hVZGw3SmllbnFyaGtkYzlka2RPbXZaRnVtOVpLdDdJYWxCc2N4MDgKaXJxZVNEWlZFSnhYb2xEcjNnWmZKM0JISXhqNFlvUVQxYjFycWtrUVgrMVFYclR4WUNueThGcjY2V3VvaEhGNwpyam41WWlEei9hRFhRZEM1ak5ES25uY3MwOTNZazJDK09SaFVXM1czTVA5UXNEV1duOU9wcDlISk53VU52OGVtCngzSjRTcFQvblhqLzJnNFFuSTJYeDcvaE9yZ09pYmErNFRsQmZiQ2I5anNNeG1Ga1JvVDgwaUt6aG5ZWGRFYzAKTThTRHFvb0dYZ2prV0RMYlJSK3dSS3RSM24xa0lQcXYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdHNCTFQwckQrTm14VkpOWklGT2VwaGtwSStuTzltWGZFS01INm5WdHQ3eXBmREdCCldRSGlGdlcvR0FKblhsZW5QLzhZdWVhZXpDS1BvSjJSRG54cHBsRGZXSFRPd2hJVG1rQU5pSjJmS3p0dG9RUDcKdUR6R1hGem96SFhMZll1eUxLUnNYWVllSExENW5HY0Q2djh3TlYvQzB2ZGgwWXNKTERqTUJ4SUVTUmNtZ3NhTwp6Yjh0Tm9venN5aHZFTHlFVHg3NWluRzlHS2NYWGRIWGEvV1lsdmxVV3Z4ZzdoazY0Z0N6eEZwdkZCOUVaUGJsCm9JM3pyTFhKSEF5Zm9FNkE5MCtBTGVUdW8zazY0S1IxR1RTQzd2ZFUwVXp5c1hlVktHQmxKMWxPZm1nZkxkUDcKSG9jQVRSWVRwTzNlc0FHRjAwaFdCWU15T1Z2YW02VlRFdXZLa3dJREFRQUJBb0lCQUdPTTFIbFpETy9lQmc5QQpST2lySkZ6dWo4NlVhcjBtT1NEaTdrajF0dExEM3I5Y2FFMklEUlRjd1QvZTcxZ2cvMmFKRzNzSSthL1JrOU8yCmdYSVdxNmFCbjJpY0dKVDNLOTUyemVpQmxGY0VoRytWcitWb2xkVnlkdzRKak5QUzZUZ1FTVWVZNjRaTmtXdDEKWWxqOHNkSWhYQXQzM3IwNnM4QjNJQTBwNzFPd2I1bHBJOFhwN1dlUzVmZGZOdkk5ZWhhNkV4TTF1N2tsR0ZaMgo0V21pd1JHZk5xOWIxZ2d5cCttUTJBVG5iWkhNbWdQU2VybjR3RTdsZmN2MUZEUFZ0SW5qcVR2a0NNeGF5ZCs5Ck11RUN0LzhyenN0alNscU5PZ0xxUjlENG5XSzgzYzNZbU02L2lZM0FEMXRPWlRvSFJ6cE1lRi9CWVgwZWh4MDcKOERxMXpVRUNnWUVBOGNOaUkzT0NyYUphT1pCS3VINnpneml6T3dqcWhUYVJzY3lqTnBxN0UwbFJxUzAyeVY3cQphSFRXNHk5ZDV3T2tKcFQzZURZYkE2dXZZVWtjN2xtRjdwNmhGV0FmckJSaXYvaHA4VmVUL3BmZlZrVDFsNmJECmUvRktBYSsvMjkrS1RRS3JrRElHWFM5RklvUjZtdHBieWZOLzJBQWFyWnZXNm1wa0RCUWxtQnNDZ1lFQXdZTkwKaXRNMkJWR3lheUgvUVphOGVYRWxRWVhhaGRMOWZpYnFYTWJDQjk0cEIyZ0o0SjJwd2pDaXd2azE0WFpEVkJRZQpFbDhKWlFqOGNvcU1Hakd2L0x4L2xWZzNjYWVIY3NXSE9XU1lWYjZrZU0yTmNLOURlNjg5alBMb0ZMY3Noa2dHCllVcDNraThaeWp5TUtJMjBvK21DVURaRnQwOU1vWVB0ZENjV3J1a0NnWUVBMnY2MlZoQ2JMZmVqclFNRWZFemgKQlJ1R1Z4S0RoWG5oemVIbGNtQUUxN3FSaXlLV3Z5QUlTK2lTZ3FaMGMvOTdZU3VOWTBuM2ZJSzNVZk90amtadgpxSy91a0hOTEhWQTJCMWpaZHJGek1LcVh0d2l1UXRuZnQ5VGd5ZGhPZmJmbkNrMUI1Vk03S292WUh5VkwvaHVRCkM4WlRadkRwT1p1eHVSUDRYbXlkaFVNQ2dZQnFmamk2WTFXZFE4SnVWcjFFZVJHcnUycUhUb1JkbFNsUG5WYm8KUzdGSDV5aXBITVlpeUdFOXJzcERoaVh5dDhTQnByaU4zNk1wNlBJVWpzNWZNK3pucDB5SEFZOHhpc0p0bE9xLwoyTzVFY2EvTmswRTlQQlpsSUtFOHlnaVNMZVBnMmc0NHlHUlpISGFTNXhNeTFoa05BMXBsamhoN3NyWTNSSVVPCm9OeEkwUUtCZ1FDZUdwcTFsN011OU5QcE51UEJncU1uYzN0KzZRUG1RaWRSNUZTQWJiVW1NVFQxVThNc1FjWkEKZ3NlUUhMMGg3eUFjQlRQZ3FSRmR0NzJiQ2FGSERzQWVDWUxERk94b0tEajlpYUtYcWVyVHRWYUV6RGU5aVhubwpIL29VNnlxaEl0andTTTd3ZWtlSTY3aElFSjFXZVJ0eXNTenFlQnBQdzV2K0d6RE9mTmxSWmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU8zN3dTUTl3emZlSWl3QitXTnFiNjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU56SXdOVGN6TVZvWERUSTFNRGt5TmpJdwpOVGN6TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0c0JMVDByRCtObXhWSk5aSUZPZXBoa3BJK25POW1YZkVLTUg2blZ0dDd5cGZER0IKV1FIaUZ2Vy9HQUpuWGxlblAvOFl1ZWFlekNLUG9KMlJEbnhwcGxEZldIVE93aElUbWtBTmlKMmZLenR0b1FQNwp1RHpHWEZ6b3pIWExmWXV5TEtSc1hZWWVITEQ1bkdjRDZ2OHdOVi9DMHZkaDBZc0pMRGpNQnhJRVNSY21nc2FPCnpiOHROb296c3lodkVMeUVUeDc1aW5HOUdLY1hYZEhYYS9XWWx2bFVXdnhnN2hrNjRnQ3p4RnB2RkI5RVpQYmwKb0kzenJMWEpIQXlmb0U2QTkwK0FMZVR1bzNrNjRLUjFHVFNDN3ZkVTBVenlzWGVWS0dCbEoxbE9mbWdmTGRQNwpIb2NBVFJZVHBPM2VzQUdGMDBoV0JZTXlPVnZhbTZWVEV1dktrd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRlpOdWw5czBmSDZwblBKREtJeWxTWDZ1aTVVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQTY1a0llaDlZaFBXMzIxSXNVSXRlNkd6bkxSa0RZNnV1MzlWRkZGd0ZVdS9WcjJmNGorekY5CkNkQlVJS2hZamJhYWIvdmlBZDdzbTZPV3hVZGw3SmllbnFyaGtkYzlka2RPbXZaRnVtOVpLdDdJYWxCc2N4MDgKaXJxZVNEWlZFSnhYb2xEcjNnWmZKM0JISXhqNFlvUVQxYjFycWtrUVgrMVFYclR4WUNueThGcjY2V3VvaEhGNwpyam41WWlEei9hRFhRZEM1ak5ES25uY3MwOTNZazJDK09SaFVXM1czTVA5UXNEV1duOU9wcDlISk53VU52OGVtCngzSjRTcFQvblhqLzJnNFFuSTJYeDcvaE9yZ09pYmErNFRsQmZiQ2I5anNNeG1Ga1JvVDgwaUt6aG5ZWGRFYzAKTThTRHFvb0dYZ2prV0RMYlJSK3dSS3RSM24xa0lQcXYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdHNCTFQwckQrTm14VkpOWklGT2VwaGtwSStuTzltWGZFS01INm5WdHQ3eXBmREdCCldRSGlGdlcvR0FKblhsZW5QLzhZdWVhZXpDS1BvSjJSRG54cHBsRGZXSFRPd2hJVG1rQU5pSjJmS3p0dG9RUDcKdUR6R1hGem96SFhMZll1eUxLUnNYWVllSExENW5HY0Q2djh3TlYvQzB2ZGgwWXNKTERqTUJ4SUVTUmNtZ3NhTwp6Yjh0Tm9venN5aHZFTHlFVHg3NWluRzlHS2NYWGRIWGEvV1lsdmxVV3Z4ZzdoazY0Z0N6eEZwdkZCOUVaUGJsCm9JM3pyTFhKSEF5Zm9FNkE5MCtBTGVUdW8zazY0S1IxR1RTQzd2ZFUwVXp5c1hlVktHQmxKMWxPZm1nZkxkUDcKSG9jQVRSWVRwTzNlc0FHRjAwaFdCWU15T1Z2YW02VlRFdXZLa3dJREFRQUJBb0lCQUdPTTFIbFpETy9lQmc5QQpST2lySkZ6dWo4NlVhcjBtT1NEaTdrajF0dExEM3I5Y2FFMklEUlRjd1QvZTcxZ2cvMmFKRzNzSSthL1JrOU8yCmdYSVdxNmFCbjJpY0dKVDNLOTUyemVpQmxGY0VoRytWcitWb2xkVnlkdzRKak5QUzZUZ1FTVWVZNjRaTmtXdDEKWWxqOHNkSWhYQXQzM3IwNnM4QjNJQTBwNzFPd2I1bHBJOFhwN1dlUzVmZGZOdkk5ZWhhNkV4TTF1N2tsR0ZaMgo0V21pd1JHZk5xOWIxZ2d5cCttUTJBVG5iWkhNbWdQU2VybjR3RTdsZmN2MUZEUFZ0SW5qcVR2a0NNeGF5ZCs5Ck11RUN0LzhyenN0alNscU5PZ0xxUjlENG5XSzgzYzNZbU02L2lZM0FEMXRPWlRvSFJ6cE1lRi9CWVgwZWh4MDcKOERxMXpVRUNnWUVBOGNOaUkzT0NyYUphT1pCS3VINnpneml6T3dqcWhUYVJzY3lqTnBxN0UwbFJxUzAyeVY3cQphSFRXNHk5ZDV3T2tKcFQzZURZYkE2dXZZVWtjN2xtRjdwNmhGV0FmckJSaXYvaHA4VmVUL3BmZlZrVDFsNmJECmUvRktBYSsvMjkrS1RRS3JrRElHWFM5RklvUjZtdHBieWZOLzJBQWFyWnZXNm1wa0RCUWxtQnNDZ1lFQXdZTkwKaXRNMkJWR3lheUgvUVphOGVYRWxRWVhhaGRMOWZpYnFYTWJDQjk0cEIyZ0o0SjJwd2pDaXd2azE0WFpEVkJRZQpFbDhKWlFqOGNvcU1Hakd2L0x4L2xWZzNjYWVIY3NXSE9XU1lWYjZrZU0yTmNLOURlNjg5alBMb0ZMY3Noa2dHCllVcDNraThaeWp5TUtJMjBvK21DVURaRnQwOU1vWVB0ZENjV3J1a0NnWUVBMnY2MlZoQ2JMZmVqclFNRWZFemgKQlJ1R1Z4S0RoWG5oemVIbGNtQUUxN3FSaXlLV3Z5QUlTK2lTZ3FaMGMvOTdZU3VOWTBuM2ZJSzNVZk90amtadgpxSy91a0hOTEhWQTJCMWpaZHJGek1LcVh0d2l1UXRuZnQ5VGd5ZGhPZmJmbkNrMUI1Vk03S292WUh5VkwvaHVRCkM4WlRadkRwT1p1eHVSUDRYbXlkaFVNQ2dZQnFmamk2WTFXZFE4SnVWcjFFZVJHcnUycUhUb1JkbFNsUG5WYm8KUzdGSDV5aXBITVlpeUdFOXJzcERoaVh5dDhTQnByaU4zNk1wNlBJVWpzNWZNK3pucDB5SEFZOHhpc0p0bE9xLwoyTzVFY2EvTmswRTlQQlpsSUtFOHlnaVNMZVBnMmc0NHlHUlpISGFTNXhNeTFoa05BMXBsamhoN3NyWTNSSVVPCm9OeEkwUUtCZ1FDZUdwcTFsN011OU5QcE51UEJncU1uYzN0KzZRUG1RaWRSNUZTQWJiVW1NVFQxVThNc1FjWkEKZ3NlUUhMMGg3eUFjQlRQZ3FSRmR0NzJiQ2FGSERzQWVDWUxERk94b0tEajlpYUtYcWVyVHRWYUV6RGU5aVhubwpIL29VNnlxaEl0andTTTd3ZWtlSTY3aElFSjFXZVJ0eXNTenFlQnBQdzV2K0d6RE9mTmxSWmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU8zN3dTUTl3emZlSWl3QitXTnFiNjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU56SXdOVGN6TVZvWERUSTFNRGt5TmpJdwpOVGN6TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0c0JMVDByRCtObXhWSk5aSUZPZXBoa3BJK25POW1YZkVLTUg2blZ0dDd5cGZER0IKV1FIaUZ2Vy9HQUpuWGxlblAvOFl1ZWFlekNLUG9KMlJEbnhwcGxEZldIVE93aElUbWtBTmlKMmZLenR0b1FQNwp1RHpHWEZ6b3pIWExmWXV5TEtSc1hZWWVITEQ1bkdjRDZ2OHdOVi9DMHZkaDBZc0pMRGpNQnhJRVNSY21nc2FPCnpiOHROb296c3lodkVMeUVUeDc1aW5HOUdLY1hYZEhYYS9XWWx2bFVXdnhnN2hrNjRnQ3p4RnB2RkI5RVpQYmwKb0kzenJMWEpIQXlmb0U2QTkwK0FMZVR1bzNrNjRLUjFHVFNDN3ZkVTBVenlzWGVWS0dCbEoxbE9mbWdmTGRQNwpIb2NBVFJZVHBPM2VzQUdGMDBoV0JZTXlPVnZhbTZWVEV1dktrd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRlpOdWw5czBmSDZwblBKREtJeWxTWDZ1aTVVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQTY1a0llaDlZaFBXMzIxSXNVSXRlNkd6bkxSa0RZNnV1MzlWRkZGd0ZVdS9WcjJmNGorekY5CkNkQlVJS2hZamJhYWIvdmlBZDdzbTZPV3hVZGw3SmllbnFyaGtkYzlka2RPbXZaRnVtOVpLdDdJYWxCc2N4MDgKaXJxZVNEWlZFSnhYb2xEcjNnWmZKM0JISXhqNFlvUVQxYjFycWtrUVgrMVFYclR4WUNueThGcjY2V3VvaEhGNwpyam41WWlEei9hRFhRZEM1ak5ES25uY3MwOTNZazJDK09SaFVXM1czTVA5UXNEV1duOU9wcDlISk53VU52OGVtCngzSjRTcFQvblhqLzJnNFFuSTJYeDcvaE9yZ09pYmErNFRsQmZiQ2I5anNNeG1Ga1JvVDgwaUt6aG5ZWGRFYzAKTThTRHFvb0dYZ2prV0RMYlJSK3dSS3RSM24xa0lQcXYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUtZT2p1RUVjWGdjNys2NnQ5UVVPUmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU56SXdOVGN6TWxvWERUSTFNRGt5TmpJdwpOVGN6TWxvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTFSZWF3djhyRUs3cU53MDNFeWtpcXpreVo3aG4KbFNZa1N0UUE5OHIrUnRLMDR5QVdDSFU5UEZGbThTYXVkUmRxZlB4amlTQm5Vc3l5VHhUa2pWRm9SMDFsc3QxZQpBSEpqN0ltTlRGa1RLaVJKVVVIdEJ6TUdZZTdCQjlqZExwUGdPTVRiK1N3bStZWmpyZlZLQ1BSSUtBbU95R2VECmxVbGxudFZRK25yREpySHVSdnlkNjJ2T3A1b3pFaUFIYlpxRXM5ZElnMUo4K2JWUXV2OVhrcXZ3UmtDU01lRlkKemw5QUYvbTJ1WlpITldZeU9DTUt5Y2ZiUWJ5S1l0YjV2MHphSmNyOVlCSHRJVVd6eEFFWXVOWDNnNDgwVkpUOApXOWlpc3pqMGVTOEp4TEU5U3FBOUVTNTZBdWMyQWp6UzluMmpSYTZIaUYyWEZEejJKR1hPc2ZzclFRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUldUYnBmYk5IeCtxWnp5UXlpTXBVbAorcm91VkRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRURYUVpoMkk2QW1CVUI3Mk9EanpRMTUycitYVVMrT3BaMnV4NGEvMEVMd2ZxaEoKdFRwQVVJM0g1QTVWWkcxb0d4SWVVbndwVWtmSjV1aHdBTnE1N0NmM2g0Witxd2RqaG1tUEcwc0NnRTV6SDFSNwpGcTByRHlQLzExbHR3UjdLcmZlQjhEWGdOUktzTFFZcXF5cFpSRmt3ZkhsNndTVytlYUFqbGtiS1lTc25tRjJhCmZZRmp5Mng4ZzVHMXU3cGg3ajVRL2tMK0dZa1Q4S3dvRFA2TW92eXRLOTZXWGVsQnBJb3VqVE9PMDVmV2xMdjIKWUlNSHo3eVZSbktiMExxNXB5VVAwYi9wdXQ1V0RwZTNEcE0rQ1RJeVRYRU1Qb1ZRTUtlMXhSTlE5TGhSanZBdApLSVNsUWUyUUFjZTBrRFpFRzk3UzkxSFRpQzZFTFZMZWJYeHg3RG89Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMVJlYXd2OHJFSzdxTncwM0V5a2lxemt5WjdobmxTWWtTdFFBOThyK1J0SzA0eUFXCkNIVTlQRkZtOFNhdWRSZHFmUHhqaVNCblVzeXlUeFRralZGb1IwMWxzdDFlQUhKajdJbU5URmtUS2lSSlVVSHQKQnpNR1llN0JCOWpkTHBQZ09NVGIrU3dtK1laanJmVktDUFJJS0FtT3lHZURsVWxsbnRWUStuckRKckh1UnZ5ZAo2MnZPcDVvekVpQUhiWnFFczlkSWcxSjgrYlZRdXY5WGtxdndSa0NTTWVGWXpsOUFGL20ydVpaSE5XWXlPQ01LCnljZmJRYnlLWXRiNXYwemFKY3I5WUJIdElVV3p4QUVZdU5YM2c0ODBWSlQ4VzlpaXN6ajBlUzhKeExFOVNxQTkKRVM1NkF1YzJBanpTOW4yalJhNkhpRjJYRkR6MkpHWE9zZnNyUVFJREFRQUJBb0lCQUNMamJIbEVvZDVuWlAyQwpjbVAydGpCbWV2UTBZdkV1ZjM2bzIwZTJ1bzhKN0lmTE54QkhjYkV3ZXJRODZ3OU11Q2lpZ2dGdmhyc3R2SHZxCkpjbGxiTGRQMnJqQU9hWEZGTXNqY2pqdjFJMXZ4M2xBVy9oenlEVzhpMm9uZlg4a3d1OUllK045OFJ1bGZ5aDYKSXBiNHQ5K21RUFJhemxaZzMveHpYSURHSExGMjM5UkNXTmRLSjRQKzlXS2d0MXVpMWhydlg2WkV3MjRMMytraApLYmhYRW9jZGNEMU56c000bmJOcGF3enZOUm05Y2tXS0VlNEhpZWpBaURZNDUraWRVak5qaVowalNIOFFYc2RxCnladTRlNmdzb21meFdjTFVUWlpQdFB3eHQvbk51V0VnSFp1NjZJQ1EyblpKV1FsVE5sMXl0Y0dqV3ZXVGFlTlEKb1h4eEdZRUNnWUVBNDNHY09EQnJtMmZORTJQaDJTZjFkVUdIV0poY1IwRjdETVlpUGNKbDZOSEFmYUhGWktGVApnajFzRVhxcDN3eWFQejhMQWlnMVJRZmlHd1RjNTkwMDc3QlYyWklGYjhpMXlFbWIzY2phSTA2aGNhc1pKdW0yCjBTRklocE1WUlRFQXZPUVlqUmhlSEE0RjZWRzBTUWx0ZkpLR0I5MlN5V0JTYlBGc0ZGZjJBQmtDZ1lFQTc5aTIKWjRFeEw1NkI3K0RlTE5VSFhPVnExZDkvK2FBQkRkNmFJbEdwaTZBMXFGOGFZS2krQ1crd1gwamozV0JyMlBHawpWVnR4RjFja0NmTitoenJkWlUvMVlOMjU1cG5GTE9jYXVGTWpCT2pvdkg0cHJEYmR6L3NUYkNLN1ZSOUVsZjd5Ci9CVnVmcHQ1Y1l3aFM4aHBKbklNQitQVnQyV2FxOGE5MzBJK1NXa0NnWUJkK2docGN5QlRRdzJLVUgvMklUdWIKcW1ySklaTW5ZaGY4ekRWRHZYb3NPOWJFVWo1a2VRQXZWVCs4N1NrWlgzU3dZMVVpSEFqK3IrWXQ4ZEZ4QUlhcAo3dnRaL2FxL2FIZ3IvTFlwYXA4dmJZTHBtNSsxNDJYRmZYSWhJTTd1R3ZSS0dCbEkyMk92UmVBTmF0UUtSWm4yCm1maEZjYmovK2d1MHRnQkpXNXJxcVFLQmdRQ05tK0FtUUdyditLQXpKd3RHWVFpVjJvWTNmRndzNEVGL0ZOemcKUW1MZUkxdEs2OHZCSWlBQnBrWDJIQzBkT1o2eldnaHl0U2lTWlVyTDdVM1pQZklWclIzdGNUd2ZZTTYvOGpzZQpkVWVKMEpJSktGd21aOGFTMDJUbVJhTmhZTEszOU8wMTFObUdPdmw3QndkcG5Rd29QTkhKbnNWQ0lPVXZZb29jClZSbzljUUtCZ1FDUWlNb2FicVJHTkxaMkxUSGRGTU9XdWdQMHBuamhJc1g5UlRDR0E1MWFReEZ4Ym5WUjEydFMKR3Y5TEc5Q1F6NjRxWnp1c25jVlhjQjIvUW9mQzFiWTNxNUc0d3I2M2tuU2tja3E2ai9mSk1ZdEc1UW9GVEZteQptazVJakFpYTZycjdIakI4TTNGc2xwcDA0eTFlUkowYndLcW9SUXJmby9lKy9IdUNnUXd4dWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU8zN3dTUTl3emZlSWl3QitXTnFiNjR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU56SXdOVGN6TVZvWERUSTFNRGt5TmpJdwpOVGN6TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF0c0JMVDByRCtObXhWSk5aSUZPZXBoa3BJK25POW1YZkVLTUg2blZ0dDd5cGZER0IKV1FIaUZ2Vy9HQUpuWGxlblAvOFl1ZWFlekNLUG9KMlJEbnhwcGxEZldIVE93aElUbWtBTmlKMmZLenR0b1FQNwp1RHpHWEZ6b3pIWExmWXV5TEtSc1hZWWVITEQ1bkdjRDZ2OHdOVi9DMHZkaDBZc0pMRGpNQnhJRVNSY21nc2FPCnpiOHROb296c3lodkVMeUVUeDc1aW5HOUdLY1hYZEhYYS9XWWx2bFVXdnhnN2hrNjRnQ3p4RnB2RkI5RVpQYmwKb0kzenJMWEpIQXlmb0U2QTkwK0FMZVR1bzNrNjRLUjFHVFNDN3ZkVTBVenlzWGVWS0dCbEoxbE9mbWdmTGRQNwpIb2NBVFJZVHBPM2VzQUdGMDBoV0JZTXlPVnZhbTZWVEV1dktrd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRlpOdWw5czBmSDZwblBKREtJeWxTWDZ1aTVVTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQTY1a0llaDlZaFBXMzIxSXNVSXRlNkd6bkxSa0RZNnV1MzlWRkZGd0ZVdS9WcjJmNGorekY5CkNkQlVJS2hZamJhYWIvdmlBZDdzbTZPV3hVZGw3SmllbnFyaGtkYzlka2RPbXZaRnVtOVpLdDdJYWxCc2N4MDgKaXJxZVNEWlZFSnhYb2xEcjNnWmZKM0JISXhqNFlvUVQxYjFycWtrUVgrMVFYclR4WUNueThGcjY2V3VvaEhGNwpyam41WWlEei9hRFhRZEM1ak5ES25uY3MwOTNZazJDK09SaFVXM1czTVA5UXNEV1duOU9wcDlISk53VU52OGVtCngzSjRTcFQvblhqLzJnNFFuSTJYeDcvaE9yZ09pYmErNFRsQmZiQ2I5anNNeG1Ga1JvVDgwaUt6aG5ZWGRFYzAKTThTRHFvb0dYZ2prV0RMYlJSK3dSS3RSM24xa0lQcXYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRTUprRStwSnZMbURhWm5CaW1JV1Q2REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl3T1RJM01qQTFOek15V2hjTk1qVXdPVEkyTWpBMQpOek15V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBMCt3NmZvZWxZVmp5K2hNZmgwR0MKc09hZVVyOUYzazlxZEJkdVA2NkFld1N0cHdodDJkM3dNZVVob0EyaDBzYTJtbGNyZ0JuUFRlaWNHZW02SWNUcAppUnljU0NXQVBGSUZqK1JERXl2bFRwbUc4bGUxSFVVUWJDUGVOV0c0UG0rc3U4VGlsc2N6dk4reVdZTUxiN3ZBCnVRY3YyZzVmZURYeHNFejVuWkhucUhCWndVMlpKSXZwaGRsVmh5R1BSUkxxZC83T1JpUDZoV2Nac1hHdHhOdUkKQm5zS0srOHJVU0ROaFhQNEJCeERvK0g1WGdSeVhVMC9yQWd1MHM3eGt1WTZHUGZhbUc3VVFsSERSUDJMZWZXMQozeXkzRzlGZVRjUWZOS29MblNmTUxETkdNQlpWa1V4eWJlck1YRHpUcTVBOUhtVkFGbnU0N05jYXZBOFFqclNqCk53SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSV1RicGZiTkh4K3Faegp5UXlpTXBVbCtyb3VWREFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDa2VOWFhmeHBMQVVCNlJGRHZPdWJSeFd1MU1QM2IKaFVSYnlObmlVUytMMmlaZmRjR091U3UwVHNoLzNzTTM3YUhEQmRmRTUrSkI1ZGZ4QlpRQlBQYituclpzUmRpUwpCaXF2Rm5wajNub01LMkM1TzBEM1A1aUtGdGg3cHRGdFJIWXF3MkY4aXF3YkpCbTBXVG1hM3A1SjdDMW5WYkxCCmlCWUFSbHdoVEtjdERMQytwaDVuTlVTYXZSNHVCRktnYkFHRU1LaWlzR2RsUW5hZlZ5dWM5amlmOVdMWTNzdDIKTzBEMjlnSXB6Uk43RGFQRFJneThvbzNaVXlLUlVIQitnaUhwWm04OGZxeHhmRjV1TW8zS1A4bDNPL0loUWk1bgplaG1KeW9VQjVFTzhQOGxTYVRWMkpETzEyd1ZGTEtUK21MKzNYTERjOGE3LzN1SmoydVJYeGJQQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMCt3NmZvZWxZVmp5K2hNZmgwR0NzT2FlVXI5RjNrOXFkQmR1UDY2QWV3U3Rwd2h0CjJkM3dNZVVob0EyaDBzYTJtbGNyZ0JuUFRlaWNHZW02SWNUcGlSeWNTQ1dBUEZJRmorUkRFeXZsVHBtRzhsZTEKSFVVUWJDUGVOV0c0UG0rc3U4VGlsc2N6dk4reVdZTUxiN3ZBdVFjdjJnNWZlRFh4c0V6NW5aSG5xSEJad1UyWgpKSXZwaGRsVmh5R1BSUkxxZC83T1JpUDZoV2Nac1hHdHhOdUlCbnNLSys4clVTRE5oWFA0QkJ4RG8rSDVYZ1J5ClhVMC9yQWd1MHM3eGt1WTZHUGZhbUc3VVFsSERSUDJMZWZXMTN5eTNHOUZlVGNRZk5Lb0xuU2ZNTEROR01CWlYKa1V4eWJlck1YRHpUcTVBOUhtVkFGbnU0N05jYXZBOFFqclNqTndJREFRQUJBb0lCQUNpQi9BQlpqMHdYUTRKMwppMHhBUW1ucit4RllERlBkSEQwS2lZRlVxcXhaRFpSaThSUjI3c1dxeFkyaGJYQXJtWlhRMmJqSHRpOXZLZjl1CkJLMFZ4WW4yMVF5WlZuU3hQT3p2TmI4QllmaHZNak02ZnAwVXFYbnlOVFJBOUlYQ3RPTERWSWg3bFRFaUZTWTAKL1VlalBNaGhUazFBK0JDelJ2cHJERCtKTngyajJ3aldta1l6SXVORkxybnRkdmhDUGo4ZjBGMW1QWGZqSCtNUwpscFVZamxBOTIveDhyWTAvbU13TEdWZFBybzZWZ2kzQ0R5bXZZbVFmSS91K2w2cHNnbXVueXNzaGRYYllGcDRBCnNoZU1OVDhodklLSkx4MGdVbzVoOFdFMFVzUW16QTI4bEpQam44YTMxOCtCYTJtQVNBM3JnVEpKOGx3NS91WmIKZTVaYmphRUNnWUVBNktpNnZ2TkZOOXNWV0I3aklqcWxLQnVwcmIveU1meU5HUWlkMFo5QjBXTVR1aTJlZ0FuegpnT2wxdW1aeC92TEs2K0RPam02aVpabmU3Z1FPSFFDYnhCcVZYNnhkUytiQ05EVzJ1Yi8zMHNEVGtCRmxYS2s2CnJaTjhIampEZDFXaHRMTXhJbGxBejl5SmRmNEI3alNjUjNyb3Rpcnl5UzVmZnRKVGo3OW5Kc2NDZ1lFQTZTN3cKR1UxdHFkVHhtays4d3pRM09keXdYUGdYY2JodlFCRmpYaHJlYVJGaXhXUHQxeWZEbFdqRE5zMW5IbWp6TzhWWQpIejRNclQ2bzJqNE9PNlpMUXRiZ3VVWUZvSGM5ZFdQdm5oU0VOMTVmeC9KMDl1aFZpeFFLQnNBRERxd1NLcjd6CmxKdE1YTHRJRVY2WDNGb1ZWeUpNekZjLzJEZ0RMdkVhR2hUOGNCRUNnWUFjMVZ4ZmNkS3dPMnlId1R3dzc4ZXMKRXRHU2dPbEpISjEzN3NOd1NTWmxCcnhaSkhJeU9BbC9mbTlpckhPUVB4SzY3TjlzYzNXWTFkcjA4SGUzVEc0QgpmYkhwYTNrY2dQcXNjY08xZlg3L0ZYcWlyaVU3dUpWWEVhSWVOTGEwd1Y0TEFQSWo2Wi9Jb3ZJK056NlNBTjhsClZLd21kMmdqV3FYbkY3WFhhTWNsM1FLQmdEVnNpcGZSZEltUGZ4Y1NvN1c1ZGRtczVUODNtKzl6Q1JJTnFjMTYKckhBNENvQWM1L1grWjBJSThZalJ3SWxvRkNvaWlaRUczMUtsNDN1MDhmL2FscTJtbTIvM1NmeTh0UGo3UDMvaApSWFdHQ3IyOW4reWR5Rk9IOE5BaEY5STV2Q1BOQWZPUExReWwzOW9TNlFvVUhZV01GenBOMXhQTHFYY015Q1VuCm43cHhBb0dBUWlmQ2tvM2Q0NkZJY1MvcDA3MVR3cDBsN0xyTHhLbDZORkhDUEROV3piQWs0c0FjSWdPY3NpdEUKbEtLY1dCNmJwemkxZnVpeXhvWUVDM0I1WFBldWpzbFlORXpnYVFqNTd3ako2aHFnQnlreEYyVGVMZjdOYjNYRgpiTHlNVXNVSHdFQUlBditWc1lxWXE1L2owTGNpY3o4TkxIS0hRVkFuR2FCLzRPYXdvRjg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  disable-envoy-version-check: "false"

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9090"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "disabled"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.42.0.0/16

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: "0.0.0.0:10256"
  bpf-lb-sock: "false"
  node-port-range: "30000,32767"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics: dns:query;ignoreAAAA
    drop
    tcp
    flow
    port-distribution
    icmp
    http
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"

  enable-envoy-config: "true"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout:
    retry-timeout:
    sort-buffer-len-max:
    sort-buffer-drain-timeout:
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      # This is used when validating policies in preflight. This will need to stay
      # until we figure out how to avoid "get" inside the preflight, and then
      # should be removed ideally.
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumbgploadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumegressnatpolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    # To synchronize garbage collection of such resources
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
    verbs:
      - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      # to automatically delete [core|kube]dns pods so that are starting to being
      # managed by Cilium
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # To remove node taints
      - nodes
      # To set NetworkUnavailable false on startup
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # to perform LB IP allocation for BGP
      - services/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      # to check apiserver connectivity
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # to perform the translation of a CNP that contains `ToGroup` to its endpoints
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
      - create
      - update
      - deletecollection
      # To update the status of the CNPs and CCNPs
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      # Update the auto-generated CNPs and CCNPs status.
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      # To perform garbage collection of such resources
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      # To synchronize garbage collection of such resources
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      # To perform CiliumNode garbage collector
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
    resourceNames:
      - ciliumbgploadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumegressnatpolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
  # For cilium-operator running in HA mode.
  #
  # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
  # between multiple running instances.
  # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
  # common and fewer objects in the cluster watch "all Leases".
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
    annotations:
      meta.helm.sh/release-name: cilium
      meta.helm.sh/release-namespace: kube-system
    labels:
      app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: kube-system
    annotations:
      meta.helm.sh/release-name: cilium
      meta.helm.sh/release-namespace: kube-system
    labels:
      app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: "hubble-ui"
    namespace: kube-system
    annotations:
      meta.helm.sh/release-name: cilium
      meta.helm.sh/release-namespace: kube-system
    labels:
      app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/scrape: "true"
    prometheus.io/port: "9964"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
    - name: envoy-metrics
      port: 9964
      protocol: TCP
      targetPort: envoy-metrics
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/scrape: "true"
    prometheus.io/port: "9965"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
spec:
  clusterIP: None
  type: ClusterIP
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "9492f826e76110b4bc68ce1f2831fbdef04badbc3700646eeb7e1aa709c13ef0"
      labels:
        k8s-app: cilium
    spec:
      containers:
        - name: cilium-agent
          image: "quay.io/cilium/cilium:v1.12.3@sha256:30de50c4dc0a1e1077e9e7917a54d5cab253058b3f779822aec00f5c817ca826"
          imagePullPolicy: IfNotPresent
          command:
            - cilium-agent
          args:
            - --config-dir=/tmp/cilium/config-map
          startupProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            failureThreshold: 105
            periodSeconds: 2
            successThreshold: 1
          livenessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: CILIUM_CNI_CHAINING_MODE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: cni-chaining-mode
                  optional: true
            - name: CILIUM_CUSTOM_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: custom-cni-conf
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "192.168.20.254"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          lifecycle:
            postStart:
              exec:
                command:
                  - "/cni-install.sh"
                  - "--enable-debug=false"
                  - "--cni-exclusive=true"
                  - "--log-file=/var/run/cilium/cilium-cni.log"
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          ports:
            - name: peer-service
              containerPort: 4244
              hostPort: 4244
              protocol: TCP
            - name: prometheus
              containerPort: 9090
              hostPort: 9090
              protocol: TCP
            - name: envoy-metrics
              containerPort: 9964
              hostPort: 9964
              protocol: TCP
            - name: hubble-metrics
              containerPort: 9965
              hostPort: 9965
              protocol: TCP
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
            - name: cilium-run
              mountPath: /var/run/cilium
            - name: cni-path
              mountPath: /host/opt/cni/bin
            - name: etc-cni-netd
              mountPath: /host/etc/cni/net.d
            - name: clustermesh-secrets
              mountPath: /var/lib/cilium/clustermesh
              readOnly: true
            - name: cilium-config-path
              mountPath: /tmp/cilium/config-map
              readOnly: true
              # Needed to be able to load kernel modules
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: xtables-lock
              mountPath: /run/xtables.lock
            - name: hubble-tls
              mountPath: /var/lib/cilium/tls/hubble
              readOnly: true
      initContainers:
        # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
        # We use nsenter command with host's cgroup and mount namespaces enabled.
        - name: mount-cgroup
          image: "quay.io/cilium/cilium:v1.12.3@sha256:30de50c4dc0a1e1077e9e7917a54d5cab253058b3f779822aec00f5c817ca826"
          imagePullPolicy: IfNotPresent
          env:
            - name: CGROUP_ROOT
              value: /run/cilium/cgroupv2
            - name: BIN_PATH
              value: /opt/cni/bin
          command:
            - sh
            - -ec
            # The statically linked Go program binary is invoked to avoid any
            # dependency on utilities like sh and mount that can be missing on certain
            # distros installed on the underlying host. Copy the binary to the
            # same directory where we install cilium cni plugin so that exec permissions
            # are available.
            - |
              cp /usr/bin/cilium-mount /hostbin/cilium-mount;
              nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
              rm /hostbin/cilium-mount
          volumeMounts:
            - name: hostproc
              mountPath: /hostproc
            - name: cni-path
              mountPath: /hostbin
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            privileged: true
        - name: apply-sysctl-overwrites
          image: "quay.io/cilium/cilium:v1.12.3@sha256:30de50c4dc0a1e1077e9e7917a54d5cab253058b3f779822aec00f5c817ca826"
          imagePullPolicy: IfNotPresent
          env:
            - name: BIN_PATH
              value: /opt/cni/bin
          command:
            - sh
            - -ec
            # The statically linked Go program binary is invoked to avoid any
            # dependency on utilities like sh that can be missing on certain
            # distros installed on the underlying host. Copy the binary to the
            # same directory where we install cilium cni plugin so that exec permissions
            # are available.
            - |
              cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
              nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
              rm /hostbin/cilium-sysctlfix
          volumeMounts:
            - name: hostproc
              mountPath: /hostproc
            - name: cni-path
              mountPath: /hostbin
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            privileged: true
        - name: clean-cilium-state
          image: "quay.io/cilium/cilium:v1.12.3@sha256:30de50c4dc0a1e1077e9e7917a54d5cab253058b3f779822aec00f5c817ca826"
          imagePullPolicy: IfNotPresent
          command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-state
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-bpf-state
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "192.168.20.254"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            privileged: true
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              # Required to mount cgroup filesystem from the host to cilium agent pod
            - name: cilium-cgroup
              mountPath: /run/cilium/cgroupv2
              mountPropagation: HostToContainer
            - name: cilium-run
              mountPath: /var/run/cilium
          resources:
            requests:
              cpu: 100m
              memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
        - name: cilium-run
          hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
        - name: bpf-maps
          hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
        # To mount cgroup2 filesystem on the host
        - name: hostproc
          hostPath:
            path: /proc
            type: Directory
        # To keep state between restarts / upgrades for cgroup2 filesystem
        - name: cilium-cgroup
          hostPath:
            path: /run/cilium/cgroupv2
            type: DirectoryOrCreate
        # To install cilium cni plugin in the host
        - name: cni-path
          hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
        # To install cilium cni configuration in the host
        - name: etc-cni-netd
          hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
        # To be able to load kernel modules
        - name: lib-modules
          hostPath:
            path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
        # To read the clustermesh configuration
        - name: clustermesh-secrets
          secret:
            secretName: cilium-clustermesh
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            optional: true
        # To read the configuration from the config map
        - name: cilium-config-path
          configMap:
            name: cilium-config
        - name: hubble-tls
          projected:
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            sources:
              - secret:
                  name: hubble-server-certs
                  optional: true
                  items:
                    - key: ca.crt
                      path: client-ca.crt
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "9492f826e76110b4bc68ce1f2831fbdef04badbc3700646eeb7e1aa709c13ef0"
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
        - name: cilium-operator
          image: quay.io/cilium/operator-generic:v1.12.3@sha256:816ec1da586139b595eeb31932c61a7c13b07fb4a0255341c0e0f18608e84eff
          imagePullPolicy: IfNotPresent
          command:
            - cilium-operator-generic
          args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "192.168.20.254"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          ports:
            - name: prometheus
              containerPort: 9963
              hostPort: 9963
              protocol: TCP
          livenessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: cilium-config-path
              mountPath: /tmp/cilium/config-map
              readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
        - name: cilium-config-path
          configMap:
            name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177"
      labels:
        k8s-app: hubble-relay
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.12.3@sha256:320dff9389e3fc6e2d33863510d497e8bcf245a5755236ae466a0729cc656a79"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
            - name: config
              mountPath: /etc/hubble-relay
              readOnly: true
            - name: tls
              mountPath: /var/lib/hubble-relay/tls
              readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: ""
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - name: config
          configMap:
            name: hubble-relay-config
            items:
              - key: config.yaml
                path: config.yaml
        - name: tls
          projected:
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            sources:
              - secret:
                  name: hubble-relay-client-certs
                  items:
                    - key: ca.crt
                      path: hubble-server-ca.crt
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: ""
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
        - name: frontend
          image: "quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
          volumeMounts:
            - name: hubble-ui-nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
            - name: tmp-dir
              mountPath: /tmp
          terminationMessagePolicy: FallbackToLogsOnError
        - name: backend
          image: "quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7"
          imagePullPolicy: IfNotPresent
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
          ports:
            - name: grpc
              containerPort: 8090
          volumeMounts: []
          terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
