---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSGttYkRNaGVzNGVWVEdzSG9oRGlNekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TVRFeE1ETXpOalE0V2hjTk1qVXhNVEV3TURNegpOalE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRDBwWGxKL0I5bzArY3pZKzc3Y053NXpHUlVObHFXVDhNek0rbkJMMENQSDkveGJaelgKSkpzV2lRYm43c2FJVy9mYk5sT2JJblRMVTc0YytEcUI1aDhYd2FFM0ZWckVwWWV6V0hBaEcxdnR1RU5BREwzdwpLcGFqS1BYeDZBSHZnVUhEaHF1T05FVU4yVnlXbUY5dHBFbHd3ZVlyUjRmSnFIalhxcEtIQ3dDaUg3dkxjZEJOCkIvS1RtT1dlVGFCQWlxc0lhdTk5K04wRHpRU3I3UEc2cnFoYzlqalEyemo5SDVXK0ZaV0ZVTGppOXVQRmdkUisKS1J5NVVpa1pTMGw5aGRSbloxbVBWWmVqb3hJamZPWHdUTFA5bENSeUtla1JxaEhiektqb1BiWm85QWNGcnltUQppSm1PRGU0YmtPZHl4QitLY3VZZ1J5TTZXOG5oL0daODY1d1pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVZcVdocXpDSmd1ay9jbUZ4S2JhVzdZYjNxNEl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLclJVd0RvQWR1NHhZa054YmZPMUduazFlUFh1V1pwL2hkUGpML2craGYzZUswWEhTSTMvaVVYCjVRMHhLZ3dVazBnTUpHcS9LY2Y1ODFPRHZUOHB0WU12UkNwQ0IvdzlzQkxHTFhySWpRUW1iemtUSTU5WVhnMUoKT3hpOWF3VERNUXRia0FkRHZ5ZGxHQVFSbkpsZXJUYmNSUURrUERSNUJvei85WVRkN1pUd2lKYUNsYThUU1RXaAo5MEg2d2Y3ZjZVRWVBbnlHaG1zQm1GRjErblozT3hoS0E4YXR3TUxtQlNGdGFySStEdnh2bE5OWHlHbzlRWEtwCnQ0SlRBRVBGUXduSHdTYmhTMjVkY2RkczZsck04QkV0L0JKODdBb21yeGRmRlRhbDdqVUlGT1NJa0w4OUhGemQKNFRZQ0ovZC91cWNUczhCOXdIWEQzZDdBZk1CN2V1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOUtWNVNmd2ZhTlBuTTJQdSszRGNPY3hrVkRaYWxrL0RNelBwd1M5QWp4L2Y4VzJjCjF5U2JGb2tHNSs3R2lGdjMyelpUbXlKMHkxTytIUGc2Z2VZZkY4R2hOeFZheEtXSHMxaHdJUnRiN2JoRFFBeTkKOENxV295ajE4ZWdCNzRGQnc0YXJqalJGRGRsY2xwaGZiYVJKY01IbUswZUh5YWg0MTZxU2h3c0FvaCs3eTNIUQpUUWZ5azVqbG5rMmdRSXFyQ0dydmZmamRBODBFcSt6eHVxNm9YUFk0ME5zNC9SK1Z2aFdWaFZDNDR2Ymp4WUhVCmZpa2N1VklwR1V0SmZZWFVaMmRaajFXWG82TVNJM3psOEV5ei9aUWtjaW5wRWFvUjI4eW82RDIyYVBRSEJhOHAKa0lpWmpnM3VHNURuY3NRZmluTG1JRWNqT2x2SjRmeG1mT3VjR1FJREFRQUJBb0lCQVFDemNHOSs4WnNFSTNEUQpBN3QwMTNuZ051ZGIwU1l1VzhDYjNMYldTRmM4NHk4NWdLRnFOK0k4N0RLUmlWUTdEZUhFK3BybURhYkd2OXlRCm1RMG8yK1h3WWNoaWc1bzQ1QVNkYWYrTWVPbTdlY3h4dlNiUGNoMWMvUjB2Mm5FWS82Q0J6bFFra0hnWnlWVWMKN0JRS2NsYWZpc2pNODhGSUN2YmZrSys2dHpvMnJrck1KWGVhRUtSOWtUOHNIYUxsS2pDNHVpNk14VitONjlkTQpCNFVzeW5vRDl5bXdOcEdCN3Rkb2V4azBYMC9yRm9FdndCYTBaazdPOVlRczBJVnUrbGRhQ2FNK3pxcFlOY1ZDCllHaUkrRGdRTFZZY29NUS9KZktmR1BvbmFEWXpSZ0V2NkRXOTNrQW5zTElSeUhDMWx2YVMzSUhPbFkxaXZoY0YKcERnL0xFaFJBb0dCQVBzK1p4N0k5ZGNoSkdWOWNyYy9zQzdUc3BHbEFqTE1DUGp2QnZPb3lhUWRNYVpNOStqYgp6cXROQS96VU93TzBzVGxrV2lpM09HVWtZdVZIM0lvbmtIUTJ4OUViL1RzQUs1M3NQWHFpQXVJNmo0eDNSMU1JCnFUVU9kNG5CWWNrc3dmYWFIdE05bW85cUFSSU8zQTRVV2VnaXF2ZXBjVnBZd2c3VzB5Q0xzUEZsQW9HQkFQbEgKR1NZT0RBM2x2eXI2dnQ3VHQ4ZEJmZDRzNEJVU0Z3QzFoMVV3NWJCTVR4TGd4REpSMU1XOW4yWk5rUUdiZitFSwplUWRwMTVGeTBRMDNyVFNrVGtVcnRvUmlmQXNJcWg2MkZmbW5ZZ2VjNlJ5VU5Pazd2WFRsMnFQeURaU0FYbFFuCkVYTVE4emRPNXNRcXIvSmszYlZNemxXdytwdEpXN0FRUUZRamNvNmxBb0dCQVBQRXFVTUtVdFVuZCt2czJyZ0gKMkVhbTZqUTcrTFVXbUlJSFVTUnFtVEpkalFYQTJpeVowSjBPUFpjNnlBT2hkdTZyZW5yVXdxZ0h0TmluYjhpdgorSTE1ZFVoanNzQmpPdTZmLzBxVUZONHhXWVE5V3Z1cWhKcFE3aFMvaDhRc1pBbURvZkx0YTZCSWhyOWhvWXNiCm5kd0lmditLN010dklPSks5MUExbVRtdEFvR0FDQ1c0dnJPcTFURnpKQlo1OHBKODZUaE13dHc0bnJldXBNbEsKR1JDMkVTTU5XcEthRndMeHIxelpQdUMrSW8xUWlxeHE5RUVUV0orbUVZYUdWTGdpRHNTMC9IS3psekM3VHJHbwoyallNVUM5aXR4cG8rRTZKaks2T2pOazJkR29WcXk1enRZMFNSZmFBT0Ywa3p3bFk3Ym9LN0dZU2FzemxBRVluCnRCaE1nRGtDZ1lBTUVBTC91NGd2TngzdFZ2a2RjRjJSVUJ5dXFYalNOU3paMWdRK3g5TW1EeWdQZDlyYWd6UUUKUDFlbVVWcW9iZEFvRDdLMzVqSG5JZnUwRlpES1hsdi8wVnRFMTdKSG9OVHlFMFFCSEhETjZIbG8vYVplNFZ5UgpFL0tjUlNRZTI1cFJvTnJSNDNpdUtSOVBvM1JwWTYrWnVKQ1VWUm5FcXhBSkIxZjBoWUh0Q0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSGttYkRNaGVzNGVWVEdzSG9oRGlNekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TVRFeE1ETXpOalE0V2hjTk1qVXhNVEV3TURNegpOalE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRDBwWGxKL0I5bzArY3pZKzc3Y053NXpHUlVObHFXVDhNek0rbkJMMENQSDkveGJaelgKSkpzV2lRYm43c2FJVy9mYk5sT2JJblRMVTc0YytEcUI1aDhYd2FFM0ZWckVwWWV6V0hBaEcxdnR1RU5BREwzdwpLcGFqS1BYeDZBSHZnVUhEaHF1T05FVU4yVnlXbUY5dHBFbHd3ZVlyUjRmSnFIalhxcEtIQ3dDaUg3dkxjZEJOCkIvS1RtT1dlVGFCQWlxc0lhdTk5K04wRHpRU3I3UEc2cnFoYzlqalEyemo5SDVXK0ZaV0ZVTGppOXVQRmdkUisKS1J5NVVpa1pTMGw5aGRSbloxbVBWWmVqb3hJamZPWHdUTFA5bENSeUtla1JxaEhiektqb1BiWm85QWNGcnltUQppSm1PRGU0YmtPZHl4QitLY3VZZ1J5TTZXOG5oL0daODY1d1pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVZcVdocXpDSmd1ay9jbUZ4S2JhVzdZYjNxNEl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLclJVd0RvQWR1NHhZa054YmZPMUduazFlUFh1V1pwL2hkUGpML2craGYzZUswWEhTSTMvaVVYCjVRMHhLZ3dVazBnTUpHcS9LY2Y1ODFPRHZUOHB0WU12UkNwQ0IvdzlzQkxHTFhySWpRUW1iemtUSTU5WVhnMUoKT3hpOWF3VERNUXRia0FkRHZ5ZGxHQVFSbkpsZXJUYmNSUURrUERSNUJvei85WVRkN1pUd2lKYUNsYThUU1RXaAo5MEg2d2Y3ZjZVRWVBbnlHaG1zQm1GRjErblozT3hoS0E4YXR3TUxtQlNGdGFySStEdnh2bE5OWHlHbzlRWEtwCnQ0SlRBRVBGUXduSHdTYmhTMjVkY2RkczZsck04QkV0L0JKODdBb21yeGRmRlRhbDdqVUlGT1NJa0w4OUhGemQKNFRZQ0ovZC91cWNUczhCOXdIWEQzZDdBZk1CN2V1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBOUtWNVNmd2ZhTlBuTTJQdSszRGNPY3hrVkRaYWxrL0RNelBwd1M5QWp4L2Y4VzJjCjF5U2JGb2tHNSs3R2lGdjMyelpUbXlKMHkxTytIUGc2Z2VZZkY4R2hOeFZheEtXSHMxaHdJUnRiN2JoRFFBeTkKOENxV295ajE4ZWdCNzRGQnc0YXJqalJGRGRsY2xwaGZiYVJKY01IbUswZUh5YWg0MTZxU2h3c0FvaCs3eTNIUQpUUWZ5azVqbG5rMmdRSXFyQ0dydmZmamRBODBFcSt6eHVxNm9YUFk0ME5zNC9SK1Z2aFdWaFZDNDR2Ymp4WUhVCmZpa2N1VklwR1V0SmZZWFVaMmRaajFXWG82TVNJM3psOEV5ei9aUWtjaW5wRWFvUjI4eW82RDIyYVBRSEJhOHAKa0lpWmpnM3VHNURuY3NRZmluTG1JRWNqT2x2SjRmeG1mT3VjR1FJREFRQUJBb0lCQVFDemNHOSs4WnNFSTNEUQpBN3QwMTNuZ051ZGIwU1l1VzhDYjNMYldTRmM4NHk4NWdLRnFOK0k4N0RLUmlWUTdEZUhFK3BybURhYkd2OXlRCm1RMG8yK1h3WWNoaWc1bzQ1QVNkYWYrTWVPbTdlY3h4dlNiUGNoMWMvUjB2Mm5FWS82Q0J6bFFra0hnWnlWVWMKN0JRS2NsYWZpc2pNODhGSUN2YmZrSys2dHpvMnJrck1KWGVhRUtSOWtUOHNIYUxsS2pDNHVpNk14VitONjlkTQpCNFVzeW5vRDl5bXdOcEdCN3Rkb2V4azBYMC9yRm9FdndCYTBaazdPOVlRczBJVnUrbGRhQ2FNK3pxcFlOY1ZDCllHaUkrRGdRTFZZY29NUS9KZktmR1BvbmFEWXpSZ0V2NkRXOTNrQW5zTElSeUhDMWx2YVMzSUhPbFkxaXZoY0YKcERnL0xFaFJBb0dCQVBzK1p4N0k5ZGNoSkdWOWNyYy9zQzdUc3BHbEFqTE1DUGp2QnZPb3lhUWRNYVpNOStqYgp6cXROQS96VU93TzBzVGxrV2lpM09HVWtZdVZIM0lvbmtIUTJ4OUViL1RzQUs1M3NQWHFpQXVJNmo0eDNSMU1JCnFUVU9kNG5CWWNrc3dmYWFIdE05bW85cUFSSU8zQTRVV2VnaXF2ZXBjVnBZd2c3VzB5Q0xzUEZsQW9HQkFQbEgKR1NZT0RBM2x2eXI2dnQ3VHQ4ZEJmZDRzNEJVU0Z3QzFoMVV3NWJCTVR4TGd4REpSMU1XOW4yWk5rUUdiZitFSwplUWRwMTVGeTBRMDNyVFNrVGtVcnRvUmlmQXNJcWg2MkZmbW5ZZ2VjNlJ5VU5Pazd2WFRsMnFQeURaU0FYbFFuCkVYTVE4emRPNXNRcXIvSmszYlZNemxXdytwdEpXN0FRUUZRamNvNmxBb0dCQVBQRXFVTUtVdFVuZCt2czJyZ0gKMkVhbTZqUTcrTFVXbUlJSFVTUnFtVEpkalFYQTJpeVowSjBPUFpjNnlBT2hkdTZyZW5yVXdxZ0h0TmluYjhpdgorSTE1ZFVoanNzQmpPdTZmLzBxVUZONHhXWVE5V3Z1cWhKcFE3aFMvaDhRc1pBbURvZkx0YTZCSWhyOWhvWXNiCm5kd0lmditLN010dklPSks5MUExbVRtdEFvR0FDQ1c0dnJPcTFURnpKQlo1OHBKODZUaE13dHc0bnJldXBNbEsKR1JDMkVTTU5XcEthRndMeHIxelpQdUMrSW8xUWlxeHE5RUVUV0orbUVZYUdWTGdpRHNTMC9IS3psekM3VHJHbwoyallNVUM5aXR4cG8rRTZKaks2T2pOazJkR29WcXk1enRZMFNSZmFBT0Ywa3p3bFk3Ym9LN0dZU2FzemxBRVluCnRCaE1nRGtDZ1lBTUVBTC91NGd2TngzdFZ2a2RjRjJSVUJ5dXFYalNOU3paMWdRK3g5TW1EeWdQZDlyYWd6UUUKUDFlbVVWcW9iZEFvRDdLMzVqSG5JZnUwRlpES1hsdi8wVnRFMTdKSG9OVHlFMFFCSEhETjZIbG8vYVplNFZ5UgpFL0tjUlNRZTI1cFJvTnJSNDNpdUtSOVBvM1JwWTYrWnVKQ1VWUm5FcXhBSkIxZjBoWUh0Q0E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSGttYkRNaGVzNGVWVEdzSG9oRGlNekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TVRFeE1ETXpOalE0V2hjTk1qVXhNVEV3TURNegpOalE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRDBwWGxKL0I5bzArY3pZKzc3Y053NXpHUlVObHFXVDhNek0rbkJMMENQSDkveGJaelgKSkpzV2lRYm43c2FJVy9mYk5sT2JJblRMVTc0YytEcUI1aDhYd2FFM0ZWckVwWWV6V0hBaEcxdnR1RU5BREwzdwpLcGFqS1BYeDZBSHZnVUhEaHF1T05FVU4yVnlXbUY5dHBFbHd3ZVlyUjRmSnFIalhxcEtIQ3dDaUg3dkxjZEJOCkIvS1RtT1dlVGFCQWlxc0lhdTk5K04wRHpRU3I3UEc2cnFoYzlqalEyemo5SDVXK0ZaV0ZVTGppOXVQRmdkUisKS1J5NVVpa1pTMGw5aGRSbloxbVBWWmVqb3hJamZPWHdUTFA5bENSeUtla1JxaEhiektqb1BiWm85QWNGcnltUQppSm1PRGU0YmtPZHl4QitLY3VZZ1J5TTZXOG5oL0daODY1d1pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVZcVdocXpDSmd1ay9jbUZ4S2JhVzdZYjNxNEl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLclJVd0RvQWR1NHhZa054YmZPMUduazFlUFh1V1pwL2hkUGpML2craGYzZUswWEhTSTMvaVVYCjVRMHhLZ3dVazBnTUpHcS9LY2Y1ODFPRHZUOHB0WU12UkNwQ0IvdzlzQkxHTFhySWpRUW1iemtUSTU5WVhnMUoKT3hpOWF3VERNUXRia0FkRHZ5ZGxHQVFSbkpsZXJUYmNSUURrUERSNUJvei85WVRkN1pUd2lKYUNsYThUU1RXaAo5MEg2d2Y3ZjZVRWVBbnlHaG1zQm1GRjErblozT3hoS0E4YXR3TUxtQlNGdGFySStEdnh2bE5OWHlHbzlRWEtwCnQ0SlRBRVBGUXduSHdTYmhTMjVkY2RkczZsck04QkV0L0JKODdBb21yeGRmRlRhbDdqVUlGT1NJa0w4OUhGemQKNFRZQ0ovZC91cWNUczhCOXdIWEQzZDdBZk1CN2V1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU9XMGxseXB3RE1aWG05YzFhYjZrZ2N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TVRFeE1UQXpNelkwT1ZvWERUSTFNVEV4TURBegpNelkwT1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTI2SGZmTWt1NkdYbWVjcEJZdGF3OXFIOVp0UlcKelcwU1dPOC92bUxLd3JINUdXTytkazhadTg5NFlrcXowMWwxQm5NTHlpMmthMUF1MmNMQS9mbHN3UWxwQ0cxVQo2bHlXd3RBSmZCTklveEhKaldIUUt0VklnT3JqeW9DcFVzNjR1Sk5HT0xMQlFwdWNFQWYyZ2dEY2VTMUJjWXBECk1WL2hndWw4YTdHL3hJcTh5Y0M3aDNsay93bzdwYVZKU1F2dElWa3ZqMSszTnQ4aVh2RGtlVTRsQmhUZ0RqSncKKzdtQVFWTEE3cnlSd3NwRkVjNjJnbWhucmQ3WVhPZkpueUtId1h5ZThhL3QvQkV0Q1pmcVZFWERQQXp4SGZNMApSenBoVUdRS3hpc3JKbWFuNmJqblZnMmJyWGk2YkhoOWhxbEpsV1Vnbk40ZHp6UjdyUmxlalkzOHl3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUmlwYUdyTUltQzZUOXlZWEVwdHBidApodmVyZ2pBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSC80d2xFMEhPeFp5Y1BKbkJ1cVFqL0Nra0ZsV2tHUmJMbUh2aUEyQUtXMkdibHYKelR2OHhHZFdxUXBJVDlSTnV5MXJnQ3RTSmxmSWRxOTQ3dEx3eE9OcnBISmI0c2ZsWnJCTEQxTDZFMnU3cmpBUApaay96SFNuSk5pb1VZS3dOcS9EbHpZVzFxa1R6V0R0SC9jdDRVcXZxdTNHUHd4bEgvdUFSVGx5RlN1UDRlZVU0CmhrajRmZFBUM2JGSERwV20vb0FVWGJHUFkyYlRJZE0zQmFOMDVGNllSajhHZk1hQzQ3bUJPaXlQbTNBMjRtYUQKVUQya1hCS2ZHblFrdVA0SEdsVU1mNG9tQTlRb0pXVVNaQjhKR25TSC9wNkh4ZDFwWTVWZFpPa3RSM2V1V3hZbApmdWdXOHF2U2R6cSttenhoTCtNOFpHZTVXOHlGS2QzcVpGZXkxTGM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMjZIZmZNa3U2R1htZWNwQll0YXc5cUg5WnRSV3pXMFNXTzgvdm1MS3dySDVHV08rCmRrOFp1ODk0WWtxejAxbDFCbk1MeWkya2ExQXUyY0xBL2Zsc3dRbHBDRzFVNmx5V3d0QUpmQk5Jb3hISmpXSFEKS3RWSWdPcmp5b0NwVXM2NHVKTkdPTExCUXB1Y0VBZjJnZ0RjZVMxQmNZcERNVi9oZ3VsOGE3Ry94SXE4eWNDNwpoM2xrL3dvN3BhVkpTUXZ0SVZrdmoxKzNOdDhpWHZEa2VVNGxCaFRnRGpKdys3bUFRVkxBN3J5UndzcEZFYzYyCmdtaG5yZDdZWE9mSm55S0h3WHllOGEvdC9CRXRDWmZxVkVYRFBBenhIZk0wUnpwaFVHUUt4aXNySm1hbjZiam4KVmcyYnJYaTZiSGg5aHFsSmxXVWduTjRkenpSN3JSbGVqWTM4eXdJREFRQUJBb0lCQUFyRWc5MXRTNVJ2TW41MApFUUtVZmZhSmVJL3JCeHBwSjRZZXJLUmIyWTcwQkw5ZTZYNkpZRHlaN2svN1U1ZWdBaUcvMENzb1U3QkRMUmpWCitIbzdHVDdaaEVHNmduZys4OUUzTzgvT2JqZzRiZ1kxYm13N0txUFBZRDJVVXpqUkU3TlEzUmQ0aEFzTTcvakYKT3l1aWVTeWpzRnF0cVorcEVMaEhWQ2MvZnFSWEJhY3hxR2h0cThLREpFczFrSmpMVHZlNFZoTVdSbjY4eGY2MgptMndXRkZHZ3dDRUpZMlhFVXdhNysvSGR3bS9qcHJpUlFwdUJFU0NhV3p4Y3IwNmhJdXhwaTBpc09BMlg2WWlCCk1Kd3Z2ZTVMb2pTOHMrWm52dlBIZjVYSEZrbDlzcnk1VFM4VnlMamhpbm5mQy80TzBMWW43M1QyU1dWUVg3UlcKMU01K0xhRUNnWUVBNDNleVowUTNlaGdKV2hyNHdvSHM3VnJ1N1JGVEZBcGIyU0NCQUxrSkcwMEswQmpDOUpQbQpVcWhORGUycGNQQnNxeTFpZTlIbUVPb2NTeWNZWnNBKyt1eTBHazJ4UGE2MGxFenAwQU1BUVJKeGhUT2ZYN3k1Ck8rQXZyV2xBV3ZKZ09nYnVsQ2Rnck9kWnF1U0R6RDJ4R3lkWlhBYjlQNk8zYWg2LzdPbGxXRnNDZ1lFQTl5NlQKUXM2R2dQOTR6ekFzUTFmU0lXVnN2djRrR0hUV2FPcVIwaXJCeDJBeDF4WTRqZXdIczRkcHQvUy9tbStQV2FmZQp5alNQQ1d6ZnpqK2QycGxnTXhKcVhXd3ViOGVDSFRTZGNQbXQ0QVNzQ0xCVWs0UTgvcGdXSTJxUmFVdUg0cFA4CnhIT0V0aWFXb0ZtSzVLcjhsUG0vSm0rbmVPN2ZqQXFhREw3Rm1GRUNnWUJ5cW10UHJVNitDSkhtVDBScFlPK2IKczBSUVUzUnEzTkh5UVhWbWRPQ0hWNjRFdXdiRUhpNTBLbzAxWVVJU1FkQzE5ZG40aXhZTUhzZ0dobjNCaGxYNQpUZ3Q0V3dQbkVVUE1vbjBYTS93VDBZVlNYWFNRNFdVTEx2YzUxcDN2ZXRGUlR4OURwaG9RNzByL1g5U2t4OUNZCjNKd3FUUWVxNWcvV3VndU1GUmZXa3dLQmdGV1NLaWpXbG5uUjkyRENySkFqdHZzWXdhemREbUhwRU5FQlk3bisKVTFkU1ZlN0FJcFAvUWl0RWxiUzVaaHR3dzQrbUxkcVNsM0lMM3U3bjF4MzJPdmR6U0o5TzlFUitMTzB2YWRIUwpuZjhQbnY3akRHU0ZReGhnVGttMGV1S1k0MUh0S1hSWkNYaUZvMStmb0JYSm0rZDNEbFdnRWJvcjkvZmpNN0YxCjJiSUJBb0dCQU43WVR2dkYvVTVIcnZkeS95aU5EWTRpWjZuVkp2ckM3NXplMEdJMSswblRKdW5xaEJBdHI0bloKRVZLUDVwek9xUjR4MllVY3lWRm1xN0kyNFlJVXB4Z1RUOTIySmp2ZGhSRVBFTnZpd0hvZGV5b2VuTW5qMGdHcApPeTNXVnIvVll3OHR3emh5MCttUm5XRFNzdU9RNjU3czAyNkNGbUhlRWFNVWJONmk2Q0ozCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
type: kubernetes.io/tls
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSGttYkRNaGVzNGVWVEdzSG9oRGlNekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TVRFeE1ETXpOalE0V2hjTk1qVXhNVEV3TURNegpOalE0V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRDBwWGxKL0I5bzArY3pZKzc3Y053NXpHUlVObHFXVDhNek0rbkJMMENQSDkveGJaelgKSkpzV2lRYm43c2FJVy9mYk5sT2JJblRMVTc0YytEcUI1aDhYd2FFM0ZWckVwWWV6V0hBaEcxdnR1RU5BREwzdwpLcGFqS1BYeDZBSHZnVUhEaHF1T05FVU4yVnlXbUY5dHBFbHd3ZVlyUjRmSnFIalhxcEtIQ3dDaUg3dkxjZEJOCkIvS1RtT1dlVGFCQWlxc0lhdTk5K04wRHpRU3I3UEc2cnFoYzlqalEyemo5SDVXK0ZaV0ZVTGppOXVQRmdkUisKS1J5NVVpa1pTMGw5aGRSbloxbVBWWmVqb3hJamZPWHdUTFA5bENSeUtla1JxaEhiektqb1BiWm85QWNGcnltUQppSm1PRGU0YmtPZHl4QitLY3VZZ1J5TTZXOG5oL0daODY1d1pBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVZcVdocXpDSmd1ay9jbUZ4S2JhVzdZYjNxNEl3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFLclJVd0RvQWR1NHhZa054YmZPMUduazFlUFh1V1pwL2hkUGpML2craGYzZUswWEhTSTMvaVVYCjVRMHhLZ3dVazBnTUpHcS9LY2Y1ODFPRHZUOHB0WU12UkNwQ0IvdzlzQkxHTFhySWpRUW1iemtUSTU5WVhnMUoKT3hpOWF3VERNUXRia0FkRHZ5ZGxHQVFSbkpsZXJUYmNSUURrUERSNUJvei85WVRkN1pUd2lKYUNsYThUU1RXaAo5MEg2d2Y3ZjZVRWVBbnlHaG1zQm1GRjErblozT3hoS0E4YXR3TUxtQlNGdGFySStEdnh2bE5OWHlHbzlRWEtwCnQ0SlRBRVBGUXduSHdTYmhTMjVkY2RkczZsck04QkV0L0JKODdBb21yeGRmRlRhbDdqVUlGT1NJa0w4OUhGemQKNFRZQ0ovZC91cWNUczhCOXdIWEQzZDdBZk1CN2V1cz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRRCt4aytUcWRIRWdtVXZQNXlHOFB2VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl4TVRFeE1ETXpOalE1V2hjTk1qVXhNVEV3TURNegpOalE1V2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd3Q4K1NOUkhnZ0NJUHNGTWtFbWkKM3BnbTdHVmJUZlhDWXM2Qm51dkwvWDJPMDVGOG1VbjNMdTFjbDYvSTlZT2hrNWJCa0U5VnorNVNESnJkRVBiNApnOXZJMEZuZE8wS0lPL3k3STNOb2tLbUExU0EwSW0vSUZLcGdvZjR1OWR2NlQvUy9mKytjbitZV2E2L2hKdlovCmVlY2xhOURGRnpBelo3UWtKV3ZPTXBOMFh5eVhCL0l0Z0NEYU02SXVQMmZBUDJKMWZXZTVzMDNPU0prUEN0ZHoKcnBPVnNNYTM4dVBibUdZWjFzL3JQY1FUYTBIWjB0U0l3TUN6UVV3bGY2OVJXbmhvV1hlSmFZdDhEZTRIWnB6egp6T2NoL1c1QzV5UGdqS2NqNmdreGpOTGU5Q2lUdkRhUStJOWNFL2RhbkhMN1dtY0h1ZkJhV085ZGN6NVpoQzJLCkhRSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JSaXBhR3JNSW1DNlQ5eQpZWEVwdHBidGh2ZXJnakFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCcWUrMk5yUld2SEx1R25nYTY1R3FaaWRzNEEyR1oKamxJbFozcTg3SUlEaFQ1VUJlcDh4NU1oQWE3VmRJNWVyMXJtMXFudk9nS3pZKzMwV05LdlFGaDY3OUt5dm5qYgpENGJmQS81dUxncS9PRU5aVUE3ckRxVlFJV01kenVaR21hcDlhdENaSS9ZMzc5RXVkR29tTS9HZDlNSmZoRDIwCndLRDE3dGpqczhVYVJEaVViZm5xMjFZMmp6SVJha2s3Wjk3Si8vWDFQWmlFdHNLZUkzMWR0OTVoOG9JTmdycjIKVis0RDZnWGhnYnNWWTNFaC90UWJtQnhBeEtscjdzTTgzb2daQnhkS2ZyTGFENzdGamdkOUx6eXltbkdxOW5HWQpsM0tBL3JjZDU4OHJYbnU1dlNzM0FnNmxCd3dMQWptb01EejRMaXhrNUFFTFVZV3hnYkxBMEVmagotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBd3Q4K1NOUkhnZ0NJUHNGTWtFbWkzcGdtN0dWYlRmWENZczZCbnV2TC9YMk8wNUY4Cm1VbjNMdTFjbDYvSTlZT2hrNWJCa0U5VnorNVNESnJkRVBiNGc5dkkwRm5kTzBLSU8veTdJM05va0ttQTFTQTAKSW0vSUZLcGdvZjR1OWR2NlQvUy9mKytjbitZV2E2L2hKdlovZWVjbGE5REZGekF6WjdRa0pXdk9NcE4wWHl5WApCL0l0Z0NEYU02SXVQMmZBUDJKMWZXZTVzMDNPU0prUEN0ZHpycE9Wc01hMzh1UGJtR1laMXMvclBjUVRhMEhaCjB0U0l3TUN6UVV3bGY2OVJXbmhvV1hlSmFZdDhEZTRIWnB6enpPY2gvVzVDNXlQZ2pLY2o2Z2t4ak5MZTlDaVQKdkRhUStJOWNFL2RhbkhMN1dtY0h1ZkJhV085ZGN6NVpoQzJLSFFJREFRQUJBb0lCQUVUaFhnV21LeVJ6aGJVUQo1RHc0R3Y2dEwwenR3cWs2emh2WXZJNXM4R3pJZmJ5Z3R6Y0Rvd0NPVytVdCtFMTMycHZ0ZEx2S254MWhNdFZMCnhBb2tFZEdoMVVoNEN5L1FJNUY0a3JsRUtOakJZVTEwRlpsNmczRnlpN2VXdmdpZldjbjdTOWt2MjkvVkYyVzMKQkZHZVhZNjhPa2p5d1VlaC9QbVIvaGpRRTFGaW1ad2IwR3BDSzc4alllZy9kRDVzc0p2MFVzcTFwQjlXOTcxUwp3MllGaHFFblQxQi9kb3huQlRLVXE2QTVTS3BSaElWSUFUOGY0NmFnVUVlb2thQis4Z2dCRXlTUDErVko3dzFDClZsM25NNkZzSUx3WWpVM2txbC9EUGUvRUl4SEdhN2FSa2crbjNpcDlZWjRnejN0TzlQT2t5Q2puQmkvUkFTS2QKdGpZZ0RpRUNnWUVBNHNPaWZBTS8rbkFoWC9XenBMTmphditMU0hYQUtycFBRbGRheXNhRHBkYjBUWE9EV1pGRApyYi8zWlJjVmt2amRFV3NRbFNtZ0llRmdhTk1QbldwemplMHVJTmdOVU1WQWJoeHQyR0FYNW4zKzhibDVPM0s3CjVSaWRFaWhNY1FYeEg5QmVWWFpVVDdzU1pXbW9tQU05L3ppcFU0ZDZQTTZpbUlxOTJOeDQ5OGtDZ1lFQTIvOEIKbUl3d0ZVYTE5dmdtbXZ5c1VqeUErczFTWGZNdUwvTUhLRnFqOWtLSUgvWEE2NXNFNUlhQy9tSkttTVNoTFdhZQpxemJZaVR4bnQ5a3c4bUllL2N5M09GQnZ0V2hvcXZTKzFqb09XSHQ2blZaL2NMN0ZEVmNpUGRiNkVOQ0NuN3VICndLYnA2azdQYitiZjBtbE9jYUhRMkw4c2VESFNmUm9jdnVXaUViVUNnWUJUMnZwOEY0dVNKZU1CcEU5eEtYRXIKUVNLVmdnMjAvejZPRHRXaFJMV3NId2dxbC92THBGODlvazV2RUpGR3owYVl5Vm5SZnhvYlRVZWttK0FiV3lFdQpLN1l5S1JNTGVsWHdJZzB3eGFBdytRak5CTVJqQ25PWExYbndHL3pna3N6dThkUGdrS2h1NzRQSEFzSjRyRUpCCjNnY252MktobDl3aXdyT2Z2Uy95bVFLQmdGb0wrZEkvNTFwK0UvTWZ4V1dBOE9QRVFpTG1NY1dreVEzMVVzT3cKdmhZSlM0Q1JiY0xDTS9GNklWb1FUMnBTYVlxVXkzTlhRckNCbWc2Rmh1UmZSMElwTGdHTjR2dUUzZnJEck8wdwozRGhaYW1uR1F1bWFIRHdHbzB4ZWx3S1U1aktOWnRaek82R2RXb2o2SGprWXczUDlnT2VHOEtQTitOTWVBaEFkCkhBWlZBb0dBRTZiOTUrdjdwM3ZHRGhieXZGR1AyMzFLbFZINWs5b3ZwQU4xemJKS1A3K0tETXBFNGNOZmMvdUUKTkR0ZXRGTFlwRXVSQXNpblhZWENzelFpZkFmUDdPeVlLRUNOZGdkR0xHajZqSTExYWVRNWpnN3RuR05RTXkyUgpLMllVNWFPTHlGVE51cEd5MjliQUdOSjRwQ0k2a0xxYUtCT2t3MG0yRTVQV09uVDRENjQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  disable-envoy-version-check: "false"

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9090"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "disabled"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.42.0.0/16

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: "0.0.0.0:10256"
  bpf-lb-sock: "false"
  node-port-range: "30000,32767"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    port-distribution
    icmp
    http
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"

  enable-envoy-config: "true"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout:
    retry-timeout:
    sort-buffer-len-max:
    sort-buffer-drain-timeout:
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      # This is used when validating policies in preflight. This will need to stay
      # until we figure out how to avoid "get" inside the preflight, and then
      # should be removed ideally.
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumbgploadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumegressnatpolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    # To synchronize garbage collection of such resources
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
    verbs:
      - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      # to automatically delete [core|kube]dns pods so that are starting to being
      # managed by Cilium
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # To remove node taints
      - nodes
      # To set NetworkUnavailable false on startup
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # to perform LB IP allocation for BGP
      - services/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      # to check apiserver connectivity
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      # to perform the translation of a CNP that contains `ToGroup` to its endpoints
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
      - create
      - update
      - deletecollection
      # To update the status of the CNPs and CCNPs
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      # Update the auto-generated CNPs and CCNPs status.
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      # To perform garbage collection of such resources
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      # To synchronize garbage collection of such resources
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
        # To perform CiliumNode garbage collector
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
    resourceNames:
      - ciliumbgploadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumegressnatpolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
  # For cilium-operator running in HA mode.
  #
  # Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
  # between multiple running instances.
  # The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
  # common and fewer objects in the cluster watch "all Leases".
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
    annotations:
      meta.helm.sh/release-name: cilium
      meta.helm.sh/release-namespace: kube-system
    labels:
      app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: "cilium-operator"
    namespace: kube-system
    annotations:
      meta.helm.sh/release-name: cilium
      meta.helm.sh/release-namespace: kube-system
    labels:
      app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: "hubble-ui"
    namespace: kube-system
    annotations:
      meta.helm.sh/release-name: cilium
      meta.helm.sh/release-namespace: kube-system
    labels:
      app.kubernetes.io/managed-by: Helm
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/scrape: "true"
    prometheus.io/port: "9964"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
    - name: envoy-metrics
      port: 9964
      protocol: TCP
      targetPort: envoy-metrics
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
    - protocol: TCP
      port: 80
      targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/scrape: "true"
    prometheus.io/port: "9965"
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble
spec:
  clusterIP: None
  type: ClusterIP
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "30945bf141381c2523d10e424b7b5f860d8f19faf08795efb9c13000f41228b4"
      labels:
        k8s-app: cilium
    spec:
      containers:
        - name: cilium-agent
          image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
          imagePullPolicy: IfNotPresent
          command:
            - cilium-agent
          args:
            - --config-dir=/tmp/cilium/config-map
          startupProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            failureThreshold: 105
            periodSeconds: 2
            successThreshold: 1
          livenessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9879
              scheme: HTTP
              httpHeaders:
                - name: "brief"
                  value: "true"
            periodSeconds: 30
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 5
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: CILIUM_CNI_CHAINING_MODE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: cni-chaining-mode
                  optional: true
            - name: CILIUM_CUSTOM_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: custom-cni-conf
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "192.168.20.254"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          lifecycle:
            postStart:
              exec:
                command:
                  - "/cni-install.sh"
                  - "--enable-debug=false"
                  - "--cni-exclusive=true"
                  - "--log-file=/var/run/cilium/cilium-cni.log"
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          ports:
            - name: peer-service
              containerPort: 4244
              hostPort: 4244
              protocol: TCP
            - name: prometheus
              containerPort: 9090
              hostPort: 9090
              protocol: TCP
            - name: envoy-metrics
              containerPort: 9964
              hostPort: 9964
              protocol: TCP
            - name: hubble-metrics
              containerPort: 9965
              hostPort: 9965
              protocol: TCP
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
            - name: cilium-run
              mountPath: /var/run/cilium
            - name: cni-path
              mountPath: /host/opt/cni/bin
            - name: etc-cni-netd
              mountPath: /host/etc/cni/net.d
            - name: clustermesh-secrets
              mountPath: /var/lib/cilium/clustermesh
              readOnly: true
            - name: cilium-config-path
              mountPath: /tmp/cilium/config-map
              readOnly: true
              # Needed to be able to load kernel modules
            - name: lib-modules
              mountPath: /lib/modules
              readOnly: true
            - name: xtables-lock
              mountPath: /run/xtables.lock
            - name: hubble-tls
              mountPath: /var/lib/cilium/tls/hubble
              readOnly: true
      initContainers:
        # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
        # We use nsenter command with host's cgroup and mount namespaces enabled.
        - name: mount-cgroup
          image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
          imagePullPolicy: IfNotPresent
          env:
            - name: CGROUP_ROOT
              value: /run/cilium/cgroupv2
            - name: BIN_PATH
              value: /opt/cni/bin
          command:
            - sh
            - -ec
            # The statically linked Go program binary is invoked to avoid any
            # dependency on utilities like sh and mount that can be missing on certain
            # distros installed on the underlying host. Copy the binary to the
            # same directory where we install cilium cni plugin so that exec permissions
            # are available.
            - |
              cp /usr/bin/cilium-mount /hostbin/cilium-mount;
              nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
              rm /hostbin/cilium-mount
          volumeMounts:
            - name: hostproc
              mountPath: /hostproc
            - name: cni-path
              mountPath: /hostbin
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            privileged: true
        - name: apply-sysctl-overwrites
          image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
          imagePullPolicy: IfNotPresent
          env:
            - name: BIN_PATH
              value: /opt/cni/bin
          command:
            - sh
            - -ec
            # The statically linked Go program binary is invoked to avoid any
            # dependency on utilities like sh that can be missing on certain
            # distros installed on the underlying host. Copy the binary to the
            # same directory where we install cilium cni plugin so that exec permissions
            # are available.
            - |
              cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
              nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
              rm /hostbin/cilium-sysctlfix
          volumeMounts:
            - name: hostproc
              mountPath: /hostproc
            - name: cni-path
              mountPath: /hostbin
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            privileged: true
        - name: clean-cilium-state
          image: "quay.io/cilium/cilium:v1.13.0@sha256:6544a3441b086a2e09005d3e21d1a4afb216fae19c5a60b35793c8a9438f8f68"
          imagePullPolicy: IfNotPresent
          command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-state
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  name: cilium-config
                  key: clean-cilium-bpf-state
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "192.168.20.254"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            privileged: true
          volumeMounts:
            - name: bpf-maps
              mountPath: /sys/fs/bpf
              # Required to mount cgroup filesystem from the host to cilium agent pod
            - name: cilium-cgroup
              mountPath: /run/cilium/cgroupv2
              mountPropagation: HostToContainer
            - name: cilium-run
              mountPath: /var/run/cilium
          resources:
            requests:
              cpu: 100m
              memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
        - name: cilium-run
          hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          # To keep state between restarts / upgrades for bpf maps
        - name: bpf-maps
          hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
        # To mount cgroup2 filesystem on the host
        - name: hostproc
          hostPath:
            path: /proc
            type: Directory
        # To keep state between restarts / upgrades for cgroup2 filesystem
        - name: cilium-cgroup
          hostPath:
            path: /run/cilium/cgroupv2
            type: DirectoryOrCreate
        # To install cilium cni plugin in the host
        - name: cni-path
          hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          # To install cilium cni configuration in the host
        - name: etc-cni-netd
          hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          # To be able to load kernel modules
        - name: lib-modules
          hostPath:
            path: /lib/modules
          # To access iptables concurrently with other processes (e.g. kube-proxy)
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          # To read the clustermesh configuration
        - name: clustermesh-secrets
          secret:
            secretName: cilium-clustermesh
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            optional: true
          # To read the configuration from the config map
        - name: cilium-config-path
          configMap:
            name: cilium-config
        - name: hubble-tls
          projected:
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            sources:
              - secret:
                  name: hubble-server-certs
                  optional: true
                  items:
                    - key: ca.crt
                      path: client-ca.crt
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "30945bf141381c2523d10e424b7b5f860d8f19faf08795efb9c13000f41228b4"
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
        - name: cilium-operator
          image: quay.io/cilium/operator-generic:v1.13.0@sha256:4b58d5b33e53378355f6e8ceb525ccf938b7b6f5384b35373f1f46787467ebf5
          imagePullPolicy: IfNotPresent
          command:
            - cilium-operator-generic
          args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: "192.168.20.254"
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          ports:
            - name: prometheus
              containerPort: 9963
              hostPort: 9963
              protocol: TCP
          livenessProbe:
            httpGet:
              host: "127.0.0.1"
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          volumeMounts:
            - name: cilium-config-path
              mountPath: /tmp/cilium/config-map
              readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
        - name: cilium-config-path
          configMap:
            name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177"
      labels:
        k8s-app: hubble-relay
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.13.0@sha256:bc00f086285d2d287dd662a319d3dbe90e57179515ce8649425916aecaa9ac3c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
            - name: config
              mountPath: /etc/hubble-relay
              readOnly: true
            - name: tls
              mountPath: /var/lib/hubble-relay/tls
              readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: ""
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - name: config
          configMap:
            name: hubble-relay-config
            items:
              - key: config.yaml
                path: config.yaml
        - name: tls
          projected:
            # note: the leading zero means this number is in octal representation: do not remove it
            defaultMode: 0400
            sources:
              - secret:
                  name: hubble-relay-client-certs
                  items:
                    - key: ca.crt
                      path: hubble-server-ca.crt
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: ""
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
        - name: frontend
          image: "quay.io/cilium/hubble-ui:v0.10.0@sha256:118ad2fcfd07fabcae4dde35ec88d33564c9ca7abe520aa45b1eb13ba36c6e0a"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8081
          volumeMounts:
            - name: hubble-ui-nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
            - name: tmp-dir
              mountPath: /tmp
          terminationMessagePolicy: FallbackToLogsOnError
        - name: backend
          image: "quay.io/cilium/hubble-ui-backend:v0.10.0@sha256:cc5e2730b3be6f117b22176e25875f2308834ced7c3aa34fb598aa87a2c0a6a4"
          imagePullPolicy: IfNotPresent
          env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: "hubble-relay:80"
          ports:
            - name: grpc
              containerPort: 8090
          volumeMounts: []
          terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
