---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTk1HVFRZa1JWa2JkYlJUN2czV3FWakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl3T1RJM01UazBPVEkzV2hjTk1qVXdPVEkyTVRrMApPVEkzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3ZHQmlraWovWUtpeUhaV3pJdGV6am9ra2FiUXFTZW9YbFVhbi9GTHZSbEJJTXlxMHQKYkQ2SGIxSjI1bWFET0lEZzc3VThZNWNUTkJ6RGx3dnU0b3I5anZLbDBXandsSzg3anM1R2RoU2E4MG5zZnBNYwowbnlWRVE4SjZTT3V3Qk05ayt6cTBkQ3M0OEpWSStNY1ZCeXl0aThpY0xSWloxazJoUzM4MkhrK0pCaDZlQ2dPCllCMzNGUlJPSktEa0tCWm00aEZOTmQ1RWlaSE9seXhlb1VMQzE5MXg1SUc4eEFKTjRjNjdkWlhIclpsMVEwSEYKVlRCdWN0RVZ2QWk2dnNtL090dk1xWnAxK1RyQW1XRzF6RWRCNW1TSjZBNGdINGl2ZjRyQ1U3ZWxISWNWZ3QrRApBT01CeElRTkZ4UXMwYmNDcWN5c3NKank4V0FkNlVzV2VOMHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDZnNFZXdIanBBWitHaTVWdWJmb29ONEtLQjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIaXY5all6eFZpVGlMbTJUYmRCRmpVRy85NVVPSkFYNUJCb21maDkyekJjcmxYSzQ3MzMvMTZTCjlSRHZJUDF5U3p5ZVpURWl6K0gyYU4vTmcxQ1Y0VmRKajcySkhGSENiUy9OTndzTUtRQXhRc2hSYWlHMW5LNVUKSTVtcW0zWkdvb0QyRHVwSi9ENlVlV0hJc0t2NGhiM1FPcDhjbnlkMU8rMkVqcklQV1cvZm9lVVA2UzVNZWFaVQpKQWZkYm1lYkV5SllpU2U0d2hmVGJGa0xMS2dnNHZCc2YvSHNjYWRzZlN5L21iSURQWllKVTdlMFFaMUpMMWphCnFMem5iMGpMQmphRGZpSUIvbFhGV3pMVVlXbk1RcXFSUGlJMFZ0T2MxcVFna0JTYURsU3RYeVBCeE5qVVRBUGUKVmZXNDBhS2hTZERuSDNQVHB2YjMvWnljWGZrbXptVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcnhnWXBJby8yQ29zaDJWc3lMWHM0NkpKR20wS2tucUY1VkdwL3hTNzBaUVNETXF0CkxXdytoMjlTZHVabWd6aUE0TysxUEdPWEV6UWN3NWNMN3VLSy9ZN3lwZEZvOEpTdk80N09SbllVbXZOSjdINlQKSE5KOGxSRVBDZWtqcnNBVFBaUHM2dEhRck9QQ1ZTUGpIRlFjc3JZdkluQzBXV2RaTm9VdC9OaDVQaVFZZW5nbwpEbUFkOXhVVVRpU2c1Q2dXWnVJUlRUWGVSSW1SenBjc1hxRkN3dGZkY2VTQnZNUUNUZUhPdTNXVng2MlpkVU5CCnhWVXdibkxSRmJ3SXVyN0p2enJiekttYWRmazZ3SmxodGN4SFFlWmtpZWdPSUIrSXIzK0t3bE8zcFJ5SEZZTGYKZ3dEakFjU0VEUmNVTE5HM0Fxbk1yTENZOHZGZ0hlbExGbmpkTXdJREFRQUJBb0lCQUMwaFROaThPWkNCN2xCSAp1QzVUbGVkbVlPbEt5YnJQa2N0MXJSZHVSS3JVTzRMSWlySjJmL2R3bmhTL2RoVEViNU9LdFhBSFMxMUx4VTQwCmxJTFNLWGtKYTBtS0hENUdWSlJKVHFtaXJkVHllRTlZb0pxQk5sTkZ2bGFUblByaHp4UEVHUUM5YThma1BLYXQKUlZCNzdabXlrNXVRNlN0U0ZCQ1ZhekVNcXROMUZMK2cxcUt1ckhObTRSU1ZDNStuTjU3cTR4RmhKNVh5MlJlRApvSGpETDBNaDlqT2RKdDFveTgrWlk3YU4vY0x0eDREZzVlVVdWVnoyampvVXJSbWZPWU5XNGZveVRIWTFmbFpsCnk0dSs5by8zcjJVYk1Yd2x2VGFFdk1lV3c5c1cvQmVvVVNqdml0cE9hYjVDTnI1YXJJRTh2M25VVkFibUR2WEkKQlpuV0hrRUNnWUVBNXFRS21DWDdTT0ZrUzFyQU5Xb0VLUGVpSUw5Zmw3RkNubDIwOXBZc1RScUUzcFUxb01QSwo2K2xPelF3Qy9BRnFRUjZXaGVUaVY1bVpEVmJLck5VeXo1eitYYXFob2cxaEhRZnhnbUFwSkk2RHFwOFJ3c3dPCnFMMHd5M1BjaS9DeEJTWm1uQUZ2MXRTV0dIYXMxb2RNTWZOUit6OXhLaG9YUmtzTlFDdmlobXNDZ1lFQXdsaU8KVXM5RzlhckVMUnFVMmpoUyt0d2xpaW1Cd1paMEFhYWtucllJa2ViZHJNSVVuM2EwY2xrWlNvMUs0N2VwRndLVwprTDdjaUNnRjZKZnJmYituYzRSKytTMFBVMlJodXpiOGx4eTh2alZTWGs3U1VJMCtJenMwVTlKU1llNlNqenNBClBxTXpSVi9IdW9GUjJ6Qyt3MElBc2h1STBQRlBuWjFvWTJUYzVsa0NnWUFuSXpVTkJuenlyQlNwMk5kKytPT0YKMUNlMTZPT2V5UnlsNVA3ZFRUUnRUUSs0K1pibEZmUnNQZVg2VTR4NkdQOWYxNEh4YkpxZ0JOZDg5UHBsZzdRZwptT0p0SUpSVy9IQTdUZXJFbGU3RlhrMm5lV0M1TG9sYVJ1aHR6ZFppQk5EMUw4UC91eHF3V05pemhBZm1TNFU1CmdMR3JzZU5SSXFaS2JsZnNTTVlpeXdLQmdIR3NsSXF4UEtNaklCMzFwMDFBbHFDdXRiSnJkcjhCdnBiY252dEsKSkJjYS8xdzJKUlBrdmNVSWduZU56MWtFcXYyUGdQdm05MTBZYytSSlArL01jeWhwUGsrRzRLajVWUVRKTTlNNwpkdGFXbjdnVHlJWmZKeEk2WmZBRlhEUjE4L21kSEJhSEpNMFdLZC9ZRmtYcjdCaVBlWkt6OGtHc2M5SVFLT2ZDCkxrYjVBb0dCQU5maWlrUGszNXUxVTlQSmpmV04wOTFXb2pKOXJqY21CeG9DTXBUdndlMC8rUHRocTJPVlVEVEYKdHFHcTdJSVIxRTNlMnJGTEdEYkdsTGVHMkh0QkFYZy9wTmlnNzAyT1AxcXdsUldsNFZFdWxONnRFMkNUbVlpZwoyUExpVDJINFMvZHFnZ1RXbXNhcGhxSmVIRzkySlpqa2ZwMTlKa1h4Nk8zODNuTlJzNE1QCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTk1HVFRZa1JWa2JkYlJUN2czV3FWakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl3T1RJM01UazBPVEkzV2hjTk1qVXdPVEkyTVRrMApPVEkzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3ZHQmlraWovWUtpeUhaV3pJdGV6am9ra2FiUXFTZW9YbFVhbi9GTHZSbEJJTXlxMHQKYkQ2SGIxSjI1bWFET0lEZzc3VThZNWNUTkJ6RGx3dnU0b3I5anZLbDBXandsSzg3anM1R2RoU2E4MG5zZnBNYwowbnlWRVE4SjZTT3V3Qk05ayt6cTBkQ3M0OEpWSStNY1ZCeXl0aThpY0xSWloxazJoUzM4MkhrK0pCaDZlQ2dPCllCMzNGUlJPSktEa0tCWm00aEZOTmQ1RWlaSE9seXhlb1VMQzE5MXg1SUc4eEFKTjRjNjdkWlhIclpsMVEwSEYKVlRCdWN0RVZ2QWk2dnNtL090dk1xWnAxK1RyQW1XRzF6RWRCNW1TSjZBNGdINGl2ZjRyQ1U3ZWxISWNWZ3QrRApBT01CeElRTkZ4UXMwYmNDcWN5c3NKank4V0FkNlVzV2VOMHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDZnNFZXdIanBBWitHaTVWdWJmb29ONEtLQjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIaXY5all6eFZpVGlMbTJUYmRCRmpVRy85NVVPSkFYNUJCb21maDkyekJjcmxYSzQ3MzMvMTZTCjlSRHZJUDF5U3p5ZVpURWl6K0gyYU4vTmcxQ1Y0VmRKajcySkhGSENiUy9OTndzTUtRQXhRc2hSYWlHMW5LNVUKSTVtcW0zWkdvb0QyRHVwSi9ENlVlV0hJc0t2NGhiM1FPcDhjbnlkMU8rMkVqcklQV1cvZm9lVVA2UzVNZWFaVQpKQWZkYm1lYkV5SllpU2U0d2hmVGJGa0xMS2dnNHZCc2YvSHNjYWRzZlN5L21iSURQWllKVTdlMFFaMUpMMWphCnFMem5iMGpMQmphRGZpSUIvbFhGV3pMVVlXbk1RcXFSUGlJMFZ0T2MxcVFna0JTYURsU3RYeVBCeE5qVVRBUGUKVmZXNDBhS2hTZERuSDNQVHB2YjMvWnljWGZrbXptVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcnhnWXBJby8yQ29zaDJWc3lMWHM0NkpKR20wS2tucUY1VkdwL3hTNzBaUVNETXF0CkxXdytoMjlTZHVabWd6aUE0TysxUEdPWEV6UWN3NWNMN3VLSy9ZN3lwZEZvOEpTdk80N09SbllVbXZOSjdINlQKSE5KOGxSRVBDZWtqcnNBVFBaUHM2dEhRck9QQ1ZTUGpIRlFjc3JZdkluQzBXV2RaTm9VdC9OaDVQaVFZZW5nbwpEbUFkOXhVVVRpU2c1Q2dXWnVJUlRUWGVSSW1SenBjc1hxRkN3dGZkY2VTQnZNUUNUZUhPdTNXVng2MlpkVU5CCnhWVXdibkxSRmJ3SXVyN0p2enJiekttYWRmazZ3SmxodGN4SFFlWmtpZWdPSUIrSXIzK0t3bE8zcFJ5SEZZTGYKZ3dEakFjU0VEUmNVTE5HM0Fxbk1yTENZOHZGZ0hlbExGbmpkTXdJREFRQUJBb0lCQUMwaFROaThPWkNCN2xCSAp1QzVUbGVkbVlPbEt5YnJQa2N0MXJSZHVSS3JVTzRMSWlySjJmL2R3bmhTL2RoVEViNU9LdFhBSFMxMUx4VTQwCmxJTFNLWGtKYTBtS0hENUdWSlJKVHFtaXJkVHllRTlZb0pxQk5sTkZ2bGFUblByaHp4UEVHUUM5YThma1BLYXQKUlZCNzdabXlrNXVRNlN0U0ZCQ1ZhekVNcXROMUZMK2cxcUt1ckhObTRSU1ZDNStuTjU3cTR4RmhKNVh5MlJlRApvSGpETDBNaDlqT2RKdDFveTgrWlk3YU4vY0x0eDREZzVlVVdWVnoyampvVXJSbWZPWU5XNGZveVRIWTFmbFpsCnk0dSs5by8zcjJVYk1Yd2x2VGFFdk1lV3c5c1cvQmVvVVNqdml0cE9hYjVDTnI1YXJJRTh2M25VVkFibUR2WEkKQlpuV0hrRUNnWUVBNXFRS21DWDdTT0ZrUzFyQU5Xb0VLUGVpSUw5Zmw3RkNubDIwOXBZc1RScUUzcFUxb01QSwo2K2xPelF3Qy9BRnFRUjZXaGVUaVY1bVpEVmJLck5VeXo1eitYYXFob2cxaEhRZnhnbUFwSkk2RHFwOFJ3c3dPCnFMMHd5M1BjaS9DeEJTWm1uQUZ2MXRTV0dIYXMxb2RNTWZOUit6OXhLaG9YUmtzTlFDdmlobXNDZ1lFQXdsaU8KVXM5RzlhckVMUnFVMmpoUyt0d2xpaW1Cd1paMEFhYWtucllJa2ViZHJNSVVuM2EwY2xrWlNvMUs0N2VwRndLVwprTDdjaUNnRjZKZnJmYituYzRSKytTMFBVMlJodXpiOGx4eTh2alZTWGs3U1VJMCtJenMwVTlKU1llNlNqenNBClBxTXpSVi9IdW9GUjJ6Qyt3MElBc2h1STBQRlBuWjFvWTJUYzVsa0NnWUFuSXpVTkJuenlyQlNwMk5kKytPT0YKMUNlMTZPT2V5UnlsNVA3ZFRUUnRUUSs0K1pibEZmUnNQZVg2VTR4NkdQOWYxNEh4YkpxZ0JOZDg5UHBsZzdRZwptT0p0SUpSVy9IQTdUZXJFbGU3RlhrMm5lV0M1TG9sYVJ1aHR6ZFppQk5EMUw4UC91eHF3V05pemhBZm1TNFU1CmdMR3JzZU5SSXFaS2JsZnNTTVlpeXdLQmdIR3NsSXF4UEtNaklCMzFwMDFBbHFDdXRiSnJkcjhCdnBiY252dEsKSkJjYS8xdzJKUlBrdmNVSWduZU56MWtFcXYyUGdQdm05MTBZYytSSlArL01jeWhwUGsrRzRLajVWUVRKTTlNNwpkdGFXbjdnVHlJWmZKeEk2WmZBRlhEUjE4L21kSEJhSEpNMFdLZC9ZRmtYcjdCaVBlWkt6OGtHc2M5SVFLT2ZDCkxrYjVBb0dCQU5maWlrUGszNXUxVTlQSmpmV04wOTFXb2pKOXJqY21CeG9DTXBUdndlMC8rUHRocTJPVlVEVEYKdHFHcTdJSVIxRTNlMnJGTEdEYkdsTGVHMkh0QkFYZy9wTmlnNzAyT1AxcXdsUldsNFZFdWxONnRFMkNUbVlpZwoyUExpVDJINFMvZHFnZ1RXbXNhcGhxSmVIRzkySlpqa2ZwMTlKa1h4Nk8zODNuTlJzNE1QCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTk1HVFRZa1JWa2JkYlJUN2czV3FWakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl3T1RJM01UazBPVEkzV2hjTk1qVXdPVEkyTVRrMApPVEkzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3ZHQmlraWovWUtpeUhaV3pJdGV6am9ra2FiUXFTZW9YbFVhbi9GTHZSbEJJTXlxMHQKYkQ2SGIxSjI1bWFET0lEZzc3VThZNWNUTkJ6RGx3dnU0b3I5anZLbDBXandsSzg3anM1R2RoU2E4MG5zZnBNYwowbnlWRVE4SjZTT3V3Qk05ayt6cTBkQ3M0OEpWSStNY1ZCeXl0aThpY0xSWloxazJoUzM4MkhrK0pCaDZlQ2dPCllCMzNGUlJPSktEa0tCWm00aEZOTmQ1RWlaSE9seXhlb1VMQzE5MXg1SUc4eEFKTjRjNjdkWlhIclpsMVEwSEYKVlRCdWN0RVZ2QWk2dnNtL090dk1xWnAxK1RyQW1XRzF6RWRCNW1TSjZBNGdINGl2ZjRyQ1U3ZWxISWNWZ3QrRApBT01CeElRTkZ4UXMwYmNDcWN5c3NKank4V0FkNlVzV2VOMHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDZnNFZXdIanBBWitHaTVWdWJmb29ONEtLQjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIaXY5all6eFZpVGlMbTJUYmRCRmpVRy85NVVPSkFYNUJCb21maDkyekJjcmxYSzQ3MzMvMTZTCjlSRHZJUDF5U3p5ZVpURWl6K0gyYU4vTmcxQ1Y0VmRKajcySkhGSENiUy9OTndzTUtRQXhRc2hSYWlHMW5LNVUKSTVtcW0zWkdvb0QyRHVwSi9ENlVlV0hJc0t2NGhiM1FPcDhjbnlkMU8rMkVqcklQV1cvZm9lVVA2UzVNZWFaVQpKQWZkYm1lYkV5SllpU2U0d2hmVGJGa0xMS2dnNHZCc2YvSHNjYWRzZlN5L21iSURQWllKVTdlMFFaMUpMMWphCnFMem5iMGpMQmphRGZpSUIvbFhGV3pMVVlXbk1RcXFSUGlJMFZ0T2MxcVFna0JTYURsU3RYeVBCeE5qVVRBUGUKVmZXNDBhS2hTZERuSDNQVHB2YjMvWnljWGZrbXptVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQU92em14WFBxalYwZm83SnBIWEE5bkl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU56RTVORGt5T1ZvWERUSTFNRGt5TmpFNQpORGt5T1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXo4OTljOVBwbVdhSDFTNlFUaWsrZ3c3MWhjQnEKeitxMWs2RjVpL2EydDFkL2UyZXVSNU92bkVUL0NYRGxTa1p3Um9SNm1RZGFZc1dmemxqRUMzN0pZNDBFcHhoeQpTdWlldkFrOXdEQXQ0aGkrZ0t0d29haURTTElUVjZqZFpKakllcm9YQU9WLy80UlJSQUhDTFQzM3cyeTFZcU1JCk1ENytQMlpmZnRNejFtcCswNHhCamtENXJzM1JlcjdNRENrbU9JenVuYm1VaU5GUmJyZE12ZHpOYVhveXlFdTMKV0Q2bkJGQWJjRnl6RHpKaU83QWQ4NFpoanJWaVJuTDZ1RDJpQ0pqdUQ5TFpWM1l3TllqdUlvSWhwdUVFcTg3VQpFRFB6WTZsQ3IrUndKbVUvRHA3VHFZUThuUWZzUURqbFJUckNDd0pFQ1EwQWczZTZUcW85NXB5QVh3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUUord1I3QWVPa0JuNGFMbFc1dCtpZwozZ29vSGpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQzU1cFF0Zzc1c2wyVE5IelR1OVplVmpyZ1A2Rnp2N29meVh2cXk3em5sMS8wTlAKNERqWHVoSVkyMUZiRkk1UUxCUUZ4VElZcnhidTV6dWRjb2pIVGpuSHVqTTVtbXZvci83c3l0OTVyM01qeGxaawpWbitiZVducmdna0FHZzJtNVZqakZERWdvTDdWdG9ZdUJ6bTB4MC9URE5FVVgzbjBrT2xFVDBCMWlNWURYSXZJCnlCY3hIU2kvSDdtZ1NTc0xnVkVLWjZYUUs3ZC8vSUtzWmtjYUdnQWlNdjdDOGlVR2c4Z001L1hoaEZoaDVkdXcKVnd1OUtERW40RDc0TVRwQ09vOHB2dXpEMjRGVjJIczgrelhLZkw2UGxqTDBZclNmQ01LUy9qeWg0WnRoRlNLTwpBTXFSL3UxYVJVQ29tMFlrWnZ0bEx2RHFUVFNKRmtqRm9qSDhCd1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBejg5OWM5UHBtV2FIMVM2UVRpaytndzcxaGNCcXorcTFrNkY1aS9hMnQxZC9lMmV1ClI1T3ZuRVQvQ1hEbFNrWndSb1I2bVFkYVlzV2Z6bGpFQzM3Slk0MEVweGh5U3VpZXZBazl3REF0NGhpK2dLdHcKb2FpRFNMSVRWNmpkWkpqSWVyb1hBT1YvLzRSUlJBSENMVDMzdzJ5MVlxTUlNRDcrUDJaZmZ0TXoxbXArMDR4Qgpqa0Q1cnMzUmVyN01EQ2ttT0l6dW5ibVVpTkZSYnJkTXZkek5hWG95eUV1M1dENm5CRkFiY0Z5ekR6SmlPN0FkCjg0WmhqclZpUm5MNnVEMmlDSmp1RDlMWlYzWXdOWWp1SW9JaHB1RUVxODdVRURQelk2bENyK1J3Sm1VL0RwN1QKcVlROG5RZnNRRGpsUlRyQ0N3SkVDUTBBZzNlNlRxbzk1cHlBWHdJREFRQUJBb0lCQUh6Yy9WSWxXRXoxMEZRRgpZR3UyV0h0Qzk3OWYrRTNwaHlTbmQzTGowTEdrLzFKVTMrRGVHanhaTUt5cGl2dndDdkkwRTczekx4bitDS0ZoCnNKbi9tbDRZazEwYlVVRTFPSHRmU2gwNlZiZHVpcmloU2xHNEFQb2pGWUFzVktwbktyNmpKY05DSW9DVExva2cKVFY0RngrTkNaRkphQjBlRjhocUNGb3NMdUMveVFwdGdVL3lrdWVrOWluTDQ0UU4vVGdzUXpRWmNaSXlWanRBOQpBOHhDdE05NVI3bmNaU1QyejBibEd0WnRtSGo1WnVaaEhVdDJodlBWZWpabkcwTXRoYWs4dFNhSnFWYmtkOStPCkxISWVSTWVxL1V3eG9YYXRmb3JPRjd4TUluWWRKOXJCVkJvOUVJYVBBU2NuQzhVZW1ZbVZXWEJ3SllWQkNCazIKMjFWQmg3RUNnWUVBMEdYbXZhbzlmZWdhWXN1ODFzUU03NGJyQ3ZnZVFnOWhNOXYrWk1qTmkwSUtVK1F0ZkJNRApHZGdvem5TOUtXR1g5dlZQWGIva0NWZnNVRWJXZTVDZUxDbGJjSlR3cldnU00rVTNIc1NUVWJ4dVBMUnVJcGR2CmZhYUVpbGZVUUdOWTJoSTJyQmYwRTZ6L0t6aEtrTEJsdTNkU0hUWFNZSXlvbzc5NmJkbWRNT3NDZ1lFQS8wYzcKWlVCUHZOb3gyc2ZMVDE4UjZ6MWpLb2I2Tk1pMktZWUIzSEVwaEErYWVKVWR0SFI0U0hpSjh6U3pNUFhsYXB6OApRaytRWXNoTmxwaDAxNXRXVktqV0wyN01scnRBeUtGQ0F5cHRNMWdMbHVvVlhGN1Z1QWozMGU0RXJMbHFrY3JGCkUxcGYwQlZKMjVzK2t1bXJRaWJYVHI1Q1dUSjFtU29uVVpjK2NWMENnWUFidHpHMHo4dFZ6MlNTOXgycVFuQ2wKK24rUCtlZXNTWGRYK2s0ZkFVVzAyNWVjQ0tDeis2TlI4Sm1jdTVIY3l3bjI0akVuK3JsTk5OQk03TjdobUI0eApLVjdyM2lNVUxOOGUzOEV3Nmx2ZFp2NFNQTHpaQk9MakJ4NWhkOFRXdTErNXdPcGNnT01KS3R6VTFxdTBDb0c5CktPVlcxUzJoZ1pOOEU1OG90T1JlK1FLQmdRQ1lHMCtPMHpVdjZDdFFtei9QZVd4cDZOZ1AzUUYxTmlza3JzNnAKRlZ5UmJlS3krdGNLVVdQaWVzQm9BL3pKclpzWFhaY0p3L0xhaVZPQjZqR2t6dEF2L2JJeDdTbEdueWpJNHgwOApXYWxic0ppblFhK2NySDFYL1MvOURJQUlreXFtMkZWNVpKNDJsSmkvbTg4N0pyUis1RG5pbDRkZE1xM1RwOFJwCjMxNjdtUUtCZ0JNcWpqN0Fyd1hhZ2tSL3EwemtVWHhTaTlZbkFPNjNYMDFtZklSVjB2YnJ0cVFzK1FpRkYrOW4KWkV6UlE0RHZHTXVCa1FmU1I4VE1VMkpQTmY0eWI5YjlKb2hsNlRKd1doKzVnMWxmR005V2hOM2hxclE4eVQ3QwphMytJeVBxSHVMc0doOEdRYjdCdFJSanNOWldPSURLbVllcjQ5c2VyUVVyam5VOFZtWFVHCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRTk1HVFRZa1JWa2JkYlJUN2czV3FWakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nakl3T1RJM01UazBPVEkzV2hjTk1qVXdPVEkyTVRrMApPVEkzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3ZHQmlraWovWUtpeUhaV3pJdGV6am9ra2FiUXFTZW9YbFVhbi9GTHZSbEJJTXlxMHQKYkQ2SGIxSjI1bWFET0lEZzc3VThZNWNUTkJ6RGx3dnU0b3I5anZLbDBXandsSzg3anM1R2RoU2E4MG5zZnBNYwowbnlWRVE4SjZTT3V3Qk05ayt6cTBkQ3M0OEpWSStNY1ZCeXl0aThpY0xSWloxazJoUzM4MkhrK0pCaDZlQ2dPCllCMzNGUlJPSktEa0tCWm00aEZOTmQ1RWlaSE9seXhlb1VMQzE5MXg1SUc4eEFKTjRjNjdkWlhIclpsMVEwSEYKVlRCdWN0RVZ2QWk2dnNtL090dk1xWnAxK1RyQW1XRzF6RWRCNW1TSjZBNGdINGl2ZjRyQ1U3ZWxISWNWZ3QrRApBT01CeElRTkZ4UXMwYmNDcWN5c3NKank4V0FkNlVzV2VOMHpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDZnNFZXdIanBBWitHaTVWdWJmb29ONEtLQjR3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFIaXY5all6eFZpVGlMbTJUYmRCRmpVRy85NVVPSkFYNUJCb21maDkyekJjcmxYSzQ3MzMvMTZTCjlSRHZJUDF5U3p5ZVpURWl6K0gyYU4vTmcxQ1Y0VmRKajcySkhGSENiUy9OTndzTUtRQXhRc2hSYWlHMW5LNVUKSTVtcW0zWkdvb0QyRHVwSi9ENlVlV0hJc0t2NGhiM1FPcDhjbnlkMU8rMkVqcklQV1cvZm9lVVA2UzVNZWFaVQpKQWZkYm1lYkV5SllpU2U0d2hmVGJGa0xMS2dnNHZCc2YvSHNjYWRzZlN5L21iSURQWllKVTdlMFFaMUpMMWphCnFMem5iMGpMQmphRGZpSUIvbFhGV3pMVVlXbk1RcXFSUGlJMFZ0T2MxcVFna0JTYURsU3RYeVBCeE5qVVRBUGUKVmZXNDBhS2hTZERuSDNQVHB2YjMvWnljWGZrbXptVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWekNDQWorZ0F3SUJBZ0lSQU1wbVNDcExJTVcwazlrd2FEbGFsaVl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl5TURreU56RTVORGt5T0ZvWERUSTFNRGt5TmpFNQpORGt5T0Zvd0tqRW9NQ1lHQTFVRUF3d2ZLaTVrWldaaGRXeDBMbWgxWW1Kc1pTMW5jbkJqTG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUpwalNVdEwyMjFKUThFdkgreEIKWnRsNFBhRVlNbTBXc1A5UHJycFl3OE9hNDB5SHRGdVBQRXBPOGU0ejBycDNwR2VWUUxQcjZMcWQ3MTA3VFlsMgprWjFLQ3VHSEIybVUxVkNpSjhZeXVvWXR5dTM1aEtQS1Y1d1BtODgwTjJKY0t3QitNTEJ4UHpJYnpDSkR0UTVGClFlVVdTR0xPMXhuTmtCODJRcklVTWRxNG9HN05UdDRXei85Z0xxMFU2NS9XSXFaVkM1MGUwZEtHbjd3Z0o4S1UKMmN1MGNiMU9tcVpHZkhBWk1nMllkeE5ucEQ2eUR3M29iMEZUajJxd1ZtKzA0QVZtSm5VczhyOW1KWWNJQk96ZAprclNyYTJzVHhwZnJUQnJiVzJsMFlXSnp6OGdwaFFWV2VlR2RiQnVMSlZHMjBnT1JFQVN3elF1T3JFWGk3QW9uCmMwTUNBd0VBQWFPQmpUQ0JpakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUNmc0Vld0hqcEFaKwpHaTVWdWJmb29ONEtLQjR3S2dZRFZSMFJCQ013SVlJZktpNWtaV1poZFd4MExtaDFZbUpzWlMxbmNuQmpMbU5wCmJHbDFiUzVwYnpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWJYOFNNZ0ZPbXNwbXFHR3M4NnpaWFZPbWdiT1AKTUlscHZJUVBYM3FWQ2pBTmRrbzRRU1NHcHQ2TkVneGRIMW1xVEJYbWZJUWpLclQxTHlyU09BdTVhb1JhU3BoRApYRXk1UWhPUk94QUhVaFlaaCtZZWlodzBIQ0dramhYcE5hQmt5Q01NS296Qm1kd3pYTkc2M2VhOHp1SEtsNTBBCmpZQUZBZTZJM2s4SVlHMzdyZGczSXB5SkNBTDl2MG1hRHV2bjkxdUJEc1lQMGtXZzViRFhGbXlEOGM5RUY4WW8KbFovUTRuaUFPVjVzbjhpVWd6UEs0aU96d2MzdTMxZUZ2TXR2MklmRk9PdjdURENDRVFzM29lNzEwcmJOVEVzawpveDNZTS9aYXFmUUF3aEY3V28wUjFhY2Q1dzlRY3NjSDU4Mlp5c2hGdGtxQlhDaHpZSnkxYzBzZzlBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBbW1OSlMwdmJiVWxEd1M4ZjdFRm0yWGc5b1JneWJSYXcvMCt1dWxqRHc1cmpUSWUwClc0ODhTazd4N2pQU3VuZWtaNVZBcyt2b3VwM3ZYVHROaVhhUm5Vb0s0WWNIYVpUVlVLSW54aks2aGkzSzdmbUUKbzhwWG5BK2J6elEzWWx3ckFINHdzSEUvTWh2TUlrTzFEa1ZCNVJaSVlzN1hHYzJRSHpaQ3NoUXgycmlnYnMxTwozaGJQLzJBdXJSVHJuOVlpcGxVTG5SN1Iwb2FmdkNBbndwVFp5N1J4dlU2YXBrWjhjQmt5RFpoM0UyZWtQcklQCkRlaHZRVk9QYXJCV2I3VGdCV1ltZFN6eXYyWWxod2dFN04yU3RLdHJheFBHbCt0TUd0dGJhWFJoWW5QUHlDbUYKQlZaNTRaMXNHNHNsVWJiU0E1RVFCTEROQzQ2c1JlTHNDaWR6UXdJREFRQUJBb0lCQUN1ckU2c3BqS292dyt0YgprZkw0V01nQU82WmFPc0VpWHZRSUxNcm1tcEMwT2NDR3pkdnIrc2lsNWNaVGdESmY3dStoaHNpZFhKbVVYSVVKClpoZ1Fvb1ZUMFJvVFlHUmJ4YTVsLzB3UFF6VDZ0T0IwNkRDUDVoSHRWRXZhWUNRQkgrU216TXpMYTIyWDhUaHIKNEVWbUQ0cGxzQm5LbVlyaDJ2Y0pHUHBYdmZZNFBCeS9oRzZpM0h1NDA1aXBGWDBHZzJJS3pzdlZaSjMyeFlLWQpEa2Jta0VKYitQbWtnQ245elc1NXY4L2Y5SmV5Z2crenpqZHhQUU1LMVFnNGhON3hOTVg4NTR4bHhNS2FSSjRWCmZFYmkxRXA5dCsrRXpERkR2Z2pNRWVKT0tnUnhIRzJCME5DblBBUnRiQ1M2VGJHeUdMSDl1dm5aSGlkbjU0anEKQVVpa3JWRUNnWUVBek9CL1FuMEZFTFpqM25SSzZXOFZSVGVobkhZTGhMQ2JKejJURS9uTkx6bmhxeFlhMjM0YgpEMWtOWTFrUUh3Ynk5Q0k5VDE2NllNcFJkRVBkOUVJSXE1ZGhkM21JUmxxa0hTSDhDMDZyTHQ0eWx0dndQSEJECm9EdFFkOXJRbFhyRUppY0t3QUpMeDFDenQ5Vk9CZTVwUi9mNU9zOHc3cTN0NEpHYjJIVU81c2tDZ1lFQXdPbU4KMlZ5emhMakMzMDJDUXk0SVllZjZ4NjVia0Y2WXRwdU8vQ0RFWFFwRjJoYmtnYUFuUEYwZDNnTWFKVkNSQUpFTApNc24rT2Jid0dMVGR1RzQvaVQvYTdZWjVGaEJ5T0hNTWhjSklEa2R3ZnpIbFd6TUZqSkppSnpWUWp0Qm1mM1ZQCmtnZ3FLV2hjSzFEOW9aYzBYeUsvT0ZTcStHUUpCYkloTGJQUGM2c0NnWUVBazFjd3JvUnl6QjRmbkxCTjM2dC8KeEpQSnFsaEsyRmFhZnBJTjRHUGFhSWhiLzBxYWJoZzNKY2FKbGxWSy9zVmtuS2F6S1EyYlJGaThVNzByTnFyMgp5VkRKUzc4ZmZsbFpoWW9YVlpweUNmYktzeXZoamRXL0RORWJnZGJnQTJDVENFMHpzZnIwdkpjUmFMZ0NzTWxRCjllMGtWR01GY2VHc0hjRWFMNFdmL2VFQ2dZRUFwR1VqemF6ekN0S010dEVOaGdSdmZrZTdiWGtIYkpOQW5yVVgKOTRKUTlGeXh4RFdvQzFNWXZKYzV3WjF4SllWdjNFUytmMHlsaWpkOGlnRnZ4U0Ntb21hNVFadE1DdUovQTkzLwpPT21ra0E2UExzV3RoN2VHTGhIODlSNjVCTXRSM2FKeDZhZHRqcFh4bmJSS1ArOWo0UUx5WTZXN2dTdDJpTlVRCjh5cDlTanNDZ1lFQXErbnJMbkZuRkpWdGhLbzBBdGF6aWlTNWhIeDV2NEkraFlCK09SQVcrN0VHM2xibWNJbzYKeTY3YWFINzkyckwzUjE2TFFmaHBoYjdNUkx4Zll5VkdZejhMd2tpN1dlNitFNVNDR2ZxZDhQSGVpU2t5NkJSRwpmclUzbm52dnliS1hRNEp6Vmc0RGJuUlhrRTFzTXlpSURmMVg4VmRyM2hQb3l4azFSM0JnSi9zPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:
  disable-envoy-version-check: "false"

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9090"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: "disabled"
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.42.0.0/16

  kube-proxy-replacement: "strict"
  kube-proxy-replacement-healthz-bind-address: "0.0.0.0:10256"
  bpf-lb-sock: "false"
  node-port-range: "30000,32767"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9965"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    port-distribution
    icmp
    http
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: "100ms"
  
  enable-envoy-config: true
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n\n        location / {\n            try_files $uri $uri/ /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgploadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumegressnatpolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumbgploadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumegressnatpolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9964"
  labels:
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: envoy-metrics
    port: 9964
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9965"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "3ba12e60c669d097e81e699795dfd089e13077374dc2b31bb59790f05fb9bb69"
      labels:
        k8s-app: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.20.254"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
              - "--log-file=/var/run/cilium/cilium-cni.log"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: peer-service
          containerPort: 4244
          hostPort: 4244
          protocol: TCP
        - name: prometheus
          containerPort: 9090
          hostPort: 9090
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9964
          hostPort: 9964
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9965
          hostPort: 9965
          protocol: TCP
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.12.2@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36@sha256:986f8b04cfdb35cf714701e58e35da0ee63da2b8a048ab596ccb49de58d5ba36"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.20.254"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "3ba12e60c669d097e81e699795dfd089e13077374dc2b31bb59790f05fb9bb69"
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.12.2@sha256:00508f78dae5412161fa40ee30069c2802aef20f7bdd20e91423103ba8c0df6e
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "192.168.20.254"
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "04d8df56d8d39ccc49c160739215188fadd610e710e3445ccc743cfc04b1f177"
      labels:
        k8s-app: hubble-relay
    spec:
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.12.2@sha256:6f3496c28f23542f2645d614c0a9e79e3b0ae2732080da794db41c33e4379e5c@sha256:6f3496c28f23542f2645d614c0a9e79e3b0ae2732080da794db41c33e4379e5c"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-nginx-configmap-checksum: "c7f0d2cfca5909a7fbb6128aee6bcf1f73a8c7577509a0b548ca3b4ace2b1888"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.9.2@sha256:d3596efc94a41c6b772b9afe6fe47c17417658956e04c3e2a28d293f2670663e"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
          - name: hubble-ui-nginx-conf
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: nginx.conf
          - name: tmp-dir
            mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.9.2@sha256:a3ac4d5b87889c9f7cc6323e86d3126b0d382933bd64f44382a92778b0cde5d7"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
